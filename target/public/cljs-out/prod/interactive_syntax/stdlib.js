// Compiled by ClojureScript 1.11.99 {:target :nodejs, :nodejs-rt false, :language-out :ecmascript-next, :optimizations :simple}
goog.provide('interactive_syntax.stdlib');
goog.require('cljs.core');
goog.require('cljs.core');
goog.require('cljs.analyzer');
goog.require('cljs.analyzer.api');
goog.require('cljs.compiler');
goog.require('cljs.env');
goog.require('cljs.js');
goog.require('cljs.pprint');
goog.require('cljs.reader');
goog.require('cljs.source_map');
goog.require('cljs.spec.alpha');
goog.require('cljs.spec.gen.alpha');
goog.require('cljs.spec.test.alpha');
goog.require('cljs.stacktrace');
goog.require('cljs.tagged_literals');
goog.require('cljs.test');
goog.require('cljs.tools.reader');
goog.require('cljs.math');
goog.require('cljs.repl');
goog.require('clojure.walk');
goog.require('clojure.string');
goog.require('clojure.set');
goog.require('clojure.data');
goog.require('clojure.edn');
goog.require('clojure.zip');
goog.require('clojure.reflect');
goog.require('clojure.data.xml');
goog.require('reagent.core');
goog.require('reagent.dom');
goog.require('oops.core');
goog.require('garden.core');
goog.require('garden.color');
goog.require('garden.compiler');
goog.require('garden.compression');
goog.require('garden.util');
goog.require('garden.selectors');
goog.require('garden.types');
goog.require('garden.units');
goog.require('cognitect.transit');
goog.require('ajax.core');
goog.require('ajax.protocols');
goog.require('alandipert.storage_atom');
goog.require('zprint.core');
interactive_syntax.stdlib.node$module$react = require('react');
interactive_syntax.stdlib.node$module$react_dom = require('react-dom');
interactive_syntax.stdlib.node$module$react_bootstrap = require('react-bootstrap');
interactive_syntax.stdlib.node$module$jszip = require('jszip');
interactive_syntax.stdlib.node$module$react_split_pane = require('react-split-pane');
interactive_syntax.stdlib.node$module$react_switch = require('react-switch');
interactive_syntax.stdlib.node$module$codemirror = require('codemirror');
interactive_syntax.stdlib.node$module$react_codemirror2 = require('react-codemirror2');
goog.require('goog.object');
goog.scope(function(){
interactive_syntax.stdlib.goog$module$goog$object = goog.module.get('goog.object');
});
interactive_syntax.stdlib.injectable = "(ns visr.core\n  (:refer-clojure :exclude [print println])\n  (:require [visr.private :as private]))\n(def print private/print)\n(def println private/println)\n(def css private/css)\n(def render-visr private/render-visr)\n(defmacro defvisr [name & props]\n  (let [{:keys [render\n                elaborate\n                function?\n                name+render\n                name+elaborate]} (private/parse-defvisr name props)]\n    `(do (defn ~name+render\n           ~render)\n         ~(if function?\n            `(defn ~name+elaborate\n               ~elaborate)\n            `(defmacro ~name+elaborate\n               ~elaborate)))))\n(defn empty-visr+render [this] [:div (:message @this)])\n(defmacro empty-visr+elaborate [this] (:message this))\n";

/**
 * @interface
 */
interactive_syntax.stdlib.VISR = function(){};

var interactive_syntax$stdlib$VISR$render$dyn_57889 = (function (this$,updater){
var x__21502__auto__ = (((this$ == null))?null:this$);
var m__21503__auto__ = (interactive_syntax.stdlib.render[goog.typeOf(x__21502__auto__)]);
if((!((m__21503__auto__ == null)))){
return m__21503__auto__.call(null,this$,updater);
} else {
var m__21501__auto__ = (interactive_syntax.stdlib.render["_"]);
if((!((m__21501__auto__ == null)))){
return m__21501__auto__.call(null,this$,updater);
} else {
throw cljs.core.missing_protocol.call(null,"VISR.render",this$);
}
}
});
/**
 * Syntax (() -> Syntax) -> DOMElement
 */
interactive_syntax.stdlib.render = (function interactive_syntax$stdlib$render(this$,updater){
if((((!((this$ == null)))) && ((!((this$.interactive_syntax$stdlib$VISR$render$arity$2 == null)))))){
return this$.interactive_syntax$stdlib$VISR$render$arity$2(this$,updater);
} else {
return interactive_syntax$stdlib$VISR$render$dyn_57889.call(null,this$,updater);
}
});

var interactive_syntax$stdlib$VISR$elaborate$dyn_57890 = (function (this$){
var x__21502__auto__ = (((this$ == null))?null:this$);
var m__21503__auto__ = (interactive_syntax.stdlib.elaborate[goog.typeOf(x__21502__auto__)]);
if((!((m__21503__auto__ == null)))){
return m__21503__auto__.call(null,this$);
} else {
var m__21501__auto__ = (interactive_syntax.stdlib.elaborate["_"]);
if((!((m__21501__auto__ == null)))){
return m__21501__auto__.call(null,this$);
} else {
throw cljs.core.missing_protocol.call(null,"VISR.elaborate",this$);
}
}
});
/**
 * Syntax -> Syntax
 */
interactive_syntax.stdlib.elaborate = (function interactive_syntax$stdlib$elaborate(this$){
if((((!((this$ == null)))) && ((!((this$.interactive_syntax$stdlib$VISR$elaborate$arity$1 == null)))))){
return this$.interactive_syntax$stdlib$VISR$elaborate$arity$1(this$);
} else {
return interactive_syntax$stdlib$VISR$elaborate$dyn_57890.call(null,this$);
}
});

interactive_syntax.stdlib.render_visr = (function interactive_syntax$stdlib$render_visr(p__57891,visr){
var map__57892 = p__57891;
var map__57892__$1 = cljs.core.__destructure_map.call(null,map__57892);
var db = map__57892__$1;
var output = cljs.core.get.call(null,map__57892__$1,new cljs.core.Keyword(null,"output","output",-1105869043));
return cljs.core.swap_BANG_.call(null,output,cljs.core.conj,visr);
});
interactive_syntax.stdlib.wrap_printer = (function interactive_syntax$stdlib$wrap_printer(printer,db,x){
if((((!((x == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === x.interactive_syntax$stdlib$VISR$))))?true:(((!x.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_.call(null,interactive_syntax.stdlib.VISR,x):false)):cljs.core.native_satisfies_QMARK_.call(null,interactive_syntax.stdlib.VISR,x))){
return interactive_syntax.stdlib.render_visr.call(null,db,x);
} else {
return printer.call(null,x);
}
});
interactive_syntax.stdlib.visr__GT_render = (function interactive_syntax$stdlib$visr__GT_render(visr){
return cljs.core.symbol.call(null,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(visr),"+render"].join(''));
});
interactive_syntax.stdlib.visr__GT_elaborate = (function interactive_syntax$stdlib$visr__GT_elaborate(visr){
return cljs.core.symbol.call(null,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(visr),"+elaborate"].join(''));
});
interactive_syntax.stdlib.buffer_writes = (function interactive_syntax$stdlib$buffer_writes(var_args){
var args__22092__auto__ = [];
var len__22082__auto___57902 = arguments.length;
var i__22083__auto___57903 = (0);
while(true){
if((i__22083__auto___57903 < len__22082__auto___57902)){
args__22092__auto__.push((arguments[i__22083__auto___57903]));

var G__57904 = (i__22083__auto___57903 + (1));
i__22083__auto___57903 = G__57904;
continue;
} else {
}
break;
}

var argseq__22093__auto__ = ((((3) < args__22092__auto__.length))?(new cljs.core.IndexedSeq(args__22092__auto__.slice((3)),(0),null)):null);
return interactive_syntax.stdlib.buffer_writes.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__22093__auto__);
});

(interactive_syntax.stdlib.buffer_writes.cljs$core$IFn$_invoke$arity$variadic = (function (main,buff,timeout,p__57898){
var vec__57899 = p__57898;
var timeout_limit = cljs.core.nth.call(null,vec__57899,(0),null);
return (function (k,r,o,n){
if(cljs.core._EQ_.call(null,o,n)){
return null;
} else {
if(cljs.core.truth_(cljs.core.deref.call(null,timeout))){
clearTimeout(cljs.core.deref.call(null,timeout));
} else {
}

return cljs.core.reset_BANG_.call(null,timeout,setTimeout((function (){
cljs.core.reset_BANG_.call(null,timeout,false);

return cljs.core.reset_BANG_.call(null,main,cljs.core.deref.call(null,buff));
}),(function (){var or__20754__auto__ = timeout_limit;
if(cljs.core.truth_(or__20754__auto__)){
return or__20754__auto__;
} else {
return (1000);
}
})()));
}
});
}));

(interactive_syntax.stdlib.buffer_writes.cljs$lang$maxFixedArity = (3));

/** @this {Function} */
(interactive_syntax.stdlib.buffer_writes.cljs$lang$applyTo = (function (seq57894){
var G__57895 = cljs.core.first.call(null,seq57894);
var seq57894__$1 = cljs.core.next.call(null,seq57894);
var G__57896 = cljs.core.first.call(null,seq57894__$1);
var seq57894__$2 = cljs.core.next.call(null,seq57894__$1);
var G__57897 = cljs.core.first.call(null,seq57894__$2);
var seq57894__$3 = cljs.core.next.call(null,seq57894__$2);
var self__22067__auto__ = this;
return self__22067__auto__.cljs$core$IFn$_invoke$arity$variadic(G__57895,G__57896,G__57897,seq57894__$3);
}));

interactive_syntax.stdlib.draw_view = (function interactive_syntax$stdlib$draw_view(var_args){
var args__22092__auto__ = [];
var len__22082__auto___57910 = arguments.length;
var i__22083__auto___57911 = (0);
while(true){
if((i__22083__auto___57911 < len__22082__auto___57910)){
args__22092__auto__.push((arguments[i__22083__auto___57911]));

var G__57912 = (i__22083__auto___57911 + (1));
i__22083__auto___57911 = G__57912;
continue;
} else {
}
break;
}

var argseq__22093__auto__ = ((((2) < args__22092__auto__.length))?(new cljs.core.IndexedSeq(args__22092__auto__.slice((2)),(0),null)):null);
return interactive_syntax.stdlib.draw_view.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__22093__auto__);
});

(interactive_syntax.stdlib.draw_view.cljs$core$IFn$_invoke$arity$variadic = (function (p__57908,app,extras){
var map__57909 = p__57908;
var map__57909__$1 = cljs.core.__destructure_map.call(null,map__57909);
var db = map__57909__$1;
var app_pane = cljs.core.get.call(null,map__57909__$1,new cljs.core.Keyword(null,"app-pane","app-pane",45757101));
cljs.core.reset_BANG_.call(null,app_pane,app);

cljs.core.add_watch.call(null,app_pane,new cljs.core.Keyword("interactive-syntax.stdlib","ready","interactive-syntax.stdlib/ready",1075554497),(function (k,r,o,n){
if(((cljs.core._EQ_.call(null,o,n)) || (cljs.core.boolean_QMARK_.call(null,n)))){
return null;
} else {
if(cljs.core.truth_(cljs.core.some.call(null,cljs.core.partial.call(null,cljs.core._EQ_,new cljs.core.Keyword(null,"fullscreen","fullscreen",-4371054)),extras))){
cljs.core.deref.call(null,app_pane).requestFullscreen();
} else {
}

return cljs.core.remove_watch.call(null,r,k);
}
}));

return null;
}));

(interactive_syntax.stdlib.draw_view.cljs$lang$maxFixedArity = (2));

/** @this {Function} */
(interactive_syntax.stdlib.draw_view.cljs$lang$applyTo = (function (seq57905){
var G__57906 = cljs.core.first.call(null,seq57905);
var seq57905__$1 = cljs.core.next.call(null,seq57905);
var G__57907 = cljs.core.first.call(null,seq57905__$1);
var seq57905__$2 = cljs.core.next.call(null,seq57905__$1);
var self__22067__auto__ = this;
return self__22067__auto__.cljs$core$IFn$_invoke$arity$variadic(G__57906,G__57907,seq57905__$2);
}));

interactive_syntax.stdlib.parse_defvisr = (function interactive_syntax$stdlib$parse_defvisr(name,stx){
var this$ = cljs.core.gensym.call(null,new cljs.core.Symbol(null,"this","this",1028897902,null));
var props = cljs.core.PersistentArrayMap.EMPTY;
var rst = stx;
while(true){
if(cljs.core.empty_QMARK_.call(null,rst)){
var map__57942 = props;
var map__57942__$1 = cljs.core.__destructure_map.call(null,map__57942);
var elaborate = cljs.core.get.call(null,map__57942__$1,new cljs.core.Keyword(null,"elaborate","elaborate",1570746036));
var render = cljs.core.get.call(null,map__57942__$1,new cljs.core.Keyword(null,"render","render",-1408033454));
var state = cljs.core.get.call(null,map__57942__$1,new cljs.core.Keyword(null,"state","state",-1988618099));
var state_render_mixin = cljs.core.get.call(null,map__57942__$1,new cljs.core.Keyword(null,"state-render-mixin","state-render-mixin",403463167));
var full_QMARK_ = cljs.core.get.call(null,map__57942__$1,new cljs.core.Keyword(null,"full?","full?",-1733206813));
return cljs.core.assoc.call(null,props,new cljs.core.Keyword(null,"this","this",-611633625),this$,new cljs.core.Keyword(null,"render","render",-1408033454),(cljs.core.truth_((function (){var and__20748__auto__ = state;
if(cljs.core.truth_(and__20748__auto__)){
return full_QMARK_;
} else {
return and__20748__auto__;
}
})())?cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,this$,null,(1),null)))))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","let","cljs.core/let",-308701135,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,state_render_mixin)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),null,(1),null)),(new cljs.core.List(null,render,null,(1),null))))),null,(1),null)),(new cljs.core.List(null,this$,null,(1),null))))),null,(1),null))))),null,(1),null))))):(cljs.core.truth_(state)?cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,this$,null,(1),null)))))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","let","cljs.core/let",-308701135,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,state_render_mixin)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),null,(1),null)),(new cljs.core.List(null,render,null,(1),null))))),null,(1),null))))),null,(1),null))))):render
)),new cljs.core.Keyword(null,"elaborate","elaborate",1570746036),(cljs.core.truth_(state)?cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,cljs.core.apply.call(null,cljs.core.array_map,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Keyword(null,"keys","keys",1068423698),null,(1),null)),(new cljs.core.List(null,cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,state)))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,"as","as",1148689641),null,(1),null)),(new cljs.core.List(null,this$,null,(1),null)))))),null,(1),null)))))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),null,(1),null)),(new cljs.core.List(null,elaborate,null,(1),null))))),null,(1),null)),(new cljs.core.List(null,this$,null,(1),null))))),null,(1),null))))):elaborate),new cljs.core.Keyword(null,"name+render","name+render",-1940559249),interactive_syntax.stdlib.visr__GT_render.call(null,name),new cljs.core.Keyword(null,"name+elaborate","name+elaborate",1268173661),interactive_syntax.stdlib.visr__GT_elaborate.call(null,name));
} else {
var fst = cljs.core.first.call(null,rst);
if(cljs.core.seq_QMARK_.call(null,fst)){
var pred__57943 = cljs.core.contains_QMARK_;
var expr__57944 = cljs.core.first.call(null,fst);
if(cljs.core.truth_(pred__57943.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"state","state",-1988618099),null,new cljs.core.Symbol(null,"state","state",-348086572,null),null], null), null),expr__57944))){
var G__57968 = cljs.core.assoc.call(null,props,new cljs.core.Keyword(null,"state","state",-1988618099),(function (){var iter__21676__auto__ = ((function (props,rst,pred__57943,expr__57944,fst,this$){
return (function interactive_syntax$stdlib$parse_defvisr_$_iter__57946(s__57947){
return (new cljs.core.LazySeq(null,((function (props,rst,pred__57943,expr__57944,fst,this$){
return (function (){
var s__57947__$1 = s__57947;
while(true){
var temp__5720__auto__ = cljs.core.seq.call(null,s__57947__$1);
if(temp__5720__auto__){
var s__57947__$2 = temp__5720__auto__;
if(cljs.core.chunked_seq_QMARK_.call(null,s__57947__$2)){
var c__21674__auto__ = cljs.core.chunk_first.call(null,s__57947__$2);
var size__21675__auto__ = cljs.core.count.call(null,c__21674__auto__);
var b__57949 = cljs.core.chunk_buffer.call(null,size__21675__auto__);
if((function (){var i__57948 = (0);
while(true){
if((i__57948 < size__21675__auto__)){
var vec__57950 = cljs.core._nth.call(null,c__21674__auto__,i__57948);
var k = cljs.core.nth.call(null,vec__57950,(0),null);
var v = cljs.core.nth.call(null,vec__57950,(1),null);
cljs.core.chunk_append.call(null,b__57949,k);

var G__57970 = (i__57948 + (1));
i__57948 = G__57970;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__57949),interactive_syntax$stdlib$parse_defvisr_$_iter__57946.call(null,cljs.core.chunk_rest.call(null,s__57947__$2)));
} else {
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__57949),null);
}
} else {
var vec__57953 = cljs.core.first.call(null,s__57947__$2);
var k = cljs.core.nth.call(null,vec__57953,(0),null);
var v = cljs.core.nth.call(null,vec__57953,(1),null);
return cljs.core.cons.call(null,k,interactive_syntax$stdlib$parse_defvisr_$_iter__57946.call(null,cljs.core.rest.call(null,s__57947__$2)));
}
} else {
return null;
}
break;
}
});})(props,rst,pred__57943,expr__57944,fst,this$))
,null,null));
});})(props,rst,pred__57943,expr__57944,fst,this$))
;
return iter__21676__auto__.call(null,cljs.core.partition.call(null,(2),cljs.core.rest.call(null,fst)));
})(),new cljs.core.Keyword(null,"state-render-mixin","state-render-mixin",403463167),cljs.core.apply.call(null,cljs.core.concat,(function (){var iter__21676__auto__ = ((function (props,rst,pred__57943,expr__57944,fst,this$){
return (function interactive_syntax$stdlib$parse_defvisr_$_iter__57956(s__57957){
return (new cljs.core.LazySeq(null,((function (props,rst,pred__57943,expr__57944,fst,this$){
return (function (){
var s__57957__$1 = s__57957;
while(true){
var temp__5720__auto__ = cljs.core.seq.call(null,s__57957__$1);
if(temp__5720__auto__){
var s__57957__$2 = temp__5720__auto__;
if(cljs.core.chunked_seq_QMARK_.call(null,s__57957__$2)){
var c__21674__auto__ = cljs.core.chunk_first.call(null,s__57957__$2);
var size__21675__auto__ = cljs.core.count.call(null,c__21674__auto__);
var b__57959 = cljs.core.chunk_buffer.call(null,size__21675__auto__);
if((function (){var i__57958 = (0);
while(true){
if((i__57958 < size__21675__auto__)){
var vec__57960 = cljs.core._nth.call(null,c__21674__auto__,i__57958);
var k = cljs.core.nth.call(null,vec__57960,(0),null);
var val_shell = cljs.core.nth.call(null,vec__57960,(1),null);
cljs.core.chunk_append.call(null,b__57959,(function (){var map__57963 = val_shell;
var map__57963__$1 = cljs.core.__destructure_map.call(null,map__57963);
var value = cljs.core.get.call(null,map__57963__$1,new cljs.core.Keyword(null,"value","value",305978217),val_shell);
var timeout = cljs.core.get.call(null,map__57963__$1,new cljs.core.Keyword(null,"timeout","timeout",-318625318),(1000));
return cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol(null,"t__57913__auto__","t__57913__auto__",-1553925372,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("reagent.core","atom","reagent.core/atom",1748890217,null),null,(1),null)),(new cljs.core.List(null,false,null,(1),null))))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,"k__57914__auto__","k__57914__auto__",-2026501024,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("reagent.core","cursor","reagent.core/cursor",-1137097804,null),null,(1),null)),(new cljs.core.List(null,this$,null,(1),null)),(new cljs.core.List(null,cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,cljs.core.keyword.call(null,k),null,(1),null)))))),null,(1),null))))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,"___57915__auto__","___57915__auto__",1851980243,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","when-not","cljs.core/when-not",-556141047,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","deref","cljs.core/deref",1901963335,null),null,(1),null)),(new cljs.core.List(null,this$,null,(1),null))))),null,(1),null)),(new cljs.core.List(null,cljs.core.keyword.call(null,k),null,(1),null))))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","reset!","cljs.core/reset!",657404621,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,"k__57914__auto__","k__57914__auto__",-2026501024,null),null,(1),null)),(new cljs.core.List(null,value,null,(1),null))))),null,(1),null))))),null,(1),null)),(new cljs.core.List(null,k,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("reagent.core","atom","reagent.core/atom",1748890217,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","deref","cljs.core/deref",1901963335,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,"k__57914__auto__","k__57914__auto__",-2026501024,null),null,(1),null))))),null,(1),null))))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,"___57915__auto__","___57915__auto__",1851980243,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","add-watch","cljs.core/add-watch",622836799,null),null,(1),null)),(new cljs.core.List(null,k,null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,"capture","capture",-677031143),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("visr.private","buffer-writes","visr.private/buffer-writes",-1722263338,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,"k__57914__auto__","k__57914__auto__",-2026501024,null),null,(1),null)),(new cljs.core.List(null,k,null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,"t__57913__auto__","t__57913__auto__",-1553925372,null),null,(1),null)),(new cljs.core.List(null,timeout,null,(1),null))))),null,(1),null))))),null,(1),null))))));
})());

var G__57971 = (i__57958 + (1));
i__57958 = G__57971;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__57959),interactive_syntax$stdlib$parse_defvisr_$_iter__57956.call(null,cljs.core.chunk_rest.call(null,s__57957__$2)));
} else {
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__57959),null);
}
} else {
var vec__57964 = cljs.core.first.call(null,s__57957__$2);
var k = cljs.core.nth.call(null,vec__57964,(0),null);
var val_shell = cljs.core.nth.call(null,vec__57964,(1),null);
return cljs.core.cons.call(null,(function (){var map__57967 = val_shell;
var map__57967__$1 = cljs.core.__destructure_map.call(null,map__57967);
var value = cljs.core.get.call(null,map__57967__$1,new cljs.core.Keyword(null,"value","value",305978217),val_shell);
var timeout = cljs.core.get.call(null,map__57967__$1,new cljs.core.Keyword(null,"timeout","timeout",-318625318),(1000));
return cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol(null,"t__57913__auto__","t__57913__auto__",-1553925372,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("reagent.core","atom","reagent.core/atom",1748890217,null),null,(1),null)),(new cljs.core.List(null,false,null,(1),null))))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,"k__57914__auto__","k__57914__auto__",-2026501024,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("reagent.core","cursor","reagent.core/cursor",-1137097804,null),null,(1),null)),(new cljs.core.List(null,this$,null,(1),null)),(new cljs.core.List(null,cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,cljs.core.keyword.call(null,k),null,(1),null)))))),null,(1),null))))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,"___57915__auto__","___57915__auto__",1851980243,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","when-not","cljs.core/when-not",-556141047,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","deref","cljs.core/deref",1901963335,null),null,(1),null)),(new cljs.core.List(null,this$,null,(1),null))))),null,(1),null)),(new cljs.core.List(null,cljs.core.keyword.call(null,k),null,(1),null))))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","reset!","cljs.core/reset!",657404621,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,"k__57914__auto__","k__57914__auto__",-2026501024,null),null,(1),null)),(new cljs.core.List(null,value,null,(1),null))))),null,(1),null))))),null,(1),null)),(new cljs.core.List(null,k,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("reagent.core","atom","reagent.core/atom",1748890217,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","deref","cljs.core/deref",1901963335,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,"k__57914__auto__","k__57914__auto__",-2026501024,null),null,(1),null))))),null,(1),null))))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,"___57915__auto__","___57915__auto__",1851980243,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","add-watch","cljs.core/add-watch",622836799,null),null,(1),null)),(new cljs.core.List(null,k,null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,"capture","capture",-677031143),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("visr.private","buffer-writes","visr.private/buffer-writes",-1722263338,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,"k__57914__auto__","k__57914__auto__",-2026501024,null),null,(1),null)),(new cljs.core.List(null,k,null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,"t__57913__auto__","t__57913__auto__",-1553925372,null),null,(1),null)),(new cljs.core.List(null,timeout,null,(1),null))))),null,(1),null))))),null,(1),null))))));
})(),interactive_syntax$stdlib$parse_defvisr_$_iter__57956.call(null,cljs.core.rest.call(null,s__57957__$2)));
}
} else {
return null;
}
break;
}
});})(props,rst,pred__57943,expr__57944,fst,this$))
,null,null));
});})(props,rst,pred__57943,expr__57944,fst,this$))
;
return iter__21676__auto__.call(null,cljs.core.partition.call(null,(2),cljs.core.rest.call(null,fst)));
})()));
var G__57969 = cljs.core.rest.call(null,rst);
props = G__57968;
rst = G__57969;
continue;
} else {
if(cljs.core.truth_(pred__57943.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,"render","render",232498073,null),null,new cljs.core.Keyword(null,"render","render",-1408033454),null], null), null),expr__57944))){
var G__57972 = cljs.core.assoc.call(null,props,new cljs.core.Keyword(null,"render","render",-1408033454),cljs.core.rest.call(null,fst),new cljs.core.Keyword(null,"full?","full?",-1733206813),false);
var G__57973 = cljs.core.rest.call(null,rst);
props = G__57972;
rst = G__57973;
continue;
} else {
if(cljs.core.truth_(pred__57943.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,"render-full","render-full",1465972670,null),null,new cljs.core.Keyword(null,"render-full","render-full",-174558857),null], null), null),expr__57944))){
var G__57974 = cljs.core.assoc.call(null,props,new cljs.core.Keyword(null,"render","render",-1408033454),cljs.core.rest.call(null,fst),new cljs.core.Keyword(null,"full?","full?",-1733206813),true);
var G__57975 = cljs.core.rest.call(null,rst);
props = G__57974;
rst = G__57975;
continue;
} else {
if(cljs.core.truth_(pred__57943.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,"elaborate-fn","elaborate-fn",2122072278,null),null,new cljs.core.Keyword(null,"elaborate-fn","elaborate-fn",481540751),null], null), null),expr__57944))){
var G__57976 = cljs.core.assoc.call(null,props,new cljs.core.Keyword(null,"elaborate","elaborate",1570746036),cljs.core.rest.call(null,fst),new cljs.core.Keyword(null,"function?","function?",88718602),true);
var G__57977 = cljs.core.rest.call(null,rst);
props = G__57976;
rst = G__57977;
continue;
} else {
if(cljs.core.truth_(pred__57943.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"elaborate","elaborate",1570746036),null,new cljs.core.Symbol(null,"elaborate","elaborate",-1083689733,null),null], null), null),expr__57944))){
var G__57978 = cljs.core.assoc.call(null,props,new cljs.core.Keyword(null,"elaborate","elaborate",1570746036),cljs.core.rest.call(null,fst),new cljs.core.Keyword(null,"function?","function?",88718602),false);
var G__57979 = cljs.core.rest.call(null,rst);
props = G__57978;
rst = G__57979;
continue;
} else {
throw (new Error(["No matching clause: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__57944)].join('')));
}
}
}
}
}
} else {
return null;
}
}
break;
}
});
interactive_syntax.stdlib.state_injection = (function interactive_syntax$stdlib$state_injection(lib_name,lib_publics){
return cljs.core.PersistentArrayMap.createAsIfByAssoc([lib_name,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),lib_name,new cljs.core.Keyword(null,"global-exports","global-exports",-1644865592),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"defs","defs",1398449717),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__21676__auto__ = (function interactive_syntax$stdlib$state_injection_$_iter__57980(s__57981){
return (new cljs.core.LazySeq(null,(function (){
var s__57981__$1 = s__57981;
while(true){
var temp__5720__auto__ = cljs.core.seq.call(null,s__57981__$1);
if(temp__5720__auto__){
var s__57981__$2 = temp__5720__auto__;
if(cljs.core.chunked_seq_QMARK_.call(null,s__57981__$2)){
var c__21674__auto__ = cljs.core.chunk_first.call(null,s__57981__$2);
var size__21675__auto__ = cljs.core.count.call(null,c__21674__auto__);
var b__57983 = cljs.core.chunk_buffer.call(null,size__21675__auto__);
if((function (){var i__57982 = (0);
while(true){
if((i__57982 < size__21675__auto__)){
var vec__57984 = cljs.core._nth.call(null,c__21674__auto__,i__57982);
var k = cljs.core.nth.call(null,vec__57984,(0),null);
var v = cljs.core.nth.call(null,vec__57984,(1),null);
cljs.core.chunk_append.call(null,b__57983,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"name","name",1843675177),cljs.core.symbol.call(null,v)], null)], null));

var G__57990 = (i__57982 + (1));
i__57982 = G__57990;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__57983),interactive_syntax$stdlib$state_injection_$_iter__57980.call(null,cljs.core.chunk_rest.call(null,s__57981__$2)));
} else {
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__57983),null);
}
} else {
var vec__57987 = cljs.core.first.call(null,s__57981__$2);
var k = cljs.core.nth.call(null,vec__57987,(0),null);
var v = cljs.core.nth.call(null,vec__57987,(1),null);
return cljs.core.cons.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"name","name",1843675177),cljs.core.symbol.call(null,v)], null)], null),interactive_syntax$stdlib$state_injection_$_iter__57980.call(null,cljs.core.rest.call(null,s__57981__$2)));
}
} else {
return null;
}
break;
}
}),null,null));
});
return iter__21676__auto__.call(null,lib_publics);
})())], null)]);
});
interactive_syntax.stdlib.sandbox_env = (function interactive_syntax$stdlib$sandbox_env(){
return cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"FinalizationRegistry","FinalizationRegistry",1057550144),new cljs.core.Keyword(null,"Function","Function",1904540321),new cljs.core.Keyword(null,"Array","Array",-2064027806),new cljs.core.Keyword(null,"isNaN","isNaN",-1565627261),new cljs.core.Keyword(null,"parseInt","parseInt",-1732855101),new cljs.core.Keyword(null,"HTMLElement","HTMLElement",-879152953),new cljs.core.Keyword(null,"clojure","clojure",438975815),new cljs.core.Keyword(null,"parseFloat","parseFloat",-592520345),new cljs.core.Keyword(null,"$stopifyArray","$stopifyArray",-331371768),new cljs.core.Keyword(null,"XMLHttpRequest","XMLHttpRequest",1263261001),new cljs.core.Keyword(null,"JSON","JSON",-17446294),new cljs.core.Keyword(null,"decodeURI","decodeURI",-636286294),new cljs.core.Keyword(null,"Set","Set",-1553598550),new cljs.core.Keyword(null,"setInterval","setInterval",449476715),new cljs.core.Keyword(null,"btoa","btoa",258514411),new cljs.core.Keyword(null,"alert","alert",-571950580),new cljs.core.Keyword(null,"atob","atob",1913678861),new cljs.core.Keyword(null,"encodeURI","encodeURI",1401024877),new cljs.core.Keyword(null,"Math","Math",392756045),new cljs.core.Keyword(null,"setTimeout","setTimeout",2080423150),new cljs.core.Keyword(null,"window","window",724519534),new cljs.core.Keyword(null,"document","document",-1329188687),new cljs.core.Keyword(null,"URLSearchParams","URLSearchParams",1022705937),new cljs.core.Keyword(null,"stopify","stopify",-2091957516),new cljs.core.Keyword(null,"navigator","navigator",2050004181),new cljs.core.Keyword(null,"WebAssembly","WebAssembly",-694122059),new cljs.core.Keyword(null,"DOMParser","DOMParser",-274098538),new cljs.core.Keyword(null,"Blob","Blob",-1638835752),new cljs.core.Keyword(null,"clearTimeout","clearTimeout",633695321),new cljs.core.Keyword(null,"console","console",1228072057),new cljs.core.Keyword(null,"encodeURIComponent","encodeURIComponent",1146917049),new cljs.core.Keyword(null,"TextEncoder","TextEncoder",-1457388295),new cljs.core.Keyword(null,"CanvasRenderingContext2D","CanvasRenderingContext2D",1929472761),new cljs.core.Keyword(null,"Reflect","Reflect",1830314809),new cljs.core.Keyword(null,"decodeURIComponent","decodeURIComponent",-1330389542),new cljs.core.Keyword(null,"clearInterval","clearInterval",-1550970629),new cljs.core.Keyword(null,"URL","URL",-1378863845),new cljs.core.Keyword(null,"Object","Object",-1579320773),new cljs.core.Keyword(null,"Location","Location",-1926306596),new cljs.core.Keyword(null,"cljs","cljs",1492417629),new cljs.core.Keyword(null,"String","String",584378334)],[FinalizationRegistry,Function,Array,isNaN,parseInt,HTMLElement,new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,"walk","walk",32921637),clojure.walk,new cljs.core.Keyword(null,"string","string",-1989541586),clojure.string,new cljs.core.Keyword(null,"set","set",304602554),clojure.set,new cljs.core.Keyword(null,"data","data",-232669377),clojure.data,new cljs.core.Keyword(null,"edn","edn",1317840885),clojure.edn,new cljs.core.Keyword(null,"zip","zip",678448180),clojure.zip,new cljs.core.Keyword(null,"reflect","reflect",-2113821122),clojure.reflect], null),parseFloat,stopifyArray,XMLHttpRequest,JSON,decodeURI,Set,setInterval,btoa,alert,atob,encodeURI,Math,setTimeout,window,document,URLSearchParams,stopify,navigator,WebAssembly,DOMParser,Blob,clearTimeout,console,encodeURIComponent,TextEncoder,CanvasRenderingContext2D,Reflect,decodeURIComponent,clearInterval,URL,Object,Location,cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"js","js",1768080579),new cljs.core.Keyword(null,"source_map","source_map",1608274243),new cljs.core.Keyword(null,"tools","tools",-1241731990),new cljs.core.Keyword(null,"env","env",-1815813235),new cljs.core.Keyword(null,"spec","spec",347520401),new cljs.core.Keyword(null,"reader","reader",169660853),new cljs.core.Keyword(null,"compiler","compiler",-267926731),new cljs.core.Keyword(null,"repl","repl",-35398667),new cljs.core.Keyword(null,"stacktrace","stacktrace",-95588394),new cljs.core.Keyword(null,"analyzer","analyzer",2075759383),new cljs.core.Keyword(null,"core","core",-86019209),new cljs.core.Keyword(null,"pprint","pprint",1220198395),new cljs.core.Keyword(null,"core$macros","core$macros",873658556),new cljs.core.Keyword(null,"user","user",1532431356),new cljs.core.Keyword(null,"test","test",577538877),new cljs.core.Keyword(null,"math","math",-2026912803),new cljs.core.Keyword(null,"tagged_literals","tagged_literals",-1672832994)],[cljs.js,cljs.source_map,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"reader","reader",169660853),cljs.tools.reader], null),cljs.env,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"alpha","alpha",-1574982441),cljs.spec.alpha,new cljs.core.Keyword(null,"gen","gen",142575302),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"alpha","alpha",-1574982441),cljs.spec.gen.alpha], null),new cljs.core.Keyword(null,"test","test",577538877),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"alpha","alpha",-1574982441),cljs.spec.test.alpha], null)], null),cljs.reader,cljs.compiler,cljs.repl,cljs.stacktrace,cljs.analyzer,cljs.core,cljs.pprint,cljs.core$macros,cljs.core.PersistentArrayMap.EMPTY,cljs.test,cljs.math,cljs.tagged_literals]),String]);
});
interactive_syntax.stdlib.builtin_libs = (function interactive_syntax$stdlib$builtin_libs(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"env","env",-1815813235),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"react","react",1456324418),interactive_syntax.stdlib.node$module$react,new cljs.core.Keyword(null,"react_dom","react_dom",-1051136426),interactive_syntax.stdlib.node$module$react_dom,new cljs.core.Keyword(null,"react_bootstrap","react_bootstrap",299515374),interactive_syntax.stdlib.node$module$react_bootstrap,new cljs.core.Keyword(null,"jszip","jszip",-653139722),interactive_syntax.stdlib.node$module$jszip,new cljs.core.Keyword(null,"codemirror","codemirror",-1221931625),interactive_syntax.stdlib.node$module$codemirror,new cljs.core.Keyword(null,"react_codemirror2","react_codemirror2",-449953251),interactive_syntax.stdlib.node$module$react_codemirror2,new cljs.core.Keyword(null,"react_split_pane","react_split_pane",-952040506),interactive_syntax.stdlib.node$module$react_split_pane,new cljs.core.Keyword(null,"react_switch","react_switch",1942331579),interactive_syntax.stdlib.node$module$react_switch], null),new cljs.core.Keyword(null,"loaded","loaded",-1246482293),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Symbol(null,"react-codemirror2","react-codemirror2",388373161,null),null,new cljs.core.Symbol(null,"codemirror","codemirror",418599902,null),null,new cljs.core.Symbol(null,"react-split-pane","react-split-pane",1719129863,null),null,new cljs.core.Symbol(null,"react-dom","react-dom",1369381594,null),null,new cljs.core.Symbol(null,"cljs.core","cljs.core",770546058,null),null,new cljs.core.Symbol(null,"react-switch","react-switch",1402021641,null),null,new cljs.core.Symbol(null,"react","react",-1198111351,null),null,new cljs.core.Symbol(null,"react-bootstrap","react-bootstrap",1206613490,null),null], null), null),new cljs.core.Keyword(null,"js-deps","js-deps",-699101283),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__21676__auto__ = (function interactive_syntax$stdlib$builtin_libs_$_iter__57991(s__57992){
return (new cljs.core.LazySeq(null,(function (){
var s__57992__$1 = s__57992;
while(true){
var temp__5720__auto__ = cljs.core.seq.call(null,s__57992__$1);
if(temp__5720__auto__){
var s__57992__$2 = temp__5720__auto__;
if(cljs.core.chunked_seq_QMARK_.call(null,s__57992__$2)){
var c__21674__auto__ = cljs.core.chunk_first.call(null,s__57992__$2);
var size__21675__auto__ = cljs.core.count.call(null,c__21674__auto__);
var b__57994 = cljs.core.chunk_buffer.call(null,size__21675__auto__);
if((function (){var i__57993 = (0);
while(true){
if((i__57993 < size__21675__auto__)){
var k = cljs.core._nth.call(null,c__21674__auto__,i__57993);
cljs.core.chunk_append.call(null,b__57994,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(k),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"global-exports","global-exports",-1644865592),cljs.core.PersistentArrayMap.createAsIfByAssoc([k,cljs.core.munge.call(null,k)])], null)], null));

var G__57995 = (i__57993 + (1));
i__57993 = G__57995;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__57994),interactive_syntax$stdlib$builtin_libs_$_iter__57991.call(null,cljs.core.chunk_rest.call(null,s__57992__$2)));
} else {
return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__57994),null);
}
} else {
var k = cljs.core.first.call(null,s__57992__$2);
return cljs.core.cons.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(k),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"global-exports","global-exports",-1644865592),cljs.core.PersistentArrayMap.createAsIfByAssoc([k,cljs.core.munge.call(null,k)])], null)], null),interactive_syntax$stdlib$builtin_libs_$_iter__57991.call(null,cljs.core.rest.call(null,s__57992__$2)));
}
} else {
return null;
}
break;
}
}),null,null));
});
return iter__21676__auto__.call(null,new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"react","react",-1198111351,null),new cljs.core.Symbol(null,"react-dom","react-dom",1369381594,null),new cljs.core.Symbol(null,"react-bootstrap","react-bootstrap",1206613490,null),new cljs.core.Symbol(null,"jszip","jszip",987391805,null),new cljs.core.Symbol(null,"codemirror","codemirror",418599902,null),new cljs.core.Symbol(null,"react-codemirror2","react-codemirror2",388373161,null),new cljs.core.Symbol(null,"react-split-pane","react-split-pane",1719129863,null),new cljs.core.Symbol(null,"react-switch","react-switch",1402021641,null)], null));
})())], null);
});
interactive_syntax.stdlib.reagent_runtime = (function interactive_syntax$stdlib$reagent_runtime(base,p__57996){
var map__57997 = p__57996;
var map__57997__$1 = cljs.core.__destructure_map.call(null,map__57997);
var db = map__57997__$1;
var fs = cljs.core.get.call(null,map__57997__$1,new cljs.core.Keyword(null,"fs","fs",-2122926244));
var builtins = interactive_syntax.stdlib.builtin_libs.call(null);
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"fakegoog","fakegoog",-409952930),true,new cljs.core.Keyword(null,"env","env",-1815813235),cljs.core.merge.call(null,new cljs.core.Keyword(null,"env","env",-1815813235).cljs$core$IFn$_invoke$arity$1(base),interactive_syntax.stdlib.sandbox_env.call(null),new cljs.core.Keyword(null,"env","env",-1815813235).cljs$core$IFn$_invoke$arity$1(builtins),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"zprint","zprint",1501225152),new cljs.core.Keyword(null,"goog","goog",-1711135452),new cljs.core.Keyword(null,"visr","visr",-894661367),new cljs.core.Keyword(null,"garden","garden",-1966516149),new cljs.core.Keyword(null,"ajax","ajax",814345549),new cljs.core.Keyword(null,"alandipert","alandipert",-1598640496),new cljs.core.Keyword(null,"oops","oops",-1033827083),new cljs.core.Keyword(null,"cognitect","cognitect",1703555673),new cljs.core.Keyword(null,"reagent","reagent",2131627322)],[new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"core","core",-86019209),zprint.core], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"object","object",1474613949),interactive_syntax.stdlib.goog$module$goog$object], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"utils","utils",-121060109),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"fs","fs",-2122926244),fs,new cljs.core.Keyword(null,"draw_view","draw_view",-529462398),cljs.core.partial.call(null,interactive_syntax.stdlib.draw_view,db)], null),new cljs.core.Keyword(null,"private$","private$",1568772269),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"print","print",1299562414),cljs.core.partial.call(null,interactive_syntax.stdlib.wrap_printer,cljs.core.print,db),new cljs.core.Keyword(null,"println","println",1920840330),cljs.core.partial.call(null,interactive_syntax.stdlib.wrap_printer,cljs.core.println,db),new cljs.core.Keyword(null,"buffer_writes","buffer_writes",-988413961),interactive_syntax.stdlib.buffer_writes,new cljs.core.Keyword(null,"parse_defvisr","parse_defvisr",-1929447530),interactive_syntax.stdlib.parse_defvisr,new cljs.core.Keyword(null,"render_visr","render_visr",25766774),cljs.core.partial.call(null,interactive_syntax.stdlib.render_visr,db),new cljs.core.Keyword(null,"css","css",1135045163),garden.core.css], null)], null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"core","core",-86019209),garden.core,new cljs.core.Keyword(null,"color","color",1011675173),garden.color,new cljs.core.Keyword(null,"compiler","compiler",-267926731),garden.compiler,new cljs.core.Keyword(null,"compression","compression",-506303443),garden.compression,new cljs.core.Keyword(null,"selectors","selectors",-680741768),garden.selectors,new cljs.core.Keyword(null,"types","types",590030639),garden.types,new cljs.core.Keyword(null,"units","units",-533089095),garden.units,new cljs.core.Keyword(null,"util","util",-492628278),garden.util], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"core","core",-86019209),ajax.core,new cljs.core.Keyword(null,"protocols","protocols",-5615896),ajax.protocols], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"storage-atom","storage-atom",-634205180),alandipert.storage_atom], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"core","core",-86019209),oops.core], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"transit","transit",359458387),cognitect.transit], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"core","core",-86019209),reagent.core,new cljs.core.Keyword(null,"dom","dom",-1236537922),reagent.dom], null)])),new cljs.core.Keyword(null,"loaded","loaded",-1246482293),clojure.set.union.call(null,new cljs.core.Keyword(null,"loaded","loaded",-1246482293).cljs$core$IFn$_invoke$arity$1(base),new cljs.core.Keyword(null,"loaded","loaded",-1246482293).cljs$core$IFn$_invoke$arity$1(builtins),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 44, [new cljs.core.Symbol(null,"cljs.analyzer.api","cljs.analyzer.api",1016020812,null),null,new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),null,new cljs.core.Symbol(null,"clojure.string","clojure.string",-1415552165,null),null,new cljs.core.Symbol(null,"garden.util","garden.util",2095750027,null),null,new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),null,new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),null,new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),null,new cljs.core.Symbol(null,"visr.utils","visr.utils",1275837795,null),null,new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),null,new cljs.core.Symbol(null,"cljs.source-map","cljs.source-map",2108014936,null),null,new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),null,new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),null,new cljs.core.Symbol(null,"cljs.repl","cljs.repl",1767065658,null),null,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),null,new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),null,new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),null,new cljs.core.Symbol(null,"clojure.reflect","clojure.reflect",-977704349,null),null,new cljs.core.Symbol(null,"garden.compression","garden.compression",-1197231970,null),null,new cljs.core.Symbol(null,"visr.private","visr.private",-642278624,null),null,new cljs.core.Symbol(null,"ajax.protocols","ajax.protocols",-1931495210,null),null,new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),null,new cljs.core.Symbol(null,"garden.core","garden.core",1471255263,null),null,new cljs.core.Symbol(null,"clojure.set","clojure.set",-630955632,null),null,new cljs.core.Symbol(null,"cljs.stacktrace","cljs.stacktrace",880035689,null),null,new cljs.core.Symbol(null,"clojure.walk","clojure.walk",1625897340,null),null,new cljs.core.Symbol(null,"garden.compiler","garden.compiler",-2001058951,null),null,new cljs.core.Symbol(null,"oops.core","oops.core",466106448,null),null,new cljs.core.Symbol(null,"cljs.tools.reader","cljs.tools.reader",-831293977,null),null,new cljs.core.Symbol(null,"cljs.tagged-literals","cljs.tagged-literals",387033363,null),null,new cljs.core.Symbol(null,"clojure.data","clojure.data",-2083828516,null),null,new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),null,new cljs.core.Symbol(null,"clojure.edn","clojure.edn",-302325352,null),null,new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),null,new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),null,new cljs.core.Symbol(null,"reagent.dom","reagent.dom",-2138920962,null),null,new cljs.core.Symbol(null,"cljs.reader","cljs.reader",1327473948,null),null,new cljs.core.Symbol(null,"cljs.env","cljs.env",-1810013139,null),null,new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),null,new cljs.core.Symbol(null,"cljs.spec.test.alpha","cljs.spec.test.alpha",-1221684901,null),null,new cljs.core.Symbol(null,"ajax.core","ajax.core",-1363316958,null),null,new cljs.core.Symbol(null,"garden.types","garden.types",-631486263,null),null,new cljs.core.Symbol(null,"goog.object","goog.object",678593132,null),null,new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),null,new cljs.core.Symbol(null,"cljs.js","cljs.js",474485962,null),null], null), null)),new cljs.core.Keyword(null,"state-injections","state-injections",-1061743234),cljs.core.merge.call(null,interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"visr.utils","visr.utils",1275837795,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,"fs","fs",-482394717,null),new cljs.core.Symbol("visr.utils","fs","visr.utils/fs",-343946936,null),new cljs.core.Symbol(null,"draw-view","draw-view",-2094476658,null),new cljs.core.Symbol("visr.utils","draw-view","visr.utils/draw-view",-1947492747,null)], null)),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"visr.private","visr.private",-642278624,null),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null,"print","print",-1354873355,null),new cljs.core.Symbol("visr.private","print","visr.private/print",-1239923426,null),new cljs.core.Symbol(null,"println","println",-733595439,null),new cljs.core.Symbol("visr.private","println","visr.private/println",-820496134,null),new cljs.core.Symbol(null,"css","css",-1519390606,null),new cljs.core.Symbol("visr.private","css","visr.private/css",-1438518373,null),new cljs.core.Symbol(null,"render-visr","render-visr",-492273599,null),new cljs.core.Symbol("visr.private","render-visr","visr.private/render-visr",-447315864,null),new cljs.core.Symbol(null,"parse-defvisr","parse-defvisr",92792367,null),new cljs.core.Symbol("visr.private","parse-defvisr","visr.private/parse-defvisr",-43653624,null),new cljs.core.Symbol(null,"buffer-writes","buffer-writes",-1870767891,null),new cljs.core.Symbol("visr.private","buffer-writes","visr.private/buffer-writes",-1722263338,null)], null)),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"type?"),new cljs.core.Var(function(){return cljs.analyzer.type_QMARK_;},new cljs.core.Symbol("cljs.analyzer","type?","cljs.analyzer/type?",1231241638,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"type?","type?",383443968,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",12,1,1490,1490,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"t","t",242699008,null)], null)),null,((cljs.analyzer.type_QMARK_)?cljs.analyzer.type_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"get-namespace"),new cljs.core.Var(function(){return cljs.analyzer.get_namespace;},new cljs.core.Symbol("cljs.analyzer","get-namespace","cljs.analyzer/get-namespace",1358520706,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"get-namespace","get-namespace",-1988899488,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",20,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"key","key",124488940,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"cenv","cenv",325355976,null),new cljs.core.Symbol(null,"key","key",124488940,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"key","key",124488940,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"cenv","cenv",325355976,null),new cljs.core.Symbol(null,"key","key",124488940,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,577,577,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"key","key",124488940,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"cenv","cenv",325355976,null),new cljs.core.Symbol(null,"key","key",124488940,null)], null)),null,(cljs.core.truth_(cljs.analyzer.get_namespace)?cljs.analyzer.get_namespace.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"error-message"),new cljs.core.Var(function(){return cljs.analyzer.error_message;},new cljs.core.Symbol("cljs.analyzer","error-message","cljs.analyzer/error-message",30250478,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"error-message","error-message",-898414208,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",24,1,262,262,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer.error_message)?cljs.analyzer.error_message.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"elide-reader-meta"),new cljs.core.Var(function(){return cljs.analyzer.elide_reader_meta;},new cljs.core.Symbol("cljs.analyzer","elide-reader-meta","cljs.analyzer/elide-reader-meta",315186050,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"elide-reader-meta","elide-reader-meta",1430271840,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",24,1,4221,4221,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),null,(cljs.core.truth_(cljs.analyzer.elide_reader_meta)?cljs.analyzer.elide_reader_meta.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"missing-rename?"),new cljs.core.Var(function(){return cljs.analyzer.missing_rename_QMARK_;},new cljs.core.Symbol("cljs.analyzer","missing-rename?","cljs.analyzer/missing-rename?",2044038126,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"missing-rename?","missing-rename?",55504768,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",22,1,2781,2781,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"cenv","cenv",325355976,null)], null)),null,(cljs.core.truth_(cljs.analyzer.missing_rename_QMARK_)?cljs.analyzer.missing_rename_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"resolve-invokeable-ns"),new cljs.core.Var(function(){return cljs.analyzer.resolve_invokeable_ns;},new cljs.core.Symbol("cljs.analyzer","resolve-invokeable-ns","cljs.analyzer/resolve-invokeable-ns",-607859645,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"resolve-invokeable-ns","resolve-invokeable-ns",-1588617183,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",28,1,1223,1223,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null),new cljs.core.Symbol(null,"current-ns","current-ns",-992782341,null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null)),null,(cljs.core.truth_(cljs.analyzer.resolve_invokeable_ns)?cljs.analyzer.resolve_invokeable_ns.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-let"),new cljs.core.Var(function(){return cljs.analyzer.analyze_let;},new cljs.core.Symbol("cljs.analyzer","analyze-let","cljs.analyzer/analyze-let",-312860733,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-let","analyze-let",717537377,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",18,1,2476,2476,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"encl-env","encl-env",-552935929,null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null),new cljs.core.Symbol(null,"bindings","bindings",-1383038577,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"exprs","exprs",-858606675,null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"form","form",16469056,null)], null),new cljs.core.Symbol(null,"is-loop","is-loop",-616317556,null),new cljs.core.Symbol(null,"widened-tags","widened-tags",-1804932555,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_let)?cljs.analyzer.analyze_let.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"var-meta"),new cljs.core.Var(function(){return cljs.analyzer.var_meta;},new cljs.core.Symbol("cljs.analyzer","var-meta","cljs.analyzer/var-meta",1682136487,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"var-meta","var-meta",785035777,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",15,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"var","var",870848730,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"var","var",870848730,null),new cljs.core.Symbol(null,"expr-env","expr-env",-1033200394,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"var","var",870848730,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"var","var",870848730,null),new cljs.core.Symbol(null,"expr-env","expr-env",-1033200394,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,1605,1605,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"var","var",870848730,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"var","var",870848730,null),new cljs.core.Symbol(null,"expr-env","expr-env",-1033200394,null)], null)),null,(cljs.core.truth_(cljs.analyzer.var_meta)?cljs.analyzer.var_meta.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"desugar-ns-specs"),new cljs.core.Var(function(){return cljs.analyzer.desugar_ns_specs;},new cljs.core.Symbol("cljs.analyzer","desugar-ns-specs","cljs.analyzer/desugar-ns-specs",1490335367,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"desugar-ns-specs","desugar-ns-specs",323736161,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",23,1,3137,3137,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Given an original set of ns specs desugar :include-macros and :refer-macros\n   usage into only primitive spec forms - :use, :require, :use-macros,\n   :require-macros. If a library includes a macro file of with the same name\n   as the namespace will also be desugared.",(cljs.core.truth_(cljs.analyzer.desugar_ns_specs)?cljs.analyzer.desugar_ns_specs.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"js-tag?"),new cljs.core.Var(function(){return cljs.analyzer.js_tag_QMARK_;},new cljs.core.Symbol("cljs.analyzer","js-tag?","cljs.analyzer/js-tag?",1100010179,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"js-tag?","js-tag?",-1978042719,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",14,1,982,982,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(cljs.analyzer.js_tag_QMARK_)?cljs.analyzer.js_tag_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ensure-defs"),new cljs.core.Var(function(){return cljs.analyzer.ensure_defs;},new cljs.core.Symbol("cljs.analyzer","ensure-defs","cljs.analyzer/ensure-defs",717997252,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"ensure-defs","ensure-defs",1900028066,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",18,1,4866,4866,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null)),"Ensures that a non-nil defs map exists in the compiler state for a given\n  ns. (A non-nil defs map signifies that the namespace has been analyzed.)",(cljs.core.truth_(cljs.analyzer.ensure_defs)?cljs.analyzer.ensure_defs.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-map"),new cljs.core.Var(function(){return cljs.analyzer.analyze_map;},new cljs.core.Symbol("cljs.analyzer","analyze-map","cljs.analyzer/analyze-map",1951481152,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-map","analyze-map",-1160212190,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",18,1,4147,4147,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_map)?cljs.analyzer.analyze_map.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"NUMERIC_SET"),new cljs.core.Var(function(){return cljs.analyzer.NUMERIC_SET;},new cljs.core.Symbol("cljs.analyzer","NUMERIC_SET","cljs.analyzer/NUMERIC_SET",306878592,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"NUMERIC_SET","NUMERIC_SET",-841777886,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",17,1,3638,3638,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer.NUMERIC_SET)?cljs.analyzer.NUMERIC_SET.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-record"),new cljs.core.Var(function(){return cljs.analyzer.analyze_record;},new cljs.core.Symbol("cljs.analyzer","analyze-record","cljs.analyzer/analyze-record",1745572576,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-record","analyze-record",832320834,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",21,1,4209,4209,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_record)?cljs.analyzer.analyze_record.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-seq*"),new cljs.core.Var(function(){return cljs.analyzer.analyze_seq_STAR_;},new cljs.core.Symbol("cljs.analyzer","analyze-seq*","cljs.analyzer/analyze-seq*",-119412468,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-seq*","analyze-seq*",559875490,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",19,1,4113,4113,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"op","op",-242456428,null),new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_seq_STAR_)?cljs.analyzer.analyze_seq_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"constants-ns-sym"),new cljs.core.Var(function(){return cljs.analyzer.constants_ns_sym;},new cljs.core.Symbol("cljs.analyzer","constants-ns-sym","cljs.analyzer/constants-ns-sym",-760018112,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"constants-ns-sym","constants-ns-sym",138260258,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",22,1,74,74,cljs.core.List.EMPTY,"The namespace of the constants table as a symbol.",(cljs.core.truth_(cljs.analyzer.constants_ns_sym)?cljs.analyzer.constants_ns_sym.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"resolve-alias"),new cljs.core.Var(function(){return cljs.analyzer.resolve_alias;},new cljs.core.Symbol("cljs.analyzer","resolve-alias","cljs.analyzer/resolve-alias",2043613601,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"resolve-alias","resolve-alias",-1572439037,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",20,1,1113,1113,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null),new cljs.core.Symbol(null,"sym","sym",195671222,null)], null)),"Takes a namespace and an unqualified symbol and potentially returns a new\n  symbol to be used in lieu of the original.",(cljs.core.truth_(cljs.analyzer.resolve_alias)?cljs.analyzer.resolve_alias.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*cljs-dep-set*"),new cljs.core.Var(function(){return cljs.analyzer._STAR_cljs_dep_set_STAR_;},new cljs.core.Symbol("cljs.analyzer","*cljs-dep-set*","cljs.analyzer/*cljs-dep-set*",-2098688287,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"*cljs-dep-set*","*cljs-dep-set*",1566566915,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",30,1,true,63,63,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer._STAR_cljs_dep_set_STAR_)?cljs.analyzer._STAR_cljs_dep_set_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"resolve-var"),new cljs.core.Var(function(){return cljs.analyzer.resolve_var;},new cljs.core.Symbol("cljs.analyzer","resolve-var","cljs.analyzer/resolve-var",-1574698879,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"resolve-var","resolve-var",-105977053,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),4,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),4,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"sym","sym",195671222,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"confirm","confirm",-363469081,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"confirm","confirm",-363469081,null),new cljs.core.Symbol(null,"default?","default?",229580347,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"sym","sym",195671222,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"confirm","confirm",-363469081,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"confirm","confirm",-363469081,null),new cljs.core.Symbol(null,"default?","default?",229580347,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,1260,1260,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"sym","sym",195671222,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"confirm","confirm",-363469081,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"confirm","confirm",-363469081,null),new cljs.core.Symbol(null,"default?","default?",229580347,null)], null)),"Resolve a var. Accepts a side-effecting confirm fn for producing\n   warnings about unresolved vars.",(cljs.core.truth_(cljs.analyzer.resolve_var)?cljs.analyzer.resolve_var.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"js-star-seg"),new cljs.core.Var(function(){return cljs.analyzer.js_star_seg;},new cljs.core.Symbol("cljs.analyzer","js-star-seg","cljs.analyzer/js-star-seg",-497353722,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"js-star-seg","js-star-seg",1020549284,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",18,1,3628,3628,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"String","String",-2070057435,null)], null))], null)),null,(cljs.core.truth_(cljs.analyzer.js_star_seg)?cljs.analyzer.js_star_seg.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dep-has-global-exports?"),new cljs.core.Var(function(){return cljs.analyzer.dep_has_global_exports_QMARK_;},new cljs.core.Symbol("cljs.analyzer","dep-has-global-exports?","cljs.analyzer/dep-has-global-exports?",1635578950,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"dep-has-global-exports?","dep-has-global-exports?",737548516,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",30,1,874,874,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"module","module",-1229817578,null)], null)),null,(cljs.core.truth_(cljs.analyzer.dep_has_global_exports_QMARK_)?cljs.analyzer.dep_has_global_exports_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"fn-ast->tag"),new cljs.core.Var(function(){return cljs.analyzer.fn_ast__GT_tag;},new cljs.core.Symbol("cljs.analyzer","fn-ast->tag","cljs.analyzer/fn-ast->tag",1871635074,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"fn-ast->tag","fn-ast->tag",-738179804,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",18,1,1551,1551,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"info","info",1323462525,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"fn-ast","fn-ast",1466659724,null)], null)], null)),null,(cljs.core.truth_(cljs.analyzer.fn_ast__GT_tag)?cljs.analyzer.fn_ast__GT_tag.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"register-specs"),new cljs.core.Var(function(){return cljs.analyzer.register_specs;},new cljs.core.Symbol("cljs.analyzer","register-specs","cljs.analyzer/register-specs",1680450086,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"register-specs","register-specs",782440900,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",21,1,4776,4776,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"cached-ns","cached-ns",-835899437,null)], null)),"Registers speced vars found in a namespace analysis cache.",(cljs.core.truth_(cljs.analyzer.register_specs)?cljs.analyzer.register_specs.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"get-externs"),new cljs.core.Var(function(){return cljs.analyzer.get_externs;},new cljs.core.Symbol("cljs.analyzer","get-externs","cljs.analyzer/get-externs",-1910537702,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"get-externs","get-externs",-1063895484,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",18,1,177,177,cljs.core.list(cljs.core.PersistentVector.EMPTY),null,(cljs.core.truth_(cljs.analyzer.get_externs)?cljs.analyzer.get_externs.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*passes*"),new cljs.core.Var(function(){return cljs.analyzer._STAR_passes_STAR_;},new cljs.core.Symbol("cljs.analyzer","*passes*","cljs.analyzer/*passes*",1273642043,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"*passes*","*passes*",-1318872987,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",24,1,true,69,69,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer._STAR_passes_STAR_)?cljs.analyzer._STAR_passes_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"has-extern?*"),new cljs.core.Var(function(){return cljs.analyzer.has_extern_QMARK__STAR_;},new cljs.core.Symbol("cljs.analyzer","has-extern?*","cljs.analyzer/has-extern?*",-2066854045,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"has-extern?*","has-extern?*",-96411515,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",19,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pre","pre",-535978900,null),new cljs.core.Symbol(null,"externs","externs",1862252204,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pre","pre",-535978900,null),new cljs.core.Symbol(null,"externs","externs",1862252204,null),new cljs.core.Symbol(null,"top","top",-215740434,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pre","pre",-535978900,null),new cljs.core.Symbol(null,"externs","externs",1862252204,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pre","pre",-535978900,null),new cljs.core.Symbol(null,"externs","externs",1862252204,null),new cljs.core.Symbol(null,"top","top",-215740434,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,1040,1040,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pre","pre",-535978900,null),new cljs.core.Symbol(null,"externs","externs",1862252204,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pre","pre",-535978900,null),new cljs.core.Symbol(null,"externs","externs",1862252204,null),new cljs.core.Symbol(null,"top","top",-215740434,null)], null)),null,(cljs.core.truth_(cljs.analyzer.has_extern_QMARK__STAR_)?cljs.analyzer.has_extern_QMARK__STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"handle-symbol-local"),new cljs.core.Var(function(){return cljs.analyzer.handle_symbol_local;},new cljs.core.Symbol("cljs.analyzer","handle-symbol-local","cljs.analyzer/handle-symbol-local",-1049740285,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"handle-symbol-local","handle-symbol-local",-2013816667,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",26,1,1255,1255,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"lb","lb",950310490,null)], null)),null,(cljs.core.truth_(cljs.analyzer.handle_symbol_local)?cljs.analyzer.handle_symbol_local.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"get-expander-ns"),new cljs.core.Var(function(){return cljs.analyzer.get_expander_ns;},new cljs.core.Symbol("cljs.analyzer","get-expander-ns","cljs.analyzer/get-expander-ns",-1361258117,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"get-expander-ns","get-expander-ns",-195742299,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",22,1,3959,3959,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),cljs.core.with_meta(new cljs.core.Symbol(null,"nstr","nstr",-230443011,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"String","String",-2070057435,null)], null))], null)),null,(cljs.core.truth_(cljs.analyzer.get_expander_ns)?cljs.analyzer.get_expander_ns.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"message"),new cljs.core.Var(function(){return cljs.analyzer.message;},new cljs.core.Symbol("cljs.analyzer","message","cljs.analyzer/message",52297435,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"message","message",1234475525,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",14,1,748,748,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),null,(cljs.core.truth_(cljs.analyzer.message)?cljs.analyzer.message.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"parse-invoke"),new cljs.core.Var(function(){return cljs.analyzer.parse_invoke;},new cljs.core.Symbol("cljs.analyzer","parse-invoke","cljs.analyzer/parse-invoke",-1122015517,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"parse-invoke","parse-invoke",-75120123,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",19,1,3865,3865,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null)),null,(cljs.core.truth_(cljs.analyzer.parse_invoke)?cljs.analyzer.parse_invoke.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*cljs-warning-handlers*"),new cljs.core.Var(function(){return cljs.analyzer._STAR_cljs_warning_handlers_STAR_;},new cljs.core.Symbol("cljs.analyzer","*cljs-warning-handlers*","cljs.analyzer/*cljs-warning-handlers*",882579751,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"*cljs-warning-handlers*","*cljs-warning-handlers*",-301807931,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",39,1,true,488,488,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer._STAR_cljs_warning_handlers_STAR_)?cljs.analyzer._STAR_cljs_warning_handlers_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-seq*-wrap"),new cljs.core.Var(function(){return cljs.analyzer.analyze_seq_STAR__wrap;},new cljs.core.Symbol("cljs.analyzer","analyze-seq*-wrap","cljs.analyzer/analyze-seq*-wrap",1436829511,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-seq*-wrap","analyze-seq*-wrap",-1355957275,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",24,1,4118,4118,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"op","op",-242456428,null),new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_seq_STAR__wrap)?cljs.analyzer.analyze_seq_STAR__wrap.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"confirm-bindings"),new cljs.core.Var(function(){return cljs.analyzer.confirm_bindings;},new cljs.core.Symbol("cljs.analyzer","confirm-bindings","cljs.analyzer/confirm-bindings",-1629923496,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"confirm-bindings","confirm-bindings",1498561670,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",23,1,1395,1395,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"names","names",-302543131,null)], null)),"Given env, an analysis environment env, and names, a list of symbols, confirm\n   that all correspond to declared dynamic vars.",(cljs.core.truth_(cljs.analyzer.confirm_bindings)?cljs.analyzer.confirm_bindings.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"has-extern?"),new cljs.core.Var(function(){return cljs.analyzer.has_extern_QMARK_;},new cljs.core.Symbol("cljs.analyzer","has-extern?","cljs.analyzer/has-extern?",1039648216,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"has-extern?","has-extern?",-196534010,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pre","pre",-535978900,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pre","pre",-535978900,null),new cljs.core.Symbol(null,"externs","externs",1862252204,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pre","pre",-535978900,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pre","pre",-535978900,null),new cljs.core.Symbol(null,"externs","externs",1862252204,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,1066,1066,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pre","pre",-535978900,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pre","pre",-535978900,null),new cljs.core.Symbol(null,"externs","externs",1862252204,null)], null)),null,(cljs.core.truth_(cljs.analyzer.has_extern_QMARK_)?cljs.analyzer.has_extern_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"foreign-dep?"),new cljs.core.Var(function(){return cljs.analyzer.foreign_dep_QMARK_;},new cljs.core.Symbol("cljs.analyzer","foreign-dep?","cljs.analyzer/foreign-dep?",1813729604,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"foreign-dep?","foreign-dep?",-1248719386,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",19,1,2726,2726,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dep","dep",-142776527,null)], null)),null,((cljs.analyzer.foreign_dep_QMARK_)?cljs.analyzer.foreign_dep_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"missing-rename-macro?"),new cljs.core.Var(function(){return cljs.analyzer.missing_rename_macro_QMARK_;},new cljs.core.Symbol("cljs.analyzer","missing-rename-macro?","cljs.analyzer/missing-rename-macro?",220005080,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"missing-rename-macro?","missing-rename-macro?",-946362874,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",28,1,2792,2792,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null)], null)),null,(cljs.core.truth_(cljs.analyzer.missing_rename_macro_QMARK_)?cljs.analyzer.missing_rename_macro_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"missing-uses"),new cljs.core.Var(function(){return cljs.analyzer.missing_uses;},new cljs.core.Symbol("cljs.analyzer","missing-uses","cljs.analyzer/missing-uses",-231073344,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"missing-uses","missing-uses",885834342,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",19,1,2799,2799,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"uses","uses",1873196219,null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null)),null,(cljs.core.truth_(cljs.analyzer.missing_uses)?cljs.analyzer.missing_uses.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"get-macroexpand-check-var"),new cljs.core.Var(function(){return cljs.analyzer.get_macroexpand_check_var;},new cljs.core.Symbol("cljs.analyzer","get-macroexpand-check-var","cljs.analyzer/get-macroexpand-check-var",1544747256,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"get-macroexpand-check-var","get-macroexpand-check-var",-2086953178,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",37,6,4014,4014,cljs.core.list(cljs.core.PersistentVector.EMPTY),null,(cljs.core.truth_(cljs.analyzer.get_macroexpand_check_var)?cljs.analyzer.get_macroexpand_check_var.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"missing-use?"),new cljs.core.Var(function(){return cljs.analyzer.missing_use_QMARK_;},new cljs.core.Symbol("cljs.analyzer","missing-use?","cljs.analyzer/missing-use?",-1562456320,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"missing-use?","missing-use?",-396907610,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",19,1,2773,2773,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"lib","lib",1832340253,null),new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"cenv","cenv",325355976,null)], null)),null,(cljs.core.truth_(cljs.analyzer.missing_use_QMARK_)?cljs.analyzer.missing_use_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"es5-allowed"),new cljs.core.Var(function(){return cljs.analyzer.es5_allowed;},new cljs.core.Symbol("cljs.analyzer","es5-allowed","cljs.analyzer/es5-allowed",-122841659,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"es5-allowed","es5-allowed",-1289471897,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",17,1,203,203,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer.es5_allowed)?cljs.analyzer.es5_allowed.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze"),new cljs.core.Var(function(){return cljs.analyzer.analyze;},new cljs.core.Symbol("cljs.analyzer","analyze","cljs.analyzer/analyze",-18553051,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze","analyze",874142407,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",14,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),4,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),4,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,4387,4387,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),"Given an environment, a map containing {:locals (mapping of names to bindings), :context\n  (one of :statement, :expr, :return), :ns (a symbol naming the\n  compilation ns)}, and form, returns an expression object (a map\n  containing at least :form, :op and :env keys). If expr has any (immediately)\n  nested exprs, must have a :children entry. This must be a vector of keywords naming\n  the immediately nested fields mapped to an expr or vector of exprs. This will\n  facilitate code walking without knowing the details of the op set.",(cljs.core.truth_(cljs.analyzer.analyze)?cljs.analyzer.analyze.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"used?"),new cljs.core.Var(function(){return cljs.analyzer.used_QMARK_;},new cljs.core.Symbol("cljs.analyzer","used?","cljs.analyzer/used?",-1150705083,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"used?","used?",-52408601,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",12,1,3953,3953,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"sym","sym",195671222,null)], null)),null,((cljs.analyzer.used_QMARK_)?cljs.analyzer.used_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"node-module-dep?"),new cljs.core.Var(function(){return cljs.analyzer.node_module_dep_QMARK_;},new cljs.core.Symbol("cljs.analyzer","node-module-dep?","cljs.analyzer/node-module-dep?",1531490073,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"node-module-dep?","node-module-dep?",500265799,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",23,1,861,861,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"module","module",-1229817578,null)], null)),null,((cljs.analyzer.node_module_dep_QMARK_)?cljs.analyzer.node_module_dep_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"parse-type"),new cljs.core.Var(function(){return cljs.analyzer.parse_type;},new cljs.core.Symbol("cljs.analyzer","parse-type","cljs.analyzer/parse-type",2087562314,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"parse-type","parse-type",904185896,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",17,1,3430,3430,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"op","op",-242456428,null),new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null),new cljs.core.Symbol(null,"tsym","tsym",-898024407,null),new cljs.core.Symbol(null,"fields","fields",-291534703,null),new cljs.core.Symbol(null,"pmasks","pmasks",769114829,null),new cljs.core.Symbol(null,"body","body",-408674142,null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"form","form",16469056,null)], null)], null)),null,(cljs.core.truth_(cljs.analyzer.parse_type)?cljs.analyzer.parse_type.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"gets"),new cljs.core.Var(function(){return cljs.analyzer.gets;},new cljs.core.Symbol("cljs.analyzer","gets","cljs.analyzer/gets",468378702,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"gets","gets",-1034714904,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",11,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),5,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),5,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"k0","k0",1858782262,null),new cljs.core.Symbol(null,"k1","k1",-1701777341,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"k0","k0",1858782262,null),new cljs.core.Symbol(null,"k1","k1",-1701777341,null),new cljs.core.Symbol(null,"k2","k2",-1225133949,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"k0","k0",1858782262,null),new cljs.core.Symbol(null,"k1","k1",-1701777341,null),new cljs.core.Symbol(null,"k2","k2",-1225133949,null),new cljs.core.Symbol(null,"k3","k3",-716573189,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"k0","k0",1858782262,null),new cljs.core.Symbol(null,"k1","k1",-1701777341,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"k0","k0",1858782262,null),new cljs.core.Symbol(null,"k1","k1",-1701777341,null),new cljs.core.Symbol(null,"k2","k2",-1225133949,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"k0","k0",1858782262,null),new cljs.core.Symbol(null,"k1","k1",-1701777341,null),new cljs.core.Symbol(null,"k2","k2",-1225133949,null),new cljs.core.Symbol(null,"k3","k3",-716573189,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,209,209,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"k0","k0",1858782262,null),new cljs.core.Symbol(null,"k1","k1",-1701777341,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"k0","k0",1858782262,null),new cljs.core.Symbol(null,"k1","k1",-1701777341,null),new cljs.core.Symbol(null,"k2","k2",-1225133949,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"k0","k0",1858782262,null),new cljs.core.Symbol(null,"k1","k1",-1701777341,null),new cljs.core.Symbol(null,"k2","k2",-1225133949,null),new cljs.core.Symbol(null,"k3","k3",-716573189,null)], null)),null,(cljs.core.truth_(cljs.analyzer.gets)?cljs.analyzer.gets.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"check-rename-macros-inferring-missing"),new cljs.core.Var(function(){return cljs.analyzer.check_rename_macros_inferring_missing;},new cljs.core.Symbol("cljs.analyzer","check-rename-macros-inferring-missing","cljs.analyzer/check-rename-macros-inferring-missing",1562957482,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"check-rename-macros-inferring-missing","check-rename-macros-inferring-missing",374541576,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",44,1,2862,2862,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"renames","renames",1983809895,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"ast","ast",780197459,null)], null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null)),null,(cljs.core.truth_(cljs.analyzer.check_rename_macros_inferring_missing)?cljs.analyzer.check_rename_macros_inferring_missing.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*allow-ns*"),new cljs.core.Var(function(){return cljs.analyzer._STAR_allow_ns_STAR_;},new cljs.core.Symbol("cljs.analyzer","*allow-ns*","cljs.analyzer/*allow-ns*",-141648458,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"*allow-ns*","*allow-ns*",-1122747928,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",26,1,true,1452,1452,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer._STAR_allow_ns_STAR_)?cljs.analyzer._STAR_allow_ns_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-const"),new cljs.core.Var(function(){return cljs.analyzer.analyze_const;},new cljs.core.Symbol("cljs.analyzer","analyze-const","cljs.analyzer/analyze-const",1732306478,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-const","analyze-const",-1379188152,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",20,1,2567,2567,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_const)?cljs.analyzer.analyze_const.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"munge-goog-module-lib"),new cljs.core.Var(function(){return cljs.analyzer.munge_goog_module_lib;},new cljs.core.Symbol("cljs.analyzer","munge-goog-module-lib","cljs.analyzer/munge-goog-module-lib",-409263338,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"munge-goog-module-lib","munge-goog-module-lib",957187912,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",28,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,1103,1103,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null)),null,(cljs.core.truth_(cljs.analyzer.munge_goog_module_lib)?cljs.analyzer.munge_goog_module_lib.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"infer-invoke"),new cljs.core.Var(function(){return cljs.analyzer.infer_invoke;},new cljs.core.Symbol("cljs.analyzer","infer-invoke","cljs.analyzer/infer-invoke",-1414580502,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"infer-invoke","infer-invoke",-249195704,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",19,1,1564,1564,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(null,"fn-ast","fn-ast",1466659724,null),new cljs.core.Keyword(null,"fn","fn",-1175266204),new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"args","args",-1338879193,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"ast","ast",780197459,null)], null)], null)),null,(cljs.core.truth_(cljs.analyzer.infer_invoke)?cljs.analyzer.infer_invoke.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*cljs-static-fns*"),new cljs.core.Var(function(){return cljs.analyzer._STAR_cljs_static_fns_STAR_;},new cljs.core.Symbol("cljs.analyzer","*cljs-static-fns*","cljs.analyzer/*cljs-static-fns*",638322550,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"*cljs-static-fns*","*cljs-static-fns*",1878375336,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",33,1,true,59,59,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer._STAR_cljs_static_fns_STAR_)?cljs.analyzer._STAR_cljs_static_fns_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"array-types"),new cljs.core.Var(function(){return cljs.analyzer.array_types;},new cljs.core.Symbol("cljs.analyzer","array-types","cljs.analyzer/array-types",-612436981,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"array-types","array-types",318181545,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",17,1,3662,3662,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer.array_types)?cljs.analyzer.array_types.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*check-alias-dupes*"),new cljs.core.Var(function(){return cljs.analyzer._STAR_check_alias_dupes_STAR_;},new cljs.core.Symbol("cljs.analyzer","*check-alias-dupes*","cljs.analyzer/*check-alias-dupes*",-74764981,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"*check-alias-dupes*","*check-alias-dupes*",-1120825047,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",35,1,true,58,58,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer._STAR_check_alias_dupes_STAR_)?cljs.analyzer._STAR_check_alias_dupes_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"macro-ns-name"),new cljs.core.Var(function(){return cljs.analyzer.macro_ns_name;},new cljs.core.Symbol("cljs.analyzer","macro-ns-name","cljs.analyzer/macro-ns-name",849328399,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"macro-ns-name","macro-ns-name",-81453655,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",20,1,3199,3199,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null)], null)),null,(cljs.core.truth_(cljs.analyzer.macro_ns_name)?cljs.analyzer.macro_ns_name.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*reload-macros*"),new cljs.core.Var(function(){return cljs.analyzer._STAR_reload_macros_STAR_;},new cljs.core.Symbol("cljs.analyzer","*reload-macros*","cljs.analyzer/*reload-macros*",-28886769,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"*reload-macros*","*reload-macros*",819895721,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",31,1,true,67,67,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer._STAR_reload_macros_STAR_)?cljs.analyzer._STAR_reload_macros_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"compiler-options"),new cljs.core.Var(function(){return cljs.analyzer.compiler_options;},new cljs.core.Symbol("cljs.analyzer","compiler-options","cljs.analyzer/compiler-options",-2013765745,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"compiler-options","compiler-options",1282482729,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",23,1,174,174,cljs.core.list(cljs.core.PersistentVector.EMPTY),null,(cljs.core.truth_(cljs.analyzer.compiler_options)?cljs.analyzer.compiler_options.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"resolve-existing-var"),new cljs.core.Var(function(){return cljs.analyzer.resolve_existing_var;},new cljs.core.Symbol("cljs.analyzer","resolve-existing-var","cljs.analyzer/resolve-existing-var",133762635,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"resolve-existing-var","resolve-existing-var",1584376361,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",27,1,1387,1387,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"sym","sym",195671222,null)], null)),"Given env, an analysis environment, and sym, a symbol, resolve an existing var.\n   Emits a warning if no such var exists.",(cljs.core.truth_(cljs.analyzer.resolve_existing_var)?cljs.analyzer.resolve_existing_var.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"required?"),new cljs.core.Var(function(){return cljs.analyzer.required_QMARK_;},new cljs.core.Symbol("cljs.analyzer","required?","cljs.analyzer/required?",-481775925,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"required?","required?",768017065,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",16,1,1209,1209,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null)),null,(cljs.core.truth_(cljs.analyzer.required_QMARK_)?cljs.analyzer.required_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"node-like?"),new cljs.core.Var(function(){return cljs.analyzer.node_like_QMARK_;},new cljs.core.Symbol("cljs.analyzer","node-like?","cljs.analyzer/node-like?",533595659,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"node-like?","node-like?",-1065901399,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",17,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),1,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),1,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,1150,1150,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),null,(cljs.core.truth_(cljs.analyzer.node_like_QMARK_)?cljs.analyzer.node_like_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"parse-invoke*"),new cljs.core.Var(function(){return cljs.analyzer.parse_invoke_STAR_;},new cljs.core.Symbol("cljs.analyzer","parse-invoke*","cljs.analyzer/parse-invoke*",-1610953941,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"parse-invoke*","parse-invoke*",1483845513,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",20,1,3801,3801,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"form","form",16469056,null)], null)], null)),null,(cljs.core.truth_(cljs.analyzer.parse_invoke_STAR_)?cljs.analyzer.parse_invoke_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"get-aliases"),new cljs.core.Var(function(){return cljs.analyzer.get_aliases;},new cljs.core.Symbol("cljs.analyzer","get-aliases","cljs.analyzer/get-aliases",1966870639,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"get-aliases","get-aliases",1065741193,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",18,1,4437,4437,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null)),"Get all alias maps for a namespace.",(cljs.core.truth_(cljs.analyzer.get_aliases)?cljs.analyzer.get_aliases.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*checked-arrays*"),new cljs.core.Var(function(){return cljs.analyzer._STAR_checked_arrays_STAR_;},new cljs.core.Symbol("cljs.analyzer","*checked-arrays*","cljs.analyzer/*checked-arrays*",-2132712472,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"*checked-arrays*","*checked-arrays*",-881083318,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",32,1,true,57,57,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer._STAR_checked_arrays_STAR_)?cljs.analyzer._STAR_checked_arrays_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ast-children"),new cljs.core.Var(function(){return cljs.analyzer.ast_children;},new cljs.core.Symbol("cljs.analyzer","ast-children","cljs.analyzer/ast-children",-1503539028,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"ast-children","ast-children",-321356598,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",19,1,1924,1924,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ast","ast",780197459,null)], null)),null,(cljs.core.truth_(cljs.analyzer.ast_children)?cljs.analyzer.ast_children.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"loaded-js-ns?"),new cljs.core.Var(function(){return cljs.analyzer.loaded_js_ns_QMARK_;},new cljs.core.Symbol("cljs.analyzer","loaded-js-ns?","cljs.analyzer/loaded-js-ns?",694709492,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"loaded-js-ns?","loaded-js-ns?",1407398186,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",20,1,834,834,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"prefix","prefix",1374623062,null)], null)),"Check if a JavaScript namespace has been loaded. JavaScript vars are\n  not currently checked.",((cljs.analyzer.loaded_js_ns_QMARK_)?cljs.analyzer.loaded_js_ns_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-vector"),new cljs.core.Var(function(){return cljs.analyzer.analyze_vector;},new cljs.core.Symbol("cljs.analyzer","analyze-vector","cljs.analyzer/analyze-vector",-1963325132,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-vector","analyze-vector",1279583594,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",21,1,4165,4165,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_vector)?cljs.analyzer.analyze_vector.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"unwrap-quote"),new cljs.core.Var(function(){return cljs.analyzer.unwrap_quote;},new cljs.core.Symbol("cljs.analyzer","unwrap-quote","cljs.analyzer/unwrap-quote",2070289812,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"unwrap-quote","unwrap-quote",818979274,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",19,1,1507,1507,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"op","op",-242456428,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"ast","ast",780197459,null)], null)], null)),null,(cljs.core.truth_(cljs.analyzer.unwrap_quote)?cljs.analyzer.unwrap_quote.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"namespaces"),new cljs.core.Var(function(){return cljs.analyzer.namespaces;},new cljs.core.Symbol("cljs.analyzer","namespaces","cljs.analyzer/namespaces",1379742600,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"namespaces","namespaces",196374058,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",16,1,563,563,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer.namespaces)?cljs.analyzer.namespaces.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"elide-analyzer-meta"),new cljs.core.Var(function(){return cljs.analyzer.elide_analyzer_meta;},new cljs.core.Symbol("cljs.analyzer","elide-analyzer-meta","cljs.analyzer/elide-analyzer-meta",-836979956,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"elide-analyzer-meta","elide-analyzer-meta",-2071634006,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",26,1,4224,4224,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),null,(cljs.core.truth_(cljs.analyzer.elide_analyzer_meta)?cljs.analyzer.elide_analyzer_meta.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ns->relpath"),new cljs.core.Var(function(){return cljs.analyzer.ns__GT_relpath;},new cljs.core.Symbol("cljs.analyzer","ns->relpath","cljs.analyzer/ns->relpath",191334537,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"ns->relpath","ns->relpath",-755932053,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",21,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null),new cljs.core.Symbol(null,"ext","ext",643566986,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null),new cljs.core.Symbol(null,"ext","ext",643566986,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),4,234,234,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null),new cljs.core.Symbol(null,"ext","ext",643566986,null)], null)),"Given a namespace as a symbol return the relative path. May optionally\n     provide the file extension, defaults to :cljs.",(cljs.core.truth_(cljs.analyzer.ns__GT_relpath)?cljs.analyzer.ns__GT_relpath.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-let-body"),new cljs.core.Var(function(){return cljs.analyzer.analyze_let_body;},new cljs.core.Symbol("cljs.analyzer","analyze-let-body","cljs.analyzer/analyze-let-body",1791538509,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-let-body","analyze-let-body",742787563,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",23,1,2471,2471,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"context","context",810340414,null),new cljs.core.Symbol(null,"exprs","exprs",-858606675,null),new cljs.core.Symbol(null,"recur-frames","recur-frames",1333326331,null),new cljs.core.Symbol(null,"loop-lets","loop-lets",-617641584,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_let_body)?cljs.analyzer.analyze_let_body.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"extern-pre"),new cljs.core.Var(function(){return cljs.analyzer.extern_pre;},new cljs.core.Symbol("cljs.analyzer","extern-pre","cljs.analyzer/extern-pre",1424560845,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"extern-pre","extern-pre",795918187,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",17,1,1143,1143,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"current-ns","current-ns",-992782341,null)], null)),null,(cljs.core.truth_(cljs.analyzer.extern_pre)?cljs.analyzer.extern_pre.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"get-col"),new cljs.core.Var(function(){return cljs.analyzer.get_col;},new cljs.core.Symbol("cljs.analyzer","get-col","cljs.analyzer/get-col",-829428019,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"get-col","get-col",-2011608213,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",14,1,601,601,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null)),null,(cljs.core.truth_(cljs.analyzer.get_col)?cljs.analyzer.get_col.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*additional-core*"),new cljs.core.Var(function(){return cljs.analyzer._STAR_additional_core_STAR_;},new cljs.core.Symbol("cljs.analyzer","*additional-core*","cljs.analyzer/*additional-core*",1240616110,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"*additional-core*","*additional-core*",-1887760372,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",33,1,true,72,72,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer._STAR_additional_core_STAR_)?cljs.analyzer._STAR_additional_core_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"basic-validate-ns-spec"),new cljs.core.Var(function(){return cljs.analyzer.basic_validate_ns_spec;},new cljs.core.Symbol("cljs.analyzer","basic-validate-ns-spec","cljs.analyzer/basic-validate-ns-spec",158849066,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"basic-validate-ns-spec","basic-validate-ns-spec",1942566028,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",29,1,2884,2884,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"macros?","macros?",-137961925,null),new cljs.core.Symbol(null,"spec","spec",1988051928,null)], null)),null,(cljs.core.truth_(cljs.analyzer.basic_validate_ns_spec)?cljs.analyzer.basic_validate_ns_spec.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*cljs-warnings*"),new cljs.core.Var(function(){return cljs.analyzer._STAR_cljs_warnings_STAR_;},new cljs.core.Symbol("cljs.analyzer","*cljs-warnings*","cljs.analyzer/*cljs-warnings*",-289667730,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"*cljs-warnings*","*cljs-warnings*",-1492688692,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",31,1,true,130,130,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer._STAR_cljs_warnings_STAR_)?cljs.analyzer._STAR_cljs_warnings_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"alias->type"),new cljs.core.Var(function(){return cljs.analyzer.alias__GT_type;},new cljs.core.Symbol("cljs.analyzer","alias->type","cljs.analyzer/alias->type",2058651022,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"alias->type","alias->type",-1054006932,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",17,1,1031,1031,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer.alias__GT_type)?cljs.analyzer.alias__GT_type.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyzed?"),new cljs.core.Var(function(){return cljs.analyzer.analyzed_QMARK_;},new cljs.core.Symbol("cljs.analyzer","analyzed?","cljs.analyzer/analyzed?",394652706,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyzed?","analyzed?",-1458830900,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",16,1,3759,3759,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns boolean if the form has already been marked as analyzed.",((cljs.analyzer.analyzed_QMARK_)?cljs.analyzer.analyzed_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-deps"),new cljs.core.Var(function(){return cljs.analyzer.analyze_deps;},new cljs.core.Symbol("cljs.analyzer","analyze-deps","cljs.analyzer/analyze-deps",1692727618,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-deps","analyze-deps",-1653758484,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",19,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),4,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),4,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"lib","lib",1832340253,null),new cljs.core.Symbol(null,"deps","deps",-771075450,null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"lib","lib",1832340253,null),new cljs.core.Symbol(null,"deps","deps",-771075450,null),new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"lib","lib",1832340253,null),new cljs.core.Symbol(null,"deps","deps",-771075450,null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"lib","lib",1832340253,null),new cljs.core.Symbol(null,"deps","deps",-771075450,null),new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,2734,2734,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"lib","lib",1832340253,null),new cljs.core.Symbol(null,"deps","deps",-771075450,null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"lib","lib",1832340253,null),new cljs.core.Symbol(null,"deps","deps",-771075450,null),new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),"Given a lib, a namespace, deps, its dependencies, env, an analysis environment\n   and opts, compiler options - analyze all of the dependencies. Required to\n   correctly analyze usage of other namespaces.",(cljs.core.truth_(cljs.analyzer.analyze_deps)?cljs.analyzer.analyze_deps.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"array-type?"),new cljs.core.Var(function(){return cljs.analyzer.array_type_QMARK_;},new cljs.core.Symbol("cljs.analyzer","array-type?","cljs.analyzer/array-type?",-1653570582,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"array-type?","array-type?",-622367156,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",18,1,3665,3665,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t","t",242699008,null)], null)),null,((cljs.analyzer.array_type_QMARK_)?cljs.analyzer.array_type_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dotted-symbol?"),new cljs.core.Var(function(){return cljs.analyzer.dotted_symbol_QMARK_;},new cljs.core.Symbol("cljs.analyzer","dotted-symbol?","cljs.analyzer/dotted-symbol?",1215677730,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"dotted-symbol?","dotted-symbol?",51027660,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",21,1,1092,1092,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null)], null)),null,(cljs.core.truth_(cljs.analyzer.dotted_symbol_QMARK_)?cljs.analyzer.dotted_symbol_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*cljs-macros-is-classpath*"),new cljs.core.Var(function(){return cljs.analyzer._STAR_cljs_macros_is_classpath_STAR_;},new cljs.core.Symbol("cljs.analyzer","*cljs-macros-is-classpath*","cljs.analyzer/*cljs-macros-is-classpath*",1674023778,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"*cljs-macros-is-classpath*","*cljs-macros-is-classpath*",442054412,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",42,1,true,62,62,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer._STAR_cljs_macros_is_classpath_STAR_)?cljs.analyzer._STAR_cljs_macros_is_classpath_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"prim-ctor?"),new cljs.core.Var(function(){return cljs.analyzer.prim_ctor_QMARK_;},new cljs.core.Symbol("cljs.analyzer","prim-ctor?","cljs.analyzer/prim-ctor?",1542063147,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"prim-ctor?","prim-ctor?",23419021,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",17,1,2598,2598,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t","t",242699008,null)], null)),"Test whether a tag is a constructor for a JS primitive",(cljs.core.truth_(cljs.analyzer.prim_ctor_QMARK_)?cljs.analyzer.prim_ctor_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*allow-redef*"),new cljs.core.Var(function(){return cljs.analyzer._STAR_allow_redef_STAR_;},new cljs.core.Symbol("cljs.analyzer","*allow-redef*","cljs.analyzer/*allow-redef*",-501091249,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"*allow-redef*","*allow-redef*",-1466478419,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",29,1,true,1451,1451,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer._STAR_allow_redef_STAR_)?cljs.analyzer._STAR_allow_redef_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-fn-method-body"),new cljs.core.Var(function(){return cljs.analyzer.analyze_fn_method_body;},new cljs.core.Symbol("cljs.analyzer","analyze-fn-method-body","cljs.analyzer/analyze-fn-method-body",1393884939,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-fn-method-body","analyze-fn-method-body",344084717,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",29,1,2176,2176,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"recur-frames","recur-frames",1333326331,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_fn_method_body)?cljs.analyzer.analyze_fn_method_body.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"infer-type"),new cljs.core.Var(function(){return cljs.analyzer.infer_type;},new cljs.core.Symbol("cljs.analyzer","infer-type","cljs.analyzer/infer-type",-1378118525,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"infer-type","infer-type",374436141,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",17,1,4241,4241,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag","tag",350170304,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"ast","ast",780197459,null)], null),new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)),null,(cljs.core.truth_(cljs.analyzer.infer_type)?cljs.analyzer.infer_type.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"parse-import-spec"),new cljs.core.Var(function(){return cljs.analyzer.parse_import_spec;},new cljs.core.Symbol("cljs.analyzer","parse-import-spec","cljs.analyzer/parse-import-spec",251144655,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"parse-import-spec","parse-import-spec",-193494483,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",24,1,3044,3044,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"deps","deps",-771075450,null),new cljs.core.Symbol(null,"spec","spec",1988051928,null)], null)),null,(cljs.core.truth_(cljs.analyzer.parse_import_spec)?cljs.analyzer.parse_import_spec.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"clj-ns->cljs-ns"),new cljs.core.Var(function(){return cljs.analyzer.clj_ns__GT_cljs_ns;},new cljs.core.Symbol("cljs.analyzer","clj-ns->cljs-ns","cljs.analyzer/clj-ns->cljs-ns",895785347,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"clj-ns->cljs-ns","clj-ns->cljs-ns",-1949139411,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",22,1,3081,3081,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null)], null)),"Given a symbol that starts with clojure as the first segment return the\n   same symbol with the first segment replaced with cljs",(cljs.core.truth_(cljs.analyzer.clj_ns__GT_cljs_ns)?cljs.analyzer.clj_ns__GT_cljs_ns.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"constant-value?"),new cljs.core.Var(function(){return cljs.analyzer.constant_value_QMARK_;},new cljs.core.Symbol("cljs.analyzer","constant-value?","cljs.analyzer/constant-value?",-893015101,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"constant-value?","constant-value?",-1807987091,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",22,1,1932,1932,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"op","op",-242456428,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"ast","ast",780197459,null)], null)], null)),null,(cljs.core.truth_(cljs.analyzer.constant_value_QMARK_)?cljs.analyzer.constant_value_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dump-specs"),new cljs.core.Var(function(){return cljs.analyzer.dump_specs;},new cljs.core.Symbol("cljs.analyzer","dump-specs","cljs.analyzer/dump-specs",833541775,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"dump-specs","dump-specs",-1911002387,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",17,1,4754,4754,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null)),"Dumps registered speced vars for a given namespace into the compiler\n  environment.",(cljs.core.truth_(cljs.analyzer.dump_specs)?cljs.analyzer.dump_specs.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*fn-invoke-direct*"),new cljs.core.Var(function(){return cljs.analyzer._STAR_fn_invoke_direct_STAR_;},new cljs.core.Symbol("cljs.analyzer","*fn-invoke-direct*","cljs.analyzer/*fn-invoke-direct*",486753923,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"*fn-invoke-direct*","*fn-invoke-direct*",-676011219,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",34,1,true,60,60,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer._STAR_fn_invoke_direct_STAR_)?cljs.analyzer._STAR_fn_invoke_direct_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"use->require"),new cljs.core.Var(function(){return cljs.analyzer.use__GT_require;},new cljs.core.Symbol("cljs.analyzer","use->require","cljs.analyzer/use->require",-512659473,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"use->require","use->require",1072153421,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",19,1,2954,2954,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"lib","lib",1832340253,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"filters","filters",-1679708850,null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"spec","spec",1988051928,null)], null)], null)),null,(cljs.core.truth_(cljs.analyzer.use__GT_require)?cljs.analyzer.use__GT_require.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"inferred-use-macros"),new cljs.core.Var(function(){return cljs.analyzer.inferred_use_macros;},new cljs.core.Symbol("cljs.analyzer","inferred-use-macros","cljs.analyzer/inferred-use-macros",1205611279,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"inferred-use-macros","inferred-use-macros",155537261,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",26,1,2815,2815,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"use-macros","use-macros",734893134,null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null)),null,(cljs.core.truth_(cljs.analyzer.inferred_use_macros)?cljs.analyzer.inferred_use_macros.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-symbol"),new cljs.core.Var(function(){return cljs.analyzer.analyze_symbol;},new cljs.core.Symbol("cljs.analyzer","analyze-symbol","cljs.analyzer/analyze-symbol",1562239180,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-symbol","analyze-symbol",-2014921554,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",21,1,3896,3896,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"sym","sym",195671222,null)], null)),"Finds the var associated with sym",(cljs.core.truth_(cljs.analyzer.analyze_symbol)?cljs.analyzer.analyze_symbol.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"confirm-var-exists"),new cljs.core.Var(function(){return cljs.analyzer.confirm_var_exists;},new cljs.core.Symbol("cljs.analyzer","confirm-var-exists","cljs.analyzer/confirm-var-exists",2102133152,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"confirm-var-exists","confirm-var-exists",-2064286386,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",25,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),4,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),4,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"prefix","prefix",1374623062,null),new cljs.core.Symbol(null,"suffix","suffix",2007904584,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"prefix","prefix",1374623062,null),new cljs.core.Symbol(null,"suffix","suffix",2007904584,null),new cljs.core.Symbol(null,"missing-fn","missing-fn",533299940,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"prefix","prefix",1374623062,null),new cljs.core.Symbol(null,"suffix","suffix",2007904584,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"prefix","prefix",1374623062,null),new cljs.core.Symbol(null,"suffix","suffix",2007904584,null),new cljs.core.Symbol(null,"missing-fn","missing-fn",533299940,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,893,893,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"prefix","prefix",1374623062,null),new cljs.core.Symbol(null,"suffix","suffix",2007904584,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"prefix","prefix",1374623062,null),new cljs.core.Symbol(null,"suffix","suffix",2007904584,null),new cljs.core.Symbol(null,"missing-fn","missing-fn",533299940,null)], null)),null,(cljs.core.truth_(cljs.analyzer.confirm_var_exists)?cljs.analyzer.confirm_var_exists.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-keyword"),new cljs.core.Var(function(){return cljs.analyzer.analyze_keyword;},new cljs.core.Symbol("cljs.analyzer","analyze-keyword","cljs.analyzer/analyze-keyword",4743564,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-keyword","analyze-keyword",1543454062,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",22,1,1467,1467,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"sym","sym",195671222,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_keyword)?cljs.analyzer.analyze_keyword.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"SENTINEL"),new cljs.core.Var(function(){return cljs.analyzer.SENTINEL;},new cljs.core.Symbol("cljs.analyzer","SENTINEL","cljs.analyzer/SENTINEL",-1842204280,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"SENTINEL","SENTINEL",-659829394,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",23,10,207,207,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer.SENTINEL)?cljs.analyzer.SENTINEL.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-let-bindings"),new cljs.core.Var(function(){return cljs.analyzer.analyze_let_bindings;},new cljs.core.Symbol("cljs.analyzer","analyze-let-bindings","cljs.analyzer/analyze-let-bindings",-871937056,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-let-bindings","analyze-let-bindings",379170702,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",27,1,2465,2465,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"encl-env","encl-env",-552935929,null),new cljs.core.Symbol(null,"bindings","bindings",-1383038577,null),new cljs.core.Symbol(null,"op","op",-242456428,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_let_bindings)?cljs.analyzer.analyze_let_bindings.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"munge-global-export"),new cljs.core.Var(function(){return cljs.analyzer.munge_global_export;},new cljs.core.Symbol("cljs.analyzer","munge-global-export","cljs.analyzer/munge-global-export",1381342156,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"munge-global-export","munge-global-export",467353518,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",26,1,1109,1109,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null)], null)),null,(cljs.core.truth_(cljs.analyzer.munge_global_export)?cljs.analyzer.munge_global_export.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*loop-lets*"),new cljs.core.Var(function(){return cljs.analyzer._STAR_loop_lets_STAR_;},new cljs.core.Symbol("cljs.analyzer","*loop-lets*","cljs.analyzer/*loop-lets*",-2042095796,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"*loop-lets*","*loop-lets*",-2688082,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",27,1,true,1450,1450,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer._STAR_loop_lets_STAR_)?cljs.analyzer._STAR_loop_lets_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->type-set"),new cljs.core.Var(function(){return cljs.analyzer.__GT_type_set;},new cljs.core.Symbol("cljs.analyzer","->type-set","cljs.analyzer/->type-set",-1016935187,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"->type-set","->type-set",418091087,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",17,1,996,996,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t","t",242699008,null)], null)),"Ensures that a type tag is a set.",(cljs.core.truth_(cljs.analyzer.__GT_type_set)?cljs.analyzer.__GT_type_set.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"additional-core-name?"),new cljs.core.Var(function(){return cljs.analyzer.additional_core_name_QMARK_;},new cljs.core.Symbol("cljs.analyzer","additional-core-name?","cljs.analyzer/additional-core-name?",-1955950611,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"additional-core-name?","additional-core-name?",-839110577,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",28,1,959,959,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"sym","sym",195671222,null)], null)),"Is sym visible from specified additional-core in the current compilation namespace?",((cljs.analyzer.additional_core_name_QMARK_)?cljs.analyzer.additional_core_name_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"js-tag"),new cljs.core.Var(function(){return cljs.analyzer.js_tag;},new cljs.core.Symbol("cljs.analyzer","js-tag","cljs.analyzer/js-tag",-1972808691,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"js-tag","js-tag",-719441809,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",13,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),4,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),4,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pre","pre",-535978900,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pre","pre",-535978900,null),new cljs.core.Symbol(null,"tag-type","tag-type",-351794828,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pre","pre",-535978900,null),new cljs.core.Symbol(null,"tag-type","tag-type",-351794828,null),new cljs.core.Symbol(null,"externs","externs",1862252204,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pre","pre",-535978900,null),new cljs.core.Symbol(null,"tag-type","tag-type",-351794828,null),new cljs.core.Symbol(null,"externs","externs",1862252204,null),new cljs.core.Symbol(null,"top","top",-215740434,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pre","pre",-535978900,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pre","pre",-535978900,null),new cljs.core.Symbol(null,"tag-type","tag-type",-351794828,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pre","pre",-535978900,null),new cljs.core.Symbol(null,"tag-type","tag-type",-351794828,null),new cljs.core.Symbol(null,"externs","externs",1862252204,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pre","pre",-535978900,null),new cljs.core.Symbol(null,"tag-type","tag-type",-351794828,null),new cljs.core.Symbol(null,"externs","externs",1862252204,null),new cljs.core.Symbol(null,"top","top",-215740434,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null,null)], null),1,1077,1077,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pre","pre",-535978900,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pre","pre",-535978900,null),new cljs.core.Symbol(null,"tag-type","tag-type",-351794828,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pre","pre",-535978900,null),new cljs.core.Symbol(null,"tag-type","tag-type",-351794828,null),new cljs.core.Symbol(null,"externs","externs",1862252204,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pre","pre",-535978900,null),new cljs.core.Symbol(null,"tag-type","tag-type",-351794828,null),new cljs.core.Symbol(null,"externs","externs",1862252204,null),new cljs.core.Symbol(null,"top","top",-215740434,null)], null)),null,(cljs.core.truth_(cljs.analyzer.js_tag)?cljs.analyzer.js_tag.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"js-reserved"),new cljs.core.Var(function(){return cljs.analyzer.js_reserved;},new cljs.core.Symbol("cljs.analyzer","js-reserved","cljs.analyzer/js-reserved",-224853815,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"js-reserved","js-reserved",740533423,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",17,1,188,188,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer.js_reserved)?cljs.analyzer.js_reserved.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*load-tests*"),new cljs.core.Var(function(){return cljs.analyzer._STAR_load_tests_STAR_;},new cljs.core.Symbol("cljs.analyzer","*load-tests*","cljs.analyzer/*load-tests*",1930682797,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"*load-tests*","*load-tests*",882394383,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",28,1,true,65,65,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer._STAR_load_tests_STAR_)?cljs.analyzer._STAR_load_tests_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"check-use-macros-inferring-missing"),new cljs.core.Var(function(){return cljs.analyzer.check_use_macros_inferring_missing;},new cljs.core.Symbol("cljs.analyzer","check-use-macros-inferring-missing","cljs.analyzer/check-use-macros-inferring-missing",1000400237,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"check-use-macros-inferring-missing","check-use-macros-inferring-missing",1916488143,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",41,1,2844,2844,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"uses","uses",1873196219,null),new cljs.core.Symbol(null,"use-macros","use-macros",734893134,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"ast","ast",780197459,null)], null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null)),null,(cljs.core.truth_(cljs.analyzer.check_use_macros_inferring_missing)?cljs.analyzer.check_use_macros_inferring_missing.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"canonicalize-type"),new cljs.core.Var(function(){return cljs.analyzer.canonicalize_type;},new cljs.core.Symbol("cljs.analyzer","canonicalize-type","cljs.analyzer/canonicalize-type",-980919859,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"canonicalize-type","canonicalize-type",235077167,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",24,1,1004,1004,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t","t",242699008,null)], null)),null,(cljs.core.truth_(cljs.analyzer.canonicalize_type)?cljs.analyzer.canonicalize_type.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"macroexpand-1*"),new cljs.core.Var(function(){return cljs.analyzer.macroexpand_1_STAR_;},new cljs.core.Symbol("cljs.analyzer","macroexpand-1*","cljs.analyzer/macroexpand-1*",-2110789983,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"macroexpand-1*","macroexpand-1*",-660258225,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",21,1,4045,4045,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null)),null,(cljs.core.truth_(cljs.analyzer.macroexpand_1_STAR_)?cljs.analyzer.macroexpand_1_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"check-use-macros"),new cljs.core.Var(function(){return cljs.analyzer.check_use_macros;},new cljs.core.Symbol("cljs.analyzer","check-use-macros","cljs.analyzer/check-use-macros",-1534396823,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"check-use-macros","check-use-macros",2132562639,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",23,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"use-macros","use-macros",734893134,null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"use-macros","use-macros",734893134,null),new cljs.core.Symbol(null,"missing-uses","missing-uses",885834342,null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"use-macros","use-macros",734893134,null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"use-macros","use-macros",734893134,null),new cljs.core.Symbol(null,"missing-uses","missing-uses",885834342,null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,2831,2831,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"use-macros","use-macros",734893134,null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"use-macros","use-macros",734893134,null),new cljs.core.Symbol(null,"missing-uses","missing-uses",885834342,null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null)),null,(cljs.core.truth_(cljs.analyzer.check_use_macros)?cljs.analyzer.check_use_macros.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"get-expander"),new cljs.core.Var(function(){return cljs.analyzer.get_expander;},new cljs.core.Symbol("cljs.analyzer","get-expander","cljs.analyzer/get-expander",1842748589,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"get-expander","get-expander",642316047,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",19,1,4002,4002,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null)),"Given a sym, a symbol identifying a macro, and env, an analysis environment\n   return the corresponding Clojure macroexpander.",(cljs.core.truth_(cljs.analyzer.get_expander)?cljs.analyzer.get_expander.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-js-star"),new cljs.core.Var(function(){return cljs.analyzer.analyze_js_star;},new cljs.core.Symbol("cljs.analyzer","analyze-js-star","cljs.analyzer/analyze-js-star",-875880430,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-js-star","analyze-js-star",224150640,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",22,1,3722,3722,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"jsform","jsform",886020105,null),new cljs.core.Symbol(null,"args","args",-1338879193,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_js_star)?cljs.analyzer.analyze_js_star.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"build-dot-form"),new cljs.core.Var(function(){return cljs.analyzer.build_dot_form;},new cljs.core.Symbol("cljs.analyzer","build-dot-form","cljs.analyzer/build-dot-form",1472496510,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"build-dot-form","build-dot-form",-1856164208,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",25,1,3490,3490,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer.build_dot_form)?cljs.analyzer.build_dot_form.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"js-star-interp"),new cljs.core.Var(function(){return cljs.analyzer.js_star_interp;},new cljs.core.Symbol("cljs.analyzer","js-star-interp","cljs.analyzer/js-star-interp",1193178910,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"js-star-interp","js-star-interp",-41479248,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",21,1,3616,3616,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),cljs.core.with_meta(new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"String","String",-2070057435,null)], null))], null)),null,(cljs.core.truth_(cljs.analyzer.js_star_interp)?cljs.analyzer.js_star_interp.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*recur-frames*"),new cljs.core.Var(function(){return cljs.analyzer._STAR_recur_frames_STAR_;},new cljs.core.Symbol("cljs.analyzer","*recur-frames*","cljs.analyzer/*recur-frames*",-431441741,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"*recur-frames*","*recur-frames*",1489093649,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",30,1,true,1449,1449,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer._STAR_recur_frames_STAR_)?cljs.analyzer._STAR_recur_frames_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-fn-methods-pass2*"),new cljs.core.Var(function(){return cljs.analyzer.analyze_fn_methods_pass2_STAR_;},new cljs.core.Symbol("cljs.analyzer","analyze-fn-methods-pass2*","cljs.analyzer/analyze-fn-methods-pass2*",-1089989837,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-fn-methods-pass2*","analyze-fn-methods-pass2*",-259610479,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",32,1,2236,2236,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"menv","menv",-98338501,null),new cljs.core.Symbol(null,"locals","locals",-2119139986,null),new cljs.core.Symbol(null,"type","type",-1480165421,null),new cljs.core.Symbol(null,"meths","meths",1226876764,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_fn_methods_pass2_STAR_)?cljs.analyzer.analyze_fn_methods_pass2_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"macroexpand-1"),new cljs.core.Var(function(){return cljs.analyzer.macroexpand_1;},new cljs.core.Symbol("cljs.analyzer","macroexpand-1","cljs.analyzer/macroexpand-1",-507485485,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"macroexpand-1","macroexpand-1",659241329,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",20,1,4105,4105,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null)),"Given a env, an analysis environment, and form, a ClojureScript form,\n   macroexpand the form once.",(cljs.core.truth_(cljs.analyzer.macroexpand_1)?cljs.analyzer.macroexpand_1.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"resolve-macro-var"),new cljs.core.Var(function(){return cljs.analyzer.resolve_macro_var;},new cljs.core.Symbol("cljs.analyzer","resolve-macro-var","cljs.analyzer/resolve-macro-var",-267940745,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"resolve-macro-var","resolve-macro-var",-1215813167,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",24,1,1405,1405,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"sym","sym",195671222,null)], null)),"Given env, an analysis environment, and sym, a symbol, resolve a macro.",(cljs.core.truth_(cljs.analyzer.resolve_macro_var)?cljs.analyzer.resolve_macro_var.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-let-binding-init"),new cljs.core.Var(function(){return cljs.analyzer.analyze_let_binding_init;},new cljs.core.Symbol("cljs.analyzer","analyze-let-binding-init","cljs.analyzer/analyze-let-binding-init",-1654294785,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-let-binding-init","analyze-let-binding-init",586027537,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",31,1,2408,2408,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"init","init",-234949907,null),new cljs.core.Symbol(null,"loop-lets","loop-lets",-617641584,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_let_binding_init)?cljs.analyzer.analyze_let_binding_init.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"infer-tag"),new cljs.core.Var(function(){return cljs.analyzer.infer_tag;},new cljs.core.Symbol("cljs.analyzer","infer-tag","cljs.analyzer/infer-tag",1509337727,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"infer-tag","infer-tag",-1836247151,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",16,1,1573,1573,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"ast","ast",780197459,null)], null)),"Given env, an analysis environment, and e, an AST node, return the inferred\n   type of the node",(cljs.core.truth_(cljs.analyzer.infer_tag)?cljs.analyzer.infer_tag.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"canonicalize-import-specs"),new cljs.core.Var(function(){return cljs.analyzer.canonicalize_import_specs;},new cljs.core.Symbol("cljs.analyzer","canonicalize-import-specs","cljs.analyzer/canonicalize-import-specs",1181826292,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"canonicalize-import-specs","canonicalize-import-specs",16488530,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",32,1,3130,3130,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"specs","specs",-1227865028,null)], null)),null,(cljs.core.truth_(cljs.analyzer.canonicalize_import_specs)?cljs.analyzer.canonicalize_import_specs.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-form-seq"),new cljs.core.Var(function(){return cljs.analyzer.analyze_form_seq;},new cljs.core.Symbol("cljs.analyzer","analyze-form-seq","cljs.analyzer/analyze-form-seq",555012060,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-form-seq","analyze-form-seq",1788848242,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",23,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"forms","forms",-608443419,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"forms","forms",-608443419,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"forms","forms",-608443419,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"return-last?","return-last?",1007068621,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"forms","forms",-608443419,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"forms","forms",-608443419,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"forms","forms",-608443419,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"return-last?","return-last?",1007068621,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,4839,4839,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"forms","forms",-608443419,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"forms","forms",-608443419,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"forms","forms",-608443419,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"return-last?","return-last?",1007068621,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_form_seq)?cljs.analyzer.analyze_form_seq.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-let-body*"),new cljs.core.Var(function(){return cljs.analyzer.analyze_let_body_STAR_;},new cljs.core.Symbol("cljs.analyzer","analyze-let-body*","cljs.analyzer/analyze-let-body*",-1005092716,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-let-body*","analyze-let-body*",262073586,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",24,1,2468,2468,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"context","context",810340414,null),new cljs.core.Symbol(null,"exprs","exprs",-858606675,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_let_body_STAR_)?cljs.analyzer.analyze_let_body_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-js-star*"),new cljs.core.Var(function(){return cljs.analyzer.analyze_js_star_STAR_;},new cljs.core.Symbol("cljs.analyzer","analyze-js-star*","cljs.analyzer/analyze-js-star*",-1081854768,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-js-star*","analyze-js-star*",1679792434,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",23,1,3693,3693,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"jsform","jsform",886020105,null),new cljs.core.Symbol(null,"args","args",-1338879193,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_js_star_STAR_)?cljs.analyzer.analyze_js_star_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"inferred-rename-macros"),new cljs.core.Var(function(){return cljs.analyzer.inferred_rename_macros;},new cljs.core.Symbol("cljs.analyzer","inferred-rename-macros","cljs.analyzer/inferred-rename-macros",-378992044,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"inferred-rename-macros","inferred-rename-macros",1407440562,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",29,1,2820,2820,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"rename-macros","rename-macros",-1578003257,null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null)),null,(cljs.core.truth_(cljs.analyzer.inferred_rename_macros)?cljs.analyzer.inferred_rename_macros.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"parse-ns-error-msg"),new cljs.core.Var(function(){return cljs.analyzer.parse_ns_error_msg;},new cljs.core.Symbol("cljs.analyzer","parse-ns-error-msg","cljs.analyzer/parse-ns-error-msg",-797716912,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"parse-ns-error-msg","parse-ns-error-msg",466186994,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",25,1,2881,2881,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"msg","msg",254428083,null)], null)),null,(cljs.core.truth_(cljs.analyzer.parse_ns_error_msg)?cljs.analyzer.parse_ns_error_msg.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"missing-use-macro?"),new cljs.core.Var(function(){return cljs.analyzer.missing_use_macro_QMARK_;},new cljs.core.Symbol("cljs.analyzer","missing-use-macro?","cljs.analyzer/missing-use-macro?",-1534932044,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"missing-use-macro?","missing-use-macro?",520853266,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",25,1,2786,2786,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"lib","lib",1832340253,null),new cljs.core.Symbol(null,"sym","sym",195671222,null)], null)),null,(cljs.core.truth_(cljs.analyzer.missing_use_macro_QMARK_)?cljs.analyzer.missing_use_macro_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"js-var?"),new cljs.core.Var(function(){return cljs.analyzer.js_var_QMARK_;},new cljs.core.Symbol("cljs.analyzer","js-var?","cljs.analyzer/js-var?",488954928,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"js-var?","js-var?",-944785518,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",14,1,1545,1545,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ast","ast",780197459,null)], null)),null,(cljs.core.truth_(cljs.analyzer.js_var_QMARK_)?cljs.analyzer.js_var_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"record-ns+name"),new cljs.core.Var(function(){return cljs.analyzer.record_ns_PLUS_name;},new cljs.core.Symbol("cljs.analyzer","record-ns+name","cljs.analyzer/record-ns+name",-1257518192,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"record-ns+name","record-ns+name",-24074254,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",21,1,4201,4201,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(cljs.analyzer.record_ns_PLUS_name)?cljs.analyzer.record_ns_PLUS_name.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyzed"),new cljs.core.Var(function(){return cljs.analyzer.analyzed;},new cljs.core.Symbol("cljs.analyzer","analyzed","cljs.analyzer/analyzed",905437365,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyzed","analyzed",1283243027,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",15,1,3751,3751,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Mark a form as being analyzed. Assumes x satisfies IMeta. Useful to suppress\n  warnings that will have been caught by a first compiler pass.",(cljs.core.truth_(cljs.analyzer.analyzed)?cljs.analyzer.analyzed.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"resolve-symbol"),new cljs.core.Var(function(){return cljs.analyzer.resolve_symbol;},new cljs.core.Symbol("cljs.analyzer","resolve-symbol","cljs.analyzer/resolve-symbol",-181106627,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"resolve-symbol","resolve-symbol",1321364563,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",21,1,4429,4429,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null)], null)),null,(cljs.core.truth_(cljs.analyzer.resolve_symbol)?cljs.analyzer.resolve_symbol.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"missing-renames"),new cljs.core.Var(function(){return cljs.analyzer.missing_renames;},new cljs.core.Symbol("cljs.analyzer","missing-renames","cljs.analyzer/missing-renames",639498673,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"missing-renames","missing-renames",-326853293,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",22,1,2805,2805,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"renames","renames",1983809895,null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null)),null,(cljs.core.truth_(cljs.analyzer.missing_renames)?cljs.analyzer.missing_renames.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"resolve*"),new cljs.core.Var(function(){return cljs.analyzer.resolve_STAR_;},new cljs.core.Symbol("cljs.analyzer","resolve*","cljs.analyzer/resolve*",-749221387,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"resolve*","resolve*",-1646482093,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",19,1,1135,1135,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer.resolve_STAR_)?cljs.analyzer.resolve_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"default-passes"),new cljs.core.Var(function(){return cljs.analyzer.default_passes;},new cljs.core.Symbol("cljs.analyzer","default-passes","cljs.analyzer/default-passes",-532242091,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"default-passes","default-passes",-1176648269,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",20,1,4372,4372,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer.default_passes)?cljs.analyzer.default_passes.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*cljs-macros-path*"),new cljs.core.Var(function(){return cljs.analyzer._STAR_cljs_macros_path_STAR_;},new cljs.core.Symbol("cljs.analyzer","*cljs-macros-path*","cljs.analyzer/*cljs-macros-path*",-1737616995,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"*cljs-macros-path*","*cljs-macros-path*",1608601139,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",34,1,true,61,61,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer._STAR_cljs_macros_path_STAR_)?cljs.analyzer._STAR_cljs_macros_path_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"confirm-var-exist-warning"),new cljs.core.Var(function(){return cljs.analyzer.confirm_var_exist_warning;},new cljs.core.Symbol("cljs.analyzer","confirm-var-exist-warning","cljs.analyzer/confirm-var-exist-warning",2071109205,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"confirm-var-exist-warning","confirm-var-exist-warning",905575091,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",32,1,819,819,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"prefix","prefix",1374623062,null),new cljs.core.Symbol(null,"suffix","suffix",2007904584,null)], null)),null,(cljs.core.truth_(cljs.analyzer.confirm_var_exist_warning)?cljs.analyzer.confirm_var_exist_warning.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"unchecked-arrays?"),new cljs.core.Var(function(){return cljs.analyzer.unchecked_arrays_QMARK_;},new cljs.core.Symbol("cljs.analyzer","unchecked-arrays?","cljs.analyzer/unchecked-arrays?",232853425,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"unchecked-arrays?","unchecked-arrays?",-1000623277,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",24,1,171,171,cljs.core.list(cljs.core.PersistentVector.EMPTY),null,(cljs.core.truth_(cljs.analyzer.unchecked_arrays_QMARK_)?cljs.analyzer.unchecked_arrays_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-dot"),new cljs.core.Var(function(){return cljs.analyzer.analyze_dot;},new cljs.core.Symbol("cljs.analyzer","analyze-dot","cljs.analyzer/analyze-dot",1793451805,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-dot","analyze-dot",-1536205901,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",18,1,3542,3542,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"target","target",1893533248,null),new cljs.core.Symbol(null,"field","field",338095027,null),new cljs.core.Symbol(null,"member+","member+",1248475239,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_dot)?cljs.analyzer.analyze_dot.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-do-statements"),new cljs.core.Var(function(){return cljs.analyzer.analyze_do_statements;},new cljs.core.Symbol("cljs.analyzer","analyze-do-statements","cljs.analyzer/analyze-do-statements",-1846065930,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-do-statements","analyze-do-statements",-561104876,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",28,1,2382,2382,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"exprs","exprs",-858606675,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_do_statements)?cljs.analyzer.analyze_do_statements.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"get-line"),new cljs.core.Var(function(){return cljs.analyzer.get_line;},new cljs.core.Symbol("cljs.analyzer","get-line","cljs.analyzer/get-line",-579878934,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"get-line","get-line",-1763436460,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",15,1,598,598,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null)),null,(cljs.core.truth_(cljs.analyzer.get_line)?cljs.analyzer.get_line.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-do-statements*"),new cljs.core.Var(function(){return cljs.analyzer.analyze_do_statements_STAR_;},new cljs.core.Symbol("cljs.analyzer","analyze-do-statements*","cljs.analyzer/analyze-do-statements*",295323890,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-do-statements*","analyze-do-statements*",1264784532,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",29,1,2379,2379,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"exprs","exprs",-858606675,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_do_statements_STAR_)?cljs.analyzer.analyze_do_statements_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-seq"),new cljs.core.Var(function(){return cljs.analyzer.analyze_seq;},new cljs.core.Symbol("cljs.analyzer","analyze-seq","cljs.analyzer/analyze-seq",1088090998,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-seq","analyze-seq",508897428,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),4,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),4,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,4122,4122,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_seq)?cljs.analyzer.analyze_seq.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"desugar-dotted-expr"),new cljs.core.Var(function(){return cljs.analyzer.desugar_dotted_expr;},new cljs.core.Symbol("cljs.analyzer","desugar-dotted-expr","cljs.analyzer/desugar-dotted-expr",-661127542,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"desugar-dotted-expr","desugar-dotted-expr",23089780,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",26,1,3869,3869,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"op","op",-242456428,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"expr","expr",-1908713478,null)], null)], null)),null,(cljs.core.truth_(cljs.analyzer.desugar_dotted_expr)?cljs.analyzer.desugar_dotted_expr.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"find-def-clash"),new cljs.core.Var(function(){return cljs.analyzer.find_def_clash;},new cljs.core.Symbol("cljs.analyzer","find-def-clash","cljs.analyzer/find-def-clash",-1701590026,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"find-def-clash","find-def-clash",-803707116,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",21,1,3188,3188,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"ns","ns",2082130287,null),new cljs.core.Symbol(null,"segments","segments",-716899820,null)], null)),null,(cljs.core.truth_(cljs.analyzer.find_def_clash)?cljs.analyzer.find_def_clash.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"has-error-data?"),new cljs.core.Var(function(){return cljs.analyzer.has_error_data_QMARK_;},new cljs.core.Symbol("cljs.analyzer","has-error-data?","cljs.analyzer/has-error-data?",-2145150806,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"has-error-data?","has-error-data?",-961907948,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",22,1,794,794,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ex","ex",226760186,null)], null)),null,((cljs.analyzer.has_error_data_QMARK_)?cljs.analyzer.has_error_data_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"get-expander*"),new cljs.core.Var(function(){return cljs.analyzer.get_expander_STAR_;},new cljs.core.Symbol("cljs.analyzer","get-expander*","cljs.analyzer/get-expander*",-1063135402,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"get-expander*","get-expander*",-2041089036,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",20,1,3974,3974,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null)),null,(cljs.core.truth_(cljs.analyzer.get_expander_STAR_)?cljs.analyzer.get_expander_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"t_cljs$analyzer40402"),new cljs.core.Var(function(){return cljs.analyzer.t_cljs$analyzer40402;},new cljs.core.Symbol("cljs.analyzer","t_cljs$analyzer40402","cljs.analyzer/t_cljs$analyzer40402",527478867,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",new cljs.core.Keyword(null,"line","line",212345235),571,new cljs.core.Keyword(null,"column","column",2078222095),6,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_cljs$analyzer40402","t_cljs$analyzer40402",1509547253,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.analyzer.t_cljs$analyzer40402)?cljs.analyzer.t_cljs$analyzer40402.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"fn-name-var"),new cljs.core.Var(function(){return cljs.analyzer.fn_name_var;},new cljs.core.Symbol("cljs.analyzer","fn-name-var","cljs.analyzer/fn-name-var",724622839,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"fn-name-var","fn-name-var",-1850773227,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",18,1,2218,2218,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"locals","locals",-2119139986,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null)),null,(cljs.core.truth_(cljs.analyzer.fn_name_var)?cljs.analyzer.fn_name_var.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"goog-module-dep?"),new cljs.core.Var(function(){return cljs.analyzer.goog_module_dep_QMARK_;},new cljs.core.Symbol("cljs.analyzer","goog-module-dep?","cljs.analyzer/goog-module-dep?",1369370259,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"goog-module-dep?","goog-module-dep?",404193589,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",23,1,881,881,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"module","module",-1229817578,null)], null)),null,(cljs.core.truth_(cljs.analyzer.goog_module_dep_QMARK_)?cljs.analyzer.goog_module_dep_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"munge-node-lib"),new cljs.core.Var(function(){return cljs.analyzer.munge_node_lib;},new cljs.core.Symbol("cljs.analyzer","munge-node-lib","cljs.analyzer/munge-node-lib",-1684780841,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"munge-node-lib","munge-node-lib",1561236853,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",21,1,1099,1099,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null)], null)),null,(cljs.core.truth_(cljs.analyzer.munge_node_lib)?cljs.analyzer.munge_node_lib.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*load-macros*"),new cljs.core.Var(function(){return cljs.analyzer._STAR_load_macros_STAR_;},new cljs.core.Symbol("cljs.analyzer","*load-macros*","cljs.analyzer/*load-macros*",1030676819,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"*load-macros*","*load-macros*",-2013706763,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",29,1,true,66,66,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer._STAR_load_macros_STAR_)?cljs.analyzer._STAR_load_macros_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"add-types"),new cljs.core.Var(function(){return cljs.analyzer.add_types;},new cljs.core.Symbol("cljs.analyzer","add-types","cljs.analyzer/add-types",2043268523,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"add-types","add-types",928981525,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",16,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t1","t1",1665503971,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t1","t1",1665503971,null),new cljs.core.Symbol(null,"t2","t2",891676305,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t1","t1",1665503971,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t1","t1",1665503971,null),new cljs.core.Symbol(null,"t2","t2",891676305,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t1","t1",1665503971,null),new cljs.core.Symbol(null,"t2","t2",891676305,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"ts","ts",-1037225865,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null,null)], null),1,1018,1018,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t1","t1",1665503971,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t1","t1",1665503971,null),new cljs.core.Symbol(null,"t2","t2",891676305,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t1","t1",1665503971,null),new cljs.core.Symbol(null,"t2","t2",891676305,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"ts","ts",-1037225865,null)], null)),"Produces a union of types.",(cljs.core.truth_(cljs.analyzer.add_types)?cljs.analyzer.add_types.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"excluded?"),new cljs.core.Var(function(){return cljs.analyzer.excluded_QMARK_;},new cljs.core.Symbol("cljs.analyzer","excluded?","cljs.analyzer/excluded?",-1711042549,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"excluded?","excluded?",-745878539,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",16,1,3947,3947,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"sym","sym",195671222,null)], null)),null,((cljs.analyzer.excluded_QMARK_)?cljs.analyzer.excluded_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"empty-env"),new cljs.core.Var(function(){return cljs.analyzer.empty_env;},new cljs.core.Symbol("cljs.analyzer","empty-env","cljs.analyzer/empty-env",-1603426284,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"empty-env","empty-env",1793510582,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",16,1,715,715,cljs.core.list(cljs.core.PersistentVector.EMPTY),"Construct an empty analysis environment. Required to analyze forms.",(cljs.core.truth_(cljs.analyzer.empty_env)?cljs.analyzer.empty_env.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"public-name?"),new cljs.core.Var(function(){return cljs.analyzer.public_name_QMARK_;},new cljs.core.Symbol("cljs.analyzer","public-name?","cljs.analyzer/public-name?",1258688656,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"public-name?","public-name?",-1913604810,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",19,1,971,971,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null),new cljs.core.Symbol(null,"sym","sym",195671222,null)], null)),"Is sym public?",((cljs.analyzer.public_name_QMARK_)?cljs.analyzer.public_name_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"default-warning-handler"),new cljs.core.Var(function(){return cljs.analyzer.default_warning_handler;},new cljs.core.Symbol("cljs.analyzer","default-warning-handler","cljs.analyzer/default-warning-handler",-468399696,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"default-warning-handler","default-warning-handler",-1649711786,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",30,1,480,480,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"warning-type","warning-type",-943332174,null),new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"extra","extra",-1041866702,null)], null)),null,(cljs.core.truth_(cljs.analyzer.default_warning_handler)?cljs.analyzer.default_warning_handler.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"resolve-ns-alias"),new cljs.core.Var(function(){return cljs.analyzer.resolve_ns_alias;},new cljs.core.Symbol("cljs.analyzer","resolve-ns-alias","cljs.analyzer/resolve-ns-alias",-1564688844,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"resolve-ns-alias","resolve-ns-alias",-399041962,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",23,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"not-found","not-found",1011451547,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"not-found","not-found",1011451547,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,919,919,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"not-found","not-found",1011451547,null)], null)),null,(cljs.core.truth_(cljs.analyzer.resolve_ns_alias)?cljs.analyzer.resolve_ns_alias.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"intern-macros"),new cljs.core.Var(function(){return cljs.analyzer.intern_macros;},new cljs.core.Symbol("cljs.analyzer","intern-macros","cljs.analyzer/intern-macros",-2107564528,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"intern-macros","intern-macros",1241137846,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",20,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null),new cljs.core.Symbol(null,"reload","reload",-1790732962,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null),new cljs.core.Symbol(null,"reload","reload",-1790732962,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,604,604,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null),new cljs.core.Symbol(null,"reload","reload",-1790732962,null)], null)),"Given a Clojure namespace intern all macros into the ambient ClojureScript\n   analysis environment.",(cljs.core.truth_(cljs.analyzer.intern_macros)?cljs.analyzer.intern_macros.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"const-expr->constant-value"),new cljs.core.Var(function(){return cljs.analyzer.const_expr__GT_constant_value;},new cljs.core.Symbol("cljs.analyzer","const-expr->constant-value","cljs.analyzer/const-expr->constant-value",-1762972144,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"const-expr->constant-value","const-expr->constant-value",-597568842,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",33,1,1938,1938,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"op","op",-242456428,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"e","e",-1273166571,null)], null)], null)),null,(cljs.core.truth_(cljs.analyzer.const_expr__GT_constant_value)?cljs.analyzer.const_expr__GT_constant_value.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*macro-infer*"),new cljs.core.Var(function(){return cljs.analyzer._STAR_macro_infer_STAR_;},new cljs.core.Symbol("cljs.analyzer","*macro-infer*","cljs.analyzer/*macro-infer*",-2145058608,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"*macro-infer*","*macro-infer*",-644620426,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",29,1,true,68,68,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer._STAR_macro_infer_STAR_)?cljs.analyzer._STAR_macro_infer_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"gen-constant-id"),new cljs.core.Var(function(){return cljs.analyzer.gen_constant_id;},new cljs.core.Symbol("cljs.analyzer","gen-constant-id","cljs.analyzer/gen-constant-id",1013508948,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"gen-constant-id","gen-constant-id",-183087114,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",22,1,511,511,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"value","value",1946509744,null)], null)),null,(cljs.core.truth_(cljs.analyzer.gen_constant_id)?cljs.analyzer.gen_constant_id.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"lib&sublib"),new cljs.core.Var(function(){return cljs.analyzer.lib_AMPERSAND_sublib;},new cljs.core.Symbol("cljs.analyzer","lib&sublib","cljs.analyzer/lib&sublib",-207823595,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"lib&sublib","lib&sublib",-1390083657,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",17,1,826,826,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"lib","lib",1832340253,null)], null)),"If a library name has the form foo$bar, return a vector of the library and\n   the sublibrary property.",(cljs.core.truth_(cljs.analyzer.lib_AMPERSAND_sublib)?cljs.analyzer.lib_AMPERSAND_sublib.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"macro-autoload-ns?"),new cljs.core.Var(function(){return cljs.analyzer.macro_autoload_ns_QMARK_;},new cljs.core.Symbol("cljs.analyzer","macro-autoload-ns?","cljs.analyzer/macro-autoload-ns?",180850965,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"macro-autoload-ns?","macro-autoload-ns?",-1269221961,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",25,1,3066,3066,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null)], null)),"Given a spec form check whether the spec namespace requires a macro file\n   of the same name. If so return true.",((cljs.analyzer.macro_autoload_ns_QMARK_)?cljs.analyzer.macro_autoload_ns_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"get-tag"),new cljs.core.Var(function(){return cljs.analyzer.get_tag;},new cljs.core.Symbol("cljs.analyzer","get-tag","cljs.analyzer/get-tag",-268251787,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"get-tag","get-tag",-1183095145,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",14,1,1472,1472,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ast","ast",780197459,null)], null)),null,(cljs.core.truth_(cljs.analyzer.get_tag)?cljs.analyzer.get_tag.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"implicit-nses"),new cljs.core.Var(function(){return cljs.analyzer.implicit_nses;},new cljs.core.Symbol("cljs.analyzer","implicit-nses","cljs.analyzer/implicit-nses",-2023416271,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"implicit-nses","implicit-nses",-34454569,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",19,1,810,810,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer.implicit_nses)?cljs.analyzer.implicit_nses.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"valid-proto"),new cljs.core.Var(function(){return cljs.analyzer.valid_proto;},new cljs.core.Symbol("cljs.analyzer","valid-proto","cljs.analyzer/valid-proto",-1976724471,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"valid-proto","valid-proto",832883703,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",18,1,1914,1914,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(cljs.analyzer.valid_proto)?cljs.analyzer.valid_proto.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"normalize-js-tag"),new cljs.core.Var(function(){return cljs.analyzer.normalize_js_tag;},new cljs.core.Symbol("cljs.analyzer","normalize-js-tag","cljs.analyzer/normalize-js-tag",-725055663,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"normalize-js-tag","normalize-js-tag",-1682875401,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",23,1,987,987,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(cljs.analyzer.normalize_js_tag)?cljs.analyzer.normalize_js_tag.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-list"),new cljs.core.Var(function(){return cljs.analyzer.analyze_list;},new cljs.core.Symbol("cljs.analyzer","analyze-list","cljs.analyzer/analyze-list",1442114526,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-list","analyze-list",-361909128,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",19,1,4159,4159,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_list)?cljs.analyzer.analyze_list.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"warning"),new cljs.core.Var(function(){return cljs.analyzer.warning;},new cljs.core.Symbol("cljs.analyzer","warning","cljs.analyzer/warning",-1480184390,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"warning","warning",-45119144,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",14,1,755,755,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"warning-type","warning-type",-943332174,null),new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"extra","extra",-1041866702,null)], null)),null,(cljs.core.truth_(cljs.analyzer.warning)?cljs.analyzer.warning.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"implicit-import?"),new cljs.core.Var(function(){return cljs.analyzer.implicit_import_QMARK_;},new cljs.core.Symbol("cljs.analyzer","implicit-import?","cljs.analyzer/implicit-import?",1534677498,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"implicit-import?","implicit-import?",-2064632488,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",23,1,812,812,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"prefix","prefix",1374623062,null),new cljs.core.Symbol(null,"suffix","suffix",2007904584,null)], null)),null,((cljs.analyzer.implicit_import_QMARK_)?cljs.analyzer.implicit_import_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"missing-use-macros"),new cljs.core.Var(function(){return cljs.analyzer.missing_use_macros;},new cljs.core.Symbol("cljs.analyzer","missing-use-macros","cljs.analyzer/missing-use-macros",1249016326,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"missing-use-macros","missing-use-macros",-1812423176,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",25,1,2810,2810,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"use-macros","use-macros",734893134,null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null)),null,(cljs.core.truth_(cljs.analyzer.missing_use_macros)?cljs.analyzer.missing_use_macros.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze*"),new cljs.core.Var(function(){return cljs.analyzer.analyze_STAR_;},new cljs.core.Symbol("cljs.analyzer","analyze*","cljs.analyzer/analyze*",1737609214,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze*","analyze*",787098520,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",15,1,4376,4376,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_STAR_)?cljs.analyzer.analyze_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"-cljs-macros-loaded"),new cljs.core.Var(function(){return cljs.analyzer._cljs_macros_loaded;},new cljs.core.Symbol("cljs.analyzer","-cljs-macros-loaded","cljs.analyzer/-cljs-macros-loaded",1918493478,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"-cljs-macros-loaded","-cljs-macros-loaded",885213080,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",25,1,128,128,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer._cljs_macros_loaded)?cljs.analyzer._cljs_macros_loaded.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"check-uses"),new cljs.core.Var(function(){return cljs.analyzer.check_uses;},new cljs.core.Symbol("cljs.analyzer","check-uses","cljs.analyzer/check-uses",204145498,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"check-uses","check-uses",1201842104,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",17,1,2823,2823,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"uses","uses",1873196219,null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null)),null,(cljs.core.truth_(cljs.analyzer.check_uses)?cljs.analyzer.check_uses.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"find-matching-method"),new cljs.core.Var(function(){return cljs.analyzer.find_matching_method;},new cljs.core.Symbol("cljs.analyzer","find-matching-method","cljs.analyzer/find-matching-method",-1216577465,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"find-matching-method","find-matching-method",-18455495,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",27,1,1479,1479,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"fn-ast","fn-ast",1466659724,null),new cljs.core.Symbol(null,"params","params",-1943919534,null)], null)),null,(cljs.core.truth_(cljs.analyzer.find_matching_method)?cljs.analyzer.find_matching_method.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->t_cljs$analyzer40402"),new cljs.core.Var(function(){return cljs.analyzer.__GT_t_cljs$analyzer40402;},new cljs.core.Symbol("cljs.analyzer","->t_cljs$analyzer40402","cljs.analyzer/->t_cljs$analyzer40402",-1789256741,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IDeref","cljs.core/IDeref",1331648568,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"->t_cljs$analyzer40402","->t_cljs$analyzer40402",1289793657,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",true,6,new cljs.core.Keyword(null,"positional","positional",-203580463),571,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"meta40403","meta40403",201940141,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IDeref","cljs.core/IDeref",1331648568,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for cljs.analyzer/t_cljs$analyzer40402.",(cljs.core.truth_(cljs.analyzer.__GT_t_cljs$analyzer40402)?cljs.analyzer.__GT_t_cljs$analyzer40402.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*private-var-access-nowarn*"),new cljs.core.Var(function(){return cljs.analyzer._STAR_private_var_access_nowarn_STAR_;},new cljs.core.Symbol("cljs.analyzer","*private-var-access-nowarn*","cljs.analyzer/*private-var-access-nowarn*",-958154245,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"*private-var-access-nowarn*","*private-var-access-nowarn*",-1923556007,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",43,1,true,71,71,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer._STAR_private_var_access_nowarn_STAR_)?cljs.analyzer._STAR_private_var_access_nowarn_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"invoke-arg-type-validators"),new cljs.core.Var(function(){return cljs.analyzer.invoke_arg_type_validators;},new cljs.core.Symbol("cljs.analyzer","invoke-arg-type-validators","cljs.analyzer/invoke-arg-type-validators",-257984229,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"invoke-arg-type-validators","invoke-arg-type-validators",1040817529,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",32,1,4302,4302,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer.invoke_arg_type_validators)?cljs.analyzer.invoke_arg_type_validators.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*cljs-file*"),new cljs.core.Var(function(){return cljs.analyzer._STAR_cljs_file_STAR_;},new cljs.core.Symbol("cljs.analyzer","*cljs-file*","cljs.analyzer/*cljs-file*",-629413381,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"*cljs-file*","*cljs-file*",-1870658151,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",27,1,true,56,56,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer._STAR_cljs_file_STAR_)?cljs.analyzer._STAR_cljs_file_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*file-defs*"),new cljs.core.Var(function(){return cljs.analyzer._STAR_file_defs_STAR_;},new cljs.core.Symbol("cljs.analyzer","*file-defs*","cljs.analyzer/*file-defs*",363161051,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"*file-defs*","*file-defs*",1278008889,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",27,1,true,70,70,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer._STAR_file_defs_STAR_)?cljs.analyzer._STAR_file_defs_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"infer-if"),new cljs.core.Var(function(){return cljs.analyzer.infer_if;},new cljs.core.Symbol("cljs.analyzer","infer-if","cljs.analyzer/infer-if",-800960577,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"infer-if","infer-if",197714777,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",15,1,1513,1513,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"ast","ast",780197459,null)], null)),null,(cljs.core.truth_(cljs.analyzer.infer_if)?cljs.analyzer.infer_if.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"topo-sort"),new cljs.core.Var(function(){return cljs.analyzer.topo_sort;},new cljs.core.Symbol("cljs.analyzer","topo-sort","cljs.analyzer/topo-sort",-1745603705,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"topo-sort","topo-sort",1484953465,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",19,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),4,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),4,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"get-deps","get-deps",1533130989,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"depth","depth",-885772129,null),new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"memo-get-deps","memo-get-deps",-52769128,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"get-deps","get-deps",1533130989,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"depth","depth",-885772129,null),new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"memo-get-deps","memo-get-deps",-52769128,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),4,242,242,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"get-deps","get-deps",1533130989,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"depth","depth",-885772129,null),new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"memo-get-deps","memo-get-deps",-52769128,null)], null)),null,(cljs.core.truth_(cljs.analyzer.topo_sort)?cljs.analyzer.topo_sort.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*verbose*"),new cljs.core.Var(function(){return cljs.analyzer._STAR_verbose_STAR_;},new cljs.core.Symbol("cljs.analyzer","*verbose*","cljs.analyzer/*verbose*",-1205425541,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"*verbose*","*verbose*",-223410215,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",25,1,true,126,126,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer._STAR_verbose_STAR_)?cljs.analyzer._STAR_verbose_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-js-value"),new cljs.core.Var(function(){return cljs.analyzer.analyze_js_value;},new cljs.core.Symbol("cljs.analyzer","analyze-js-value","cljs.analyzer/analyze-js-value",2140805991,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-js-value","analyze-js-value",957595609,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",23,1,4177,4177,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),cljs.core.with_meta(new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"JSValue","JSValue",831505843,null)], null))], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_js_value)?cljs.analyzer.analyze_js_value.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ns->module-type"),new cljs.core.Var(function(){return cljs.analyzer.ns__GT_module_type;},new cljs.core.Symbol("cljs.analyzer","ns->module-type","cljs.analyzer/ns->module-type",1231553720,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"ns->module-type","ns->module-type",66312218,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",22,1,1128,1128,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null)),null,(cljs.core.truth_(cljs.analyzer.ns__GT_module_type)?cljs.analyzer.ns__GT_module_type.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"source-info"),new cljs.core.Var(function(){return cljs.analyzer.source_info;},new cljs.core.Symbol("cljs.analyzer","source-info","cljs.analyzer/source-info",-953937508,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"source-info","source-info",-1649755078,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,735,735,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null)),null,(cljs.core.truth_(cljs.analyzer.source_info)?cljs.analyzer.source_info.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"js-prim-ctor->tag"),new cljs.core.Var(function(){return cljs.analyzer.js_prim_ctor__GT_tag;},new cljs.core.Symbol("cljs.analyzer","js-prim-ctor->tag","cljs.analyzer/js-prim-ctor->tag",-1585757000,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"js-prim-ctor->tag","js-prim-ctor->tag",1577183322,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",23,1,2590,2590,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer.js_prim_ctor__GT_tag)?cljs.analyzer.js_prim_ctor__GT_tag.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-fn-method-param"),new cljs.core.Var(function(){return cljs.analyzer.analyze_fn_method_param;},new cljs.core.Symbol("cljs.analyzer","analyze-fn-method-param","cljs.analyzer/analyze-fn-method-param",1094599032,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-fn-method-param","analyze-fn-method-param",-1683512102,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",30,1,2148,2148,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_fn_method_param)?cljs.analyzer.analyze_fn_method_param.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-set"),new cljs.core.Var(function(){return cljs.analyzer.analyze_set;},new cljs.core.Symbol("cljs.analyzer","analyze-set","cljs.analyzer/analyze-set",851031320,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-set","analyze-set",2014269818,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",18,1,4171,4171,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_set)?cljs.analyzer.analyze_set.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"numeric-type?"),new cljs.core.Var(function(){return cljs.analyzer.numeric_type_QMARK_;},new cljs.core.Symbol("cljs.analyzer","numeric-type?","cljs.analyzer/numeric-type?",-1598869800,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"numeric-type?","numeric-type?",2066018682,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",20,1,3640,3640,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t","t",242699008,null)], null)),null,((cljs.analyzer.numeric_type_QMARK_)?cljs.analyzer.numeric_type_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"munge-path"),new cljs.core.Var(function(){return cljs.analyzer.munge_path;},new cljs.core.Symbol("cljs.analyzer","munge-path","cljs.analyzer/munge-path",88727608,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"munge-path","munge-path",1287669146,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",20,4,230,230,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ss","ss",177481949,null)], null)),null,(cljs.core.truth_(cljs.analyzer.munge_path)?cljs.analyzer.munge_path.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ast?"),new cljs.core.Var(function(){return cljs.analyzer.ast_QMARK_;},new cljs.core.Symbol("cljs.analyzer","ast?","cljs.analyzer/ast?",288913700,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"ast?","ast?",1470223770,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",11,1,257,257,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,((cljs.analyzer.ast_QMARK_)?cljs.analyzer.ast_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"checked-arrays"),new cljs.core.Var(function(){return cljs.analyzer.checked_arrays;},new cljs.core.Symbol("cljs.analyzer","checked-arrays","cljs.analyzer/checked-arrays",519564868,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"checked-arrays","checked-arrays",1501377082,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",21,1,180,180,cljs.core.list(cljs.core.PersistentVector.EMPTY),"Returns false-y, :warn, or :error based on configuration and the\n   current value of *unchecked-arrays*.",(cljs.core.truth_(cljs.analyzer.checked_arrays)?cljs.analyzer.checked_arrays.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"elide-env"),new cljs.core.Var(function(){return cljs.analyzer.elide_env;},new cljs.core.Symbol("cljs.analyzer","elide-env","cljs.analyzer/elide-env",-1226598664,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"elide-env","elide-env",-865455462,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",16,1,1917,1917,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"ast","ast",780197459,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),null,(cljs.core.truth_(cljs.analyzer.elide_env)?cljs.analyzer.elide_env.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"js-module-exists?*"),new cljs.core.Var(function(){return cljs.analyzer.js_module_exists_QMARK__STAR_;},new cljs.core.Symbol("cljs.analyzer","js-module-exists?*","cljs.analyzer/js-module-exists?*",1590851580,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"js-module-exists?*","js-module-exists?*",559532954,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",24,1,855,855,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer.js_module_exists_QMARK__STAR_)?cljs.analyzer.js_module_exists_QMARK__STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"parse-require-spec"),new cljs.core.Var(function(){return cljs.analyzer.parse_require_spec;},new cljs.core.Symbol("cljs.analyzer","parse-require-spec","cljs.analyzer/parse-require-spec",1494771613,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"parse-require-spec","parse-require-spec",327235643,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",25,1,2988,2988,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"macros?","macros?",-137961925,null),new cljs.core.Symbol(null,"deps","deps",-771075450,null),new cljs.core.Symbol(null,"aliases","aliases",-1307561055,null),new cljs.core.Symbol(null,"spec","spec",1988051928,null)], null)),null,(cljs.core.truth_(cljs.analyzer.parse_require_spec)?cljs.analyzer.parse_require_spec.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-wrap-meta"),new cljs.core.Var(function(){return cljs.analyzer.analyze_wrap_meta;},new cljs.core.Symbol("cljs.analyzer","analyze-wrap-meta","cljs.analyzer/analyze-wrap-meta",-1703512775,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-wrap-meta","analyze-wrap-meta",1560221851,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",24,1,4230,4230,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_wrap_meta)?cljs.analyzer.analyze_wrap_meta.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"get-js-tag"),new cljs.core.Var(function(){return cljs.analyzer.get_js_tag;},new cljs.core.Symbol("cljs.analyzer","get-js-tag","cljs.analyzer/get-js-tag",1172802393,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"get-js-tag","get-js-tag",459204539,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",17,1,3609,3609,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null)], null)),null,(cljs.core.truth_(cljs.analyzer.get_js_tag)?cljs.analyzer.get_js_tag.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"parse"),new cljs.core.Var(function(){return cljs.analyzer.parse;},new cljs.core.Symbol("cljs.analyzer","parse","cljs.analyzer/parse",-720621478,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"parse","parse",478366908,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",16,1,1603,1603,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer.parse)?cljs.analyzer.parse.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"js-var-fn?"),new cljs.core.Var(function(){return cljs.analyzer.js_var_fn_QMARK_;},new cljs.core.Symbol("cljs.analyzer","js-var-fn?","cljs.analyzer/js-var-fn?",-2004539278,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"js-var-fn?","js-var-fn?",906988956,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",17,1,1548,1548,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"fn-ast","fn-ast",1466659724,null)], null)),null,(cljs.core.truth_(cljs.analyzer.js_var_fn_QMARK_)?cljs.analyzer.js_var_fn_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*analyze-deps*"),new cljs.core.Var(function(){return cljs.analyzer._STAR_analyze_deps_STAR_;},new cljs.core.Symbol("cljs.analyzer","*analyze-deps*","cljs.analyzer/*analyze-deps*",-1349752802,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"*analyze-deps*","*analyze-deps*",1610991100,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",30,1,true,64,64,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer._STAR_analyze_deps_STAR_)?cljs.analyzer._STAR_analyze_deps_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-let-bindings*"),new cljs.core.Var(function(){return cljs.analyzer.analyze_let_bindings_STAR_;},new cljs.core.Symbol("cljs.analyzer","analyze-let-bindings*","cljs.analyzer/analyze-let-bindings*",-1524008558,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-let-bindings*","analyze-let-bindings*",1872990780,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",28,1,2419,2419,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"encl-env","encl-env",-552935929,null),new cljs.core.Symbol(null,"bindings","bindings",-1383038577,null),new cljs.core.Symbol(null,"op","op",-242456428,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_let_bindings_STAR_)?cljs.analyzer.analyze_let_bindings_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"resolve-import"),new cljs.core.Var(function(){return cljs.analyzer.resolve_import;},new cljs.core.Symbol("cljs.analyzer","resolve-import","cljs.analyzer/resolve-import",779434354,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"resolve-import","resolve-import",-370519396,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",21,1,1241,1241,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"import","import",241030818,null)], null)),"goog.modules are deterministically assigned to a property of the namespace,\n   we cannot expect the reference will be globally available, so we resolve to\n   namespace local reference.",(cljs.core.truth_(cljs.analyzer.resolve_import)?cljs.analyzer.resolve_import.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analysis-error?"),new cljs.core.Var(function(){return cljs.analyzer.analysis_error_QMARK_;},new cljs.core.Symbol("cljs.analyzer","analysis-error?","cljs.analyzer/analysis-error?",-1824961346,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analysis-error?","analysis-error?",-632909028,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",22,1,789,789,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ex","ex",226760186,null)], null)),null,((cljs.analyzer.analysis_error_QMARK_)?cljs.analyzer.analysis_error_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"replace-env-pass"),new cljs.core.Var(function(){return cljs.analyzer.replace_env_pass;},new cljs.core.Symbol("cljs.analyzer","replace-env-pass","cljs.analyzer/replace-env-pass",-360736578,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"replace-env-pass","replace-env-pass",549797660,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",23,1,1920,1920,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"new-env","new-env",-1486390331,null)], null)),null,(cljs.core.truth_(cljs.analyzer.replace_env_pass)?cljs.analyzer.replace_env_pass.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"parse-ns-excludes"),new cljs.core.Var(function(){return cljs.analyzer.parse_ns_excludes;},new cljs.core.Symbol("cljs.analyzer","parse-ns-excludes","cljs.analyzer/parse-ns-excludes",150576191,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"parse-ns-excludes","parse-ns-excludes",1130510493,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",24,1,2914,2914,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),null,(cljs.core.truth_(cljs.analyzer.parse_ns_excludes)?cljs.analyzer.parse_ns_excludes.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-fn-methods-pass2"),new cljs.core.Var(function(){return cljs.analyzer.analyze_fn_methods_pass2;},new cljs.core.Symbol("cljs.analyzer","analyze-fn-methods-pass2","cljs.analyzer/analyze-fn-methods-pass2",978976895,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-fn-methods-pass2","analyze-fn-methods-pass2",-2116752163,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",31,1,2239,2239,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"menv","menv",-98338501,null),new cljs.core.Symbol(null,"locals","locals",-2119139986,null),new cljs.core.Symbol(null,"type","type",-1480165421,null),new cljs.core.Symbol(null,"meths","meths",1226876764,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_fn_methods_pass2)?cljs.analyzer.analyze_fn_methods_pass2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"core-name?"),new cljs.core.Var(function(){return cljs.analyzer.core_name_QMARK_;},new cljs.core.Symbol("cljs.analyzer","core-name?","cljs.analyzer/core-name?",-1422981037,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"core-name?","core-name?",-794694403,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",17,1,948,948,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"sym","sym",195671222,null)], null)),"Is sym visible from core in the current compilation namespace?",((cljs.analyzer.core_name_QMARK_)?cljs.analyzer.core_name_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"get-let-tag"),new cljs.core.Var(function(){return cljs.analyzer.get_let_tag;},new cljs.core.Symbol("cljs.analyzer","get-let-tag","cljs.analyzer/get-let-tag",1100043923,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"get-let-tag","get-let-tag",135967037,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",18,1,2412,2412,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"init-expr","init-expr",1503809301,null)], null)),null,(cljs.core.truth_(cljs.analyzer.get_let_tag)?cljs.analyzer.get_let_tag.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"specials"),new cljs.core.Var(function(){return cljs.analyzer.specials;},new cljs.core.Symbol("cljs.analyzer","specials","cljs.analyzer/specials",-1672407745,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"specials","specials",601606557,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",14,1,1446,1446,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer.specials)?cljs.analyzer.specials.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"elide-irrelevant-meta"),new cljs.core.Var(function(){return cljs.analyzer.elide_irrelevant_meta;},new cljs.core.Symbol("cljs.analyzer","elide-irrelevant-meta","cljs.analyzer/elide-irrelevant-meta",-815234977,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"elide-irrelevant-meta","elide-irrelevant-meta",-2047793731,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",28,1,4227,4227,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),null,(cljs.core.truth_(cljs.analyzer.elide_irrelevant_meta)?cljs.analyzer.elide_irrelevant_meta.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"resolve-macro-ns-alias"),new cljs.core.Var(function(){return cljs.analyzer.resolve_macro_ns_alias;},new cljs.core.Symbol("cljs.analyzer","resolve-macro-ns-alias","cljs.analyzer/resolve-macro-ns-alias",-1210506829,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"resolve-macro-ns-alias","resolve-macro-ns-alias",-45036067,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",29,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"not-found","not-found",1011451547,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"not-found","not-found",1011451547,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,926,926,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"not-found","not-found",1011451547,null)], null)),null,(cljs.core.truth_(cljs.analyzer.resolve_macro_ns_alias)?cljs.analyzer.resolve_macro_ns_alias.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"check-invoke-arg-types"),new cljs.core.Var(function(){return cljs.analyzer.check_invoke_arg_types;},new cljs.core.Symbol("cljs.analyzer","check-invoke-arg-types","cljs.analyzer/check-invoke-arg-types",585868863,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"check-invoke-arg-types","check-invoke-arg-types",1685848733,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",29,1,4314,4314,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"op","op",-242456428,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"ast","ast",780197459,null)], null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),null,(cljs.core.truth_(cljs.analyzer.check_invoke_arg_types)?cljs.analyzer.check_invoke_arg_types.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"confirm-ns"),new cljs.core.Var(function(){return cljs.analyzer.confirm_ns;},new cljs.core.Symbol("cljs.analyzer","confirm-ns","cljs.analyzer/confirm-ns",-1924222181,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"confirm-ns","confirm-ns",-1027336323,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",17,1,933,933,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"ns-sym","ns-sym",-55570078,null)], null)),"Given env, an analysis environment, and ns-sym, a symbol identifying a\n   namespace, confirm that the namespace exists. Warn if not found.",(cljs.core.truth_(cljs.analyzer.confirm_ns)?cljs.analyzer.confirm_ns.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"default-namespaces"),new cljs.core.Var(function(){return cljs.analyzer.default_namespaces;},new cljs.core.Symbol("cljs.analyzer","default-namespaces","cljs.analyzer/default-namespaces",1610326044,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"default-namespaces","default-namespaces",-462287746,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",24,1,551,551,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer.default_namespaces)?cljs.analyzer.default_namespaces.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"canonicalize-specs"),new cljs.core.Var(function(){return cljs.analyzer.canonicalize_specs;},new cljs.core.Symbol("cljs.analyzer","canonicalize-specs","cljs.analyzer/canonicalize-specs",2095363324,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"canonicalize-specs","canonicalize-specs",622664030,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",25,1,3122,3122,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"specs","specs",-1227865028,null)], null)),null,(cljs.core.truth_(cljs.analyzer.canonicalize_specs)?cljs.analyzer.canonicalize_specs.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"confirm-var-exists-throw"),new cljs.core.Var(function(){return cljs.analyzer.confirm_var_exists_throw;},new cljs.core.Symbol("cljs.analyzer","confirm-var-exists-throw","cljs.analyzer/confirm-var-exists-throw",2071466680,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"confirm-var-exists-throw","confirm-var-exists-throw",820098590,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",31,1,913,913,cljs.core.list(cljs.core.PersistentVector.EMPTY),null,(cljs.core.truth_(cljs.analyzer.confirm_var_exists_throw)?cljs.analyzer.confirm_var_exists_throw.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"js-module-exists?"),new cljs.core.Var(function(){return cljs.analyzer.js_module_exists_QMARK_;},new cljs.core.Symbol("cljs.analyzer","js-module-exists?","cljs.analyzer/js-module-exists?",-47481320,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"js-module-exists?","js-module-exists?",1000526462,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",24,1,857,857,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"module","module",-1229817578,null)], null)),null,(cljs.core.truth_(cljs.analyzer.js_module_exists_QMARK_)?cljs.analyzer.js_module_exists_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-form"),new cljs.core.Var(function(){return cljs.analyzer.analyze_form;},new cljs.core.Symbol("cljs.analyzer","analyze-form","cljs.analyzer/analyze-form",420394556,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"analyze-form","analyze-form",1351903902,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",22,4,4351,4351,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),null,(cljs.core.truth_(cljs.analyzer.analyze_form)?cljs.analyzer.analyze_form.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"var-ast"),new cljs.core.Var(function(){return cljs.analyzer.var_ast;},new cljs.core.Symbol("cljs.analyzer","var-ast","cljs.analyzer/var-ast",1624061848,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"var-ast","var-ast",-1454056450,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",14,1,1630,1630,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"sym","sym",195671222,null)], null)),null,(cljs.core.truth_(cljs.analyzer.var_ast)?cljs.analyzer.var_ast.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"add-consts"),new cljs.core.Var(function(){return cljs.analyzer.add_consts;},new cljs.core.Symbol("cljs.analyzer","add-consts","cljs.analyzer/add-consts",1584867485,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"add-consts","add-consts",-1711504257,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",17,1,4406,4406,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"compiler-state","compiler-state",-2022533001,null),new cljs.core.Symbol(null,"constants-map","constants-map",511431609,null)], null)),"Given a compiler state and a map from fully qualified symbols to constant\n  EDN values, update the compiler state marking these vars as const to support\n  direct substitution of these vars in source.",(cljs.core.truth_(cljs.analyzer.add_consts)?cljs.analyzer.add_consts.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"error"),new cljs.core.Var(function(){return cljs.analyzer.error;},new cljs.core.Symbol("cljs.analyzer","error","cljs.analyzer/error",1575241885,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"error","error",661562495,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",12,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"msg","msg",254428083,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"msg","msg",254428083,null),new cljs.core.Symbol(null,"cause","cause",1872432779,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"msg","msg",254428083,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"msg","msg",254428083,null),new cljs.core.Symbol(null,"cause","cause",1872432779,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,781,781,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"msg","msg",254428083,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"msg","msg",254428083,null),new cljs.core.Symbol(null,"cause","cause",1872432779,null)], null)),null,(cljs.core.truth_(cljs.analyzer.error)?cljs.analyzer.error.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"invokeable-ns?"),new cljs.core.Var(function(){return cljs.analyzer.invokeable_ns_QMARK_;},new cljs.core.Symbol("cljs.analyzer","invokeable-ns?","cljs.analyzer/invokeable-ns?",364299325,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"invokeable-ns?","invokeable-ns?",-1356748641,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",21,1,1213,1213,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null)),"Returns true if ns is a required namespace and a JavaScript module that\n   might be invokeable as a function.",(cljs.core.truth_(cljs.analyzer.invokeable_ns_QMARK_)?cljs.analyzer.invokeable_ns_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*cljs-ns*"),new cljs.core.Var(function(){return cljs.analyzer._STAR_cljs_ns_STAR_;},new cljs.core.Symbol("cljs.analyzer","*cljs-ns*","cljs.analyzer/*cljs-ns*",1242529789,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer","cljs.analyzer",1897881911,null),new cljs.core.Symbol(null,"*cljs-ns*","*cljs-ns*",-2088658337,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer.cljc",25,1,true,55,55,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.analyzer._STAR_cljs_ns_STAR_)?cljs.analyzer._STAR_cljs_ns_STAR_.cljs$lang$test:null)]))], null)], true))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"cljs.analyzer.api","cljs.analyzer.api",1016020812,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 24, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"with-state"),new cljs.core.Var(function(){return cljs.analyzer.api.with_state;},new cljs.core.Symbol("cljs.analyzer.api","with-state","cljs.analyzer.api/with-state",-1025246638,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"macro","macro",-867863404),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer.api","cljs.analyzer.api",1016020812,null),new cljs.core.Symbol(null,"with-state","with-state",-670637024,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer/api.cljc",21,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),cljs.core.list(cljs.core.list(new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"body","body",-408674142,null))),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"body","body",-408674142,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,51,true,51,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"body","body",-408674142,null)], null)),"Run the body with the given compilation state Atom<Map>.",(cljs.core.truth_(cljs.analyzer.api.with_state)?cljs.analyzer.api.with_state.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"find-ns"),new cljs.core.Var(function(){return cljs.analyzer.api.find_ns;},new cljs.core.Symbol("cljs.analyzer.api","find-ns","cljs.analyzer.api/find-ns",-794316622,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer.api","cljs.analyzer.api",1016020812,null),new cljs.core.Symbol(null,"find-ns","find-ns",-884829568,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer/api.cljc",14,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"sym","sym",195671222,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"sym","sym",195671222,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,221,221,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"sym","sym",195671222,null)], null)),"Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns.",(cljs.core.truth_(cljs.analyzer.api.find_ns)?cljs.analyzer.api.find_ns.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"remove-ns"),new cljs.core.Var(function(){return cljs.analyzer.api.remove_ns;},new cljs.core.Symbol("cljs.analyzer.api","remove-ns","cljs.analyzer.api/remove-ns",-1484953611,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer.api","cljs.analyzer.api",1016020812,null),new cljs.core.Symbol(null,"remove-ns","remove-ns",-1915058781,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer/api.cljc",16,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,263,263,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null)),"Removes the namespace named by the symbol.",(cljs.core.truth_(cljs.analyzer.api.remove_ns)?cljs.analyzer.api.remove_ns.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ns-publics"),new cljs.core.Var(function(){return cljs.analyzer.api.ns_publics;},new cljs.core.Symbol("cljs.analyzer.api","ns-publics","cljs.analyzer.api/ns-publics",792950390,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer.api","cljs.analyzer.api",1016020812,null),new cljs.core.Symbol(null,"ns-publics","ns-publics",903350436,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer/api.cljc",17,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,241,241,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null)),"Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars.",(cljs.core.truth_(cljs.analyzer.api.ns_publics)?cljs.analyzer.api.ns_publics.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"get-options"),new cljs.core.Var(function(){return cljs.analyzer.api.get_options;},new cljs.core.Symbol("cljs.analyzer.api","get-options","cljs.analyzer.api/get-options",1267718390,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer.api","cljs.analyzer.api",1016020812,null),new cljs.core.Symbol(null,"get-options","get-options",652557604,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer/api.cljc",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),1,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),1,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,102,102,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null)], null)),"Return the compiler options from compiler state.",(cljs.core.truth_(cljs.analyzer.api.get_options)?cljs.analyzer.api.get_options.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"in-cljs-user"),new cljs.core.Var(function(){return cljs.analyzer.api.in_cljs_user;},new cljs.core.Symbol("cljs.analyzer.api","in-cljs-user","cljs.analyzer.api/in-cljs-user",-754905481,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"macro","macro",-867863404),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer.api","cljs.analyzer.api",1016020812,null),new cljs.core.Symbol(null,"in-cljs-user","in-cljs-user",904915845,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer/api.cljc",23,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),cljs.core.list(cljs.core.list(new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"body","body",-408674142,null))),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"body","body",-408674142,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,271,true,271,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"body","body",-408674142,null)], null)),"Binds cljs.analyzer/*cljs-ns* to 'cljs.user and uses the given compilation\n  environment atom and runs body.",(cljs.core.truth_(cljs.analyzer.api.in_cljs_user)?cljs.analyzer.api.in_cljs_user.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"warning-message"),new cljs.core.Var(function(){return cljs.analyzer.api.warning_message;},new cljs.core.Symbol("cljs.analyzer.api","warning-message","cljs.analyzer.api/warning-message",-1626092108,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer.api","cljs.analyzer.api",1016020812,null),new cljs.core.Symbol(null,"warning-message","warning-message",-1312935994,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer/api.cljc",22,1,91,91,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"warn-type","warn-type",850426308,null),new cljs.core.Symbol(null,"warn-info","warn-info",406914882,null)], null)),"Helper for generating the standard analyzer messages for warnings. Should be\n  passed warn-type and warn-info. See with-warning-handlers.",(cljs.core.truth_(cljs.analyzer.api.warning_message)?cljs.analyzer.api.warning_message.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"with-warning-handlers"),new cljs.core.Var(function(){return cljs.analyzer.api.with_warning_handlers;},new cljs.core.Symbol("cljs.analyzer.api","with-warning-handlers","cljs.analyzer.api/with-warning-handlers",1488426256,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"macro","macro",-867863404),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer.api","cljs.analyzer.api",1016020812,null),new cljs.core.Symbol(null,"with-warning-handlers","with-warning-handlers",839956454,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer/api.cljc",32,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),cljs.core.list(cljs.core.list(new cljs.core.Symbol(null,"handlers","handlers",1720060308,null),new cljs.core.Symbol(null,"body","body",-408674142,null))),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"handlers","handlers",1720060308,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"body","body",-408674142,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,81,true,81,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"handlers","handlers",1720060308,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"body","body",-408674142,null)], null)),"Helper macro for custom handling of emitted warnings. Handlers should be\n   a vector of functions. The signature of these functions is\n   [warn-type env warn-info]. warn-type is a keyword describing the warning,\n   env is the analysis environment, and warn-info is a map of extra useful\n   information for a particular warning type.",(cljs.core.truth_(cljs.analyzer.api.with_warning_handlers)?cljs.analyzer.api.with_warning_handlers.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"warning-enabled?"),new cljs.core.Var(function(){return cljs.analyzer.api.warning_enabled_QMARK_;},new cljs.core.Symbol("cljs.analyzer.api","warning-enabled?","cljs.analyzer.api/warning-enabled?",499636922,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer.api","cljs.analyzer.api",1016020812,null),new cljs.core.Symbol(null,"warning-enabled?","warning-enabled?",-412949272,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer/api.cljc",23,1,69,69,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"warning-type","warning-type",-943332174,null)], null)),"Test if the given warning-type is enabled.",(cljs.core.truth_(cljs.analyzer.api.warning_enabled_QMARK_)?cljs.analyzer.api.warning_enabled_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"current-state"),new cljs.core.Var(function(){return cljs.analyzer.api.current_state;},new cljs.core.Symbol("cljs.analyzer.api","current-state","cljs.analyzer.api/current-state",-1146916427,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer.api","cljs.analyzer.api",1016020812,null),new cljs.core.Symbol(null,"current-state","current-state",-1606151317,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer/api.cljc",20,1,36,36,cljs.core.list(cljs.core.PersistentVector.EMPTY),"Return the current compiler state atom.",(cljs.core.truth_(cljs.analyzer.api.current_state)?cljs.analyzer.api.current_state.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ns-resolve"),new cljs.core.Var(function(){return cljs.analyzer.api.ns_resolve;},new cljs.core.Symbol("cljs.analyzer.api","ns-resolve","cljs.analyzer.api/ns-resolve",209200350,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer.api","cljs.analyzer.api",1016020812,null),new cljs.core.Symbol(null,"ns-resolve","ns-resolve",1788675756,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer/api.cljc",17,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null),new cljs.core.Symbol(null,"sym","sym",195671222,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"ns","ns",2082130287,null),new cljs.core.Symbol(null,"sym","sym",195671222,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null),new cljs.core.Symbol(null,"sym","sym",195671222,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"ns","ns",2082130287,null),new cljs.core.Symbol(null,"sym","sym",195671222,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,254,254,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null),new cljs.core.Symbol(null,"sym","sym",195671222,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"ns","ns",2082130287,null),new cljs.core.Symbol(null,"sym","sym",195671222,null)], null)),"Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var.",(cljs.core.truth_(cljs.analyzer.api.ns_resolve)?cljs.analyzer.api.ns_resolve.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"enabled-warnings"),new cljs.core.Var(function(){return cljs.analyzer.api.enabled_warnings;},new cljs.core.Symbol("cljs.analyzer.api","enabled-warnings","cljs.analyzer.api/enabled-warnings",-774372612,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer.api","cljs.analyzer.api",1016020812,null),new cljs.core.Symbol(null,"enabled-warnings","enabled-warnings",-92330802,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer/api.cljc",23,1,97,97,cljs.core.list(cljs.core.PersistentVector.EMPTY),"Get the enabled warning types.",(cljs.core.truth_(cljs.analyzer.api.enabled_warnings)?cljs.analyzer.api.enabled_warnings.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"empty-state"),new cljs.core.Var(function(){return cljs.analyzer.api.empty_state;},new cljs.core.Symbol("cljs.analyzer.api","empty-state","cljs.analyzer.api/empty-state",1387822432,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer.api","cljs.analyzer.api",1016020812,null),new cljs.core.Symbol(null,"empty-state","empty-state",1008034606,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer/api.cljc",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),1,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),1,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,25,25,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),"Creates an empty compilation state Atom<Map>. The optional opts arg is a map\n   representing the compiler configuration. See the documentation\n   for details: https://clojurescript.org/reference/compiler-options",(cljs.core.truth_(cljs.analyzer.api.empty_state)?cljs.analyzer.api.empty_state.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"default-passes"),new cljs.core.Var(function(){return cljs.analyzer.api.default_passes;},new cljs.core.Symbol("cljs.analyzer.api","default-passes","cljs.analyzer.api/default-passes",1126359937,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer.api","cljs.analyzer.api",1016020812,null),new cljs.core.Symbol(null,"default-passes","default-passes",-1176648269,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer/api.cljc",17,1,115,117,cljs.core.List.EMPTY,"ClojureScript's default analysis passes.",(cljs.core.truth_(cljs.analyzer.api.default_passes)?cljs.analyzer.api.default_passes.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"no-warn"),new cljs.core.Var(function(){return cljs.analyzer.api.no_warn;},new cljs.core.Symbol("cljs.analyzer.api","no-warn","cljs.analyzer.api/no-warn",302265735,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"macro","macro",-867863404),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer.api","cljs.analyzer.api",1016020812,null),new cljs.core.Symbol(null,"no-warn","no-warn",952060021,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer/api.cljc",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),cljs.core.list(cljs.core.list(new cljs.core.Symbol(null,"body","body",-408674142,null))),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"body","body",-408674142,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,62,true,62,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"body","body",-408674142,null)], null)),"Disable analyzer warnings for any analysis executed in body.",(cljs.core.truth_(cljs.analyzer.api.no_warn)?cljs.analyzer.api.no_warn.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"empty-env"),new cljs.core.Var(function(){return cljs.analyzer.api.empty_env;},new cljs.core.Symbol("cljs.analyzer.api","empty-env","cljs.analyzer.api/empty-env",1094838888,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer.api","cljs.analyzer.api",1016020812,null),new cljs.core.Symbol(null,"empty-env","empty-env",1793510582,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer/api.cljc",16,1,57,57,cljs.core.list(cljs.core.PersistentVector.EMPTY),"Creates an empty analysis environment.",(cljs.core.truth_(cljs.analyzer.api.empty_env)?cljs.analyzer.api.empty_env.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"default-warning-handler"),new cljs.core.Var(function(){return cljs.analyzer.api.default_warning_handler;},new cljs.core.Symbol("cljs.analyzer.api","default-warning-handler","cljs.analyzer.api/default-warning-handler",-2026862748,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer.api","cljs.analyzer.api",1016020812,null),new cljs.core.Symbol(null,"default-warning-handler","default-warning-handler",-1649711786,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer/api.cljc",30,1,74,74,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"warning-type","warning-type",-943332174,null),new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"extra","extra",-1041866702,null)], null)),"The default warning handler.\n\n   Outputs the warning messages to *err*.",(cljs.core.truth_(cljs.analyzer.api.default_warning_handler)?cljs.analyzer.api.default_warning_handler.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"with-passes"),new cljs.core.Var(function(){return cljs.analyzer.api.with_passes;},new cljs.core.Symbol("cljs.analyzer.api","with-passes","cljs.analyzer.api/with-passes",279894112,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"macro","macro",-867863404),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer.api","cljs.analyzer.api",1016020812,null),new cljs.core.Symbol(null,"with-passes","with-passes",1024834230,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer/api.cljc",22,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),cljs.core.list(cljs.core.list(new cljs.core.Symbol(null,"passes","passes",-501330314,null),new cljs.core.Symbol(null,"body","body",-408674142,null))),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"passes","passes",-501330314,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"body","body",-408674142,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,119,true,119,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"passes","passes",-501330314,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"body","body",-408674142,null)], null)),"Evaluate the body with the provided sequence of compiler passes.",(cljs.core.truth_(cljs.analyzer.api.with_passes)?cljs.analyzer.api.with_passes.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ns-interns"),new cljs.core.Var(function(){return cljs.analyzer.api.ns_interns;},new cljs.core.Symbol("cljs.analyzer.api","ns-interns","cljs.analyzer.api/ns-interns",848393034,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer.api","cljs.analyzer.api",1016020812,null),new cljs.core.Symbol(null,"ns-interns","ns-interns",535532824,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer/api.cljc",17,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,230,230,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null)),"Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars.",(cljs.core.truth_(cljs.analyzer.api.ns_interns)?cljs.analyzer.api.ns_interns.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"all-ns"),new cljs.core.Var(function(){return cljs.analyzer.api.all_ns;},new cljs.core.Symbol("cljs.analyzer.api","all-ns","cljs.analyzer.api/all-ns",-1193821270,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer.api","cljs.analyzer.api",1016020812,null),new cljs.core.Symbol(null,"all-ns","all-ns",1571857784,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer/api.cljc",13,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),1,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),1,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,213,213,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null)], null)),"Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances.",(cljs.core.truth_(cljs.analyzer.api.all_ns)?cljs.analyzer.api.all_ns.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"current-file"),new cljs.core.Var(function(){return cljs.analyzer.api.current_file;},new cljs.core.Symbol("cljs.analyzer.api","current-file","cljs.analyzer.api/current-file",1523082248,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer.api","cljs.analyzer.api",1016020812,null),new cljs.core.Symbol(null,"current-file","current-file",1696815834,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer/api.cljc",19,1,41,41,cljs.core.list(cljs.core.PersistentVector.EMPTY),"Return the current file under analysis or compilation.",(cljs.core.truth_(cljs.analyzer.api.current_file)?cljs.analyzer.api.current_file.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"current-ns"),new cljs.core.Var(function(){return cljs.analyzer.api.current_ns;},new cljs.core.Symbol("cljs.analyzer.api","current-ns","cljs.analyzer.api/current-ns",-508120023,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer.api","cljs.analyzer.api",1016020812,null),new cljs.core.Symbol(null,"current-ns","current-ns",-992782341,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer/api.cljc",17,1,46,46,cljs.core.list(cljs.core.PersistentVector.EMPTY),"Return the current ns under analysis or compilation.",(cljs.core.truth_(cljs.analyzer.api.current_ns)?cljs.analyzer.api.current_ns.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"resolve"),new cljs.core.Var(function(){return cljs.analyzer.api.resolve;},new cljs.core.Symbol("cljs.analyzer.api","resolve","cljs.analyzer.api/resolve",498213843,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer.api","cljs.analyzer.api",1016020812,null),new cljs.core.Symbol(null,"resolve","resolve",56086045,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer/api.cljc",14,1,201,201,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"sym","sym",195671222,null)], null)),"Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve",(cljs.core.truth_(cljs.analyzer.api.resolve)?cljs.analyzer.api.resolve.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"get-js-index"),new cljs.core.Var(function(){return cljs.analyzer.api.get_js_index;},new cljs.core.Symbol("cljs.analyzer.api","get-js-index","cljs.analyzer.api/get-js-index",1499174317,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.analyzer.api","cljs.analyzer.api",1016020812,null),new cljs.core.Symbol(null,"get-js-index","get-js-index",-1078528001,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/analyzer/api.cljc",19,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),1,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),1,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,108,108,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null)], null)),"Return the currently computed Google Closure js dependency index from the\n  compiler state.",(cljs.core.truth_(cljs.analyzer.api.get_js_index)?cljs.analyzer.api.get_js_index.cljs$lang$test:null)]))], null)], null))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"protocol-prefix"),new cljs.core.Var(function(){return cljs.compiler.protocol_prefix;},new cljs.core.Symbol("cljs.compiler","protocol-prefix","cljs.compiler/protocol-prefix",-647416090,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"protocol-prefix","protocol-prefix",961294977,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",22,1,1133,1133,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"psym","psym",752521989,null)], null)),null,(cljs.core.truth_(cljs.compiler.protocol_prefix)?cljs.compiler.protocol_prefix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emit-arguments-to-array"),new cljs.core.Var(function(){return cljs.compiler.emit_arguments_to_array;},new cljs.core.Symbol("cljs.compiler","emit-arguments-to-array","cljs.compiler/emit-arguments-to-array",123952799,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emit-arguments-to-array","emit-arguments-to-array",-125804030,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",30,1,910,910,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"startslice","startslice",1404029423,null)], null)),"Emit code that copies function arguments into an array starting at an index.\n  Returns name of var holding the array.",(cljs.core.truth_(cljs.compiler.emit_arguments_to_array)?cljs.compiler.emit_arguments_to_array.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emit-js-object"),new cljs.core.Var(function(){return cljs.compiler.emit_js_object;},new cljs.core.Symbol("cljs.compiler","emit-js-object","cljs.compiler/emit-js-object",120701198,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emit-js-object","emit-js-object",1741999331,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",21,1,590,590,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"items","items",-1622480831,null),new cljs.core.Symbol(null,"emit-js-object-val","emit-js-object-val",976459598,null)], null)),null,(cljs.core.truth_(cljs.compiler.emit_js_object)?cljs.compiler.emit_js_object.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"distinct-keys?"),new cljs.core.Var(function(){return cljs.compiler.distinct_keys_QMARK_;},new cljs.core.Symbol("cljs.compiler","distinct-keys?","cljs.compiler/distinct-keys?",-675414274,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"distinct-keys?","distinct-keys?",2006907747,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",21,1,519,519,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"keys","keys",-1586012071,null)], null)),null,(cljs.core.truth_(cljs.compiler.distinct_keys_QMARK_)?cljs.compiler.distinct_keys_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"munge"),new cljs.core.Var(function(){return cljs.compiler.munge;},new cljs.core.Symbol("cljs.compiler","munge","cljs.compiler/munge",-1783239045,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"munge","munge",-174396700,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",12,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"reserved","reserved",865303230,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"reserved","reserved",865303230,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,113,113,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"reserved","reserved",865303230,null)], null)),null,(cljs.core.truth_(cljs.compiler.munge)?cljs.compiler.munge.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"get-define"),new cljs.core.Var(function(){return cljs.compiler.get_define;},new cljs.core.Symbol("cljs.compiler","get-define","cljs.compiler/get-define",871349306,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"get-define","get-define",1405663397,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",17,1,802,802,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"mname","mname",-652949718,null),new cljs.core.Symbol(null,"jsdoc","jsdoc",-909252253,null)], null)),null,(cljs.core.truth_(cljs.compiler.get_define)?cljs.compiler.get_define.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"valid-define-value?"),new cljs.core.Var(function(){return cljs.compiler.valid_define_value_QMARK_;},new cljs.core.Symbol("cljs.compiler","valid-define-value?","cljs.compiler/valid-define-value?",-1275124646,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"valid-define-value?","valid-define-value?",1406283717,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",26,1,796,796,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(cljs.compiler.valid_define_value_QMARK_)?cljs.compiler.valid_define_value_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emit-set"),new cljs.core.Var(function(){return cljs.compiler.emit_set;},new cljs.core.Symbol("cljs.compiler","emit-set","cljs.compiler/emit-set",-2114664200,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emit-set","emit-set",1641138023,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",15,1,574,574,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"items","items",-1622480831,null),new cljs.core.Symbol(null,"comma-sep","comma-sep",-1535634875,null),new cljs.core.Symbol(null,"distinct-constants?","distinct-constants?",-2058750210,null)], null)),null,(cljs.core.truth_(cljs.compiler.emit_set)?cljs.compiler.emit_set.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emits-keyword"),new cljs.core.Var(function(){return cljs.compiler.emits_keyword;},new cljs.core.Symbol("cljs.compiler","emits-keyword","cljs.compiler/emits-keyword",-1722764557,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emits-keyword","emits-keyword",959821672,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",20,1,367,367,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"kw","kw",-1496127594,null)], null)),null,(cljs.core.truth_(cljs.compiler.emits_keyword)?cljs.compiler.emits_keyword.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*lexical-renames*"),new cljs.core.Var(function(){return cljs.compiler._STAR_lexical_renames_STAR_;},new cljs.core.Symbol("cljs.compiler","*lexical-renames*","cljs.compiler/*lexical-renames*",1036424532,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"*lexical-renames*","*lexical-renames*",-1645638967,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",33,1,true,58,58,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.compiler._STAR_lexical_renames_STAR_)?cljs.compiler._STAR_lexical_renames_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emit-let"),new cljs.core.Var(function(){return cljs.compiler.emit_let;},new cljs.core.Symbol("cljs.compiler","emit-let","cljs.compiler/emit-let",-2042695539,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emit-let","emit-let",643960042,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",15,1,1084,1084,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Keyword(null,"body","body",-2049205669),new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"bindings","bindings",-1383038577,null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null)], null),new cljs.core.Symbol(null,"is-loop","is-loop",-616317556,null)], null)),null,(cljs.core.truth_(cljs.compiler.emit_let)?cljs.compiler.emit_let.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"sublib-select"),new cljs.core.Var(function(){return cljs.compiler.sublib_select;},new cljs.core.Symbol("cljs.compiler","sublib-select","cljs.compiler/sublib-select",-610616916,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"sublib-select","sublib-select",-1144668917,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",20,1,1266,1266,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sublib","sublib",196159635,null)], null)),null,(cljs.core.truth_(cljs.compiler.sublib_select)?cljs.compiler.sublib_select.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"all-distinct?"),new cljs.core.Var(function(){return cljs.compiler.all_distinct_QMARK_;},new cljs.core.Symbol("cljs.compiler","all-distinct?","cljs.compiler/all-distinct?",-751702164,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"all-distinct?","all-distinct?",1934889675,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",20,1,273,273,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),null,(cljs.core.truth_(cljs.compiler.all_distinct_QMARK_)?cljs.compiler.all_distinct_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"cljs-reserved-file-names"),new cljs.core.Var(function(){return cljs.compiler.cljs_reserved_file_names;},new cljs.core.Symbol("cljs.compiler","cljs-reserved-file-names","cljs.compiler/cljs-reserved-file-names",667666320,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"cljs-reserved-file-names","cljs-reserved-file-names",-971588853,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",30,1,60,60,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.compiler.cljs_reserved_file_names)?cljs.compiler.cljs_reserved_file_names.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"base-types"),new cljs.core.Var(function(){return cljs.compiler.base_types;},new cljs.core.Symbol("cljs.compiler","base-types","cljs.compiler/base-types",-1694407913,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"base-types","base-types",2071881452,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",16,1,692,692,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.compiler.base_types)?cljs.compiler.base_types.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"resolve-type"),new cljs.core.Var(function(){return cljs.compiler.resolve_type;},new cljs.core.Symbol("cljs.compiler","resolve-type","cljs.compiler/resolve-type",-181711390,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"resolve-type","resolve-type",-1798810035,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",19,1,705,705,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),cljs.core.with_meta(new cljs.core.Symbol(null,"t","t",242699008,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"String","String",-2070057435,null)], null))], null)),null,(cljs.core.truth_(cljs.compiler.resolve_type)?cljs.compiler.resolve_type.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*source-map-data-gen-col*"),new cljs.core.Var(function(){return cljs.compiler._STAR_source_map_data_gen_col_STAR_;},new cljs.core.Symbol("cljs.compiler","*source-map-data-gen-col*","cljs.compiler/*source-map-data-gen-col*",-999989432,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"*source-map-data-gen-col*","*source-map-data-gen-col*",604525549,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",41,1,true,57,57,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.compiler._STAR_source_map_data_gen_col_STAR_)?cljs.compiler._STAR_source_map_data_gen_col_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emit-with-meta"),new cljs.core.Var(function(){return cljs.compiler.emit_with_meta;},new cljs.core.Symbol("cljs.compiler","emit-with-meta","cljs.compiler/emit-with-meta",-319715051,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emit-with-meta","emit-with-meta",1289000174,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",21,1,511,511,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"meta","meta",-1154898805,null)], null)),null,(cljs.core.truth_(cljs.compiler.emit_with_meta)?cljs.compiler.emit_with_meta.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emit-variadic-fn-method"),new cljs.core.Var(function(){return cljs.compiler.emit_variadic_fn_method;},new cljs.core.Symbol("cljs.compiler","emit-variadic-fn-method","cljs.compiler/emit-variadic-fn-method",925572075,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emit-variadic-fn-method","emit-variadic-fn-method",1460543374,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",30,1,924,924,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Keyword(null,"body","body",-2049205669),new cljs.core.Symbol(null,"max-fixed-arity","max-fixed-arity",950325984,null),new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),new cljs.core.Symbol(null,"variadic","variadic",-1771809712,null),new cljs.core.Keyword(null,"variadic?","variadic?",584179762),new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type","type",-1480165421,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"params","params",-1943919534,null),new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"recurs","recurs",-318777782,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"f","f",43394975,null)], null)], null)),null,(cljs.core.truth_(cljs.compiler.emit_variadic_fn_method)?cljs.compiler.emit_variadic_fn_method.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"js-reserved"),new cljs.core.Var(function(){return cljs.compiler.js_reserved;},new cljs.core.Symbol("cljs.compiler","js-reserved","cljs.compiler/js-reserved",-1941004096,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"js-reserved","js-reserved",740533423,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",17,1,43,43,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.compiler.js_reserved)?cljs.compiler.js_reserved.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*recompiled*"),new cljs.core.Var(function(){return cljs.compiler._STAR_recompiled_STAR_;},new cljs.core.Symbol("cljs.compiler","*recompiled*","cljs.compiler/*recompiled*",-911060726,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"*recompiled*","*recompiled*",697783727,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",28,1,true,54,54,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.compiler._STAR_recompiled_STAR_)?cljs.compiler._STAR_recompiled_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emits"),new cljs.core.Var(function(){return cljs.compiler.emits;},new cljs.core.Symbol("cljs.compiler","emits","cljs.compiler/emits",-1296164997,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emits","emits",312152272,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",12,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(5),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(5),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"Object","Object",61210754,null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"c","c",-122660552,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"d","d",-682293345,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"d","d",-682293345,null),new cljs.core.Symbol(null,"e","e",-1273166571,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"Object","Object",61210754,null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"c","c",-122660552,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"d","d",-682293345,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"d","d",-682293345,null),new cljs.core.Symbol(null,"e","e",-1273166571,null)], null),new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"d","d",-682293345,null),new cljs.core.Symbol(null,"e","e",-1273166571,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null,null,null,null,null)], null),1,206,206,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"Object","Object",61210754,null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"c","c",-122660552,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"d","d",-682293345,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"d","d",-682293345,null),new cljs.core.Symbol(null,"e","e",-1273166571,null)], null),new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"d","d",-682293345,null),new cljs.core.Symbol(null,"e","e",-1273166571,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),null,(cljs.core.truth_(cljs.compiler.emits)?cljs.compiler.emits.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emit-constant"),new cljs.core.Var(function(){return cljs.compiler.emit_constant;},new cljs.core.Symbol("cljs.compiler","emit-constant","cljs.compiler/emit-constant",-559366579,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emit-constant","emit-constant",2127409904,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",20,1,297,297,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"v","v",1661996586,null)], null)),null,(cljs.core.truth_(cljs.compiler.emit_constant)?cljs.compiler.emit_constant.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emit-dot"),new cljs.core.Var(function(){return cljs.compiler.emit_dot;},new cljs.core.Symbol("cljs.compiler","emit-dot","cljs.compiler/emit-dot",132276684,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emit-dot","emit-dot",-1480500111,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",15,1,1422,1422,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"target","target",1893533248,null),new cljs.core.Symbol(null,"field","field",338095027,null),new cljs.core.Symbol(null,"method","method",1696235119,null),new cljs.core.Symbol(null,"args","args",-1338879193,null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null)], null)], null)),null,(cljs.core.truth_(cljs.compiler.emit_dot)?cljs.compiler.emit_dot.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emit-constants-table"),new cljs.core.Var(function(){return cljs.compiler.emit_constants_table;},new cljs.core.Symbol("cljs.compiler","emit-constants-table","cljs.compiler/emit-constants-table",-542922950,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emit-constants-table","emit-constants-table",-1132675951,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",27,1,1841,1841,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"table","table",1075588491,null)], null)),null,(cljs.core.truth_(cljs.compiler.emit_constants_table)?cljs.compiler.emit_constants_table.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emit-list"),new cljs.core.Var(function(){return cljs.compiler.emit_list;},new cljs.core.Symbol("cljs.compiler","emit-list","cljs.compiler/emit-list",-1812948838,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emit-list","emit-list",1914674417,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",16,1,550,550,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"items","items",-1622480831,null),new cljs.core.Symbol(null,"comma-sep","comma-sep",-1535634875,null)], null)),null,(cljs.core.truth_(cljs.compiler.emit_list)?cljs.compiler.emit_list.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"get-first-ns-segment"),new cljs.core.Var(function(){return cljs.compiler.get_first_ns_segment;},new cljs.core.Symbol("cljs.compiler","get-first-ns-segment","cljs.compiler/get-first-ns-segment",452271450,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"get-first-ns-segment","get-first-ns-segment",-90826319,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",27,1,62,62,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null)),"Gets the part up to the first `.` of a namespace.\n   Returns the empty string for nil.\n   Returns the entire string if no `.` in namespace",(cljs.core.truth_(cljs.compiler.get_first_ns_segment)?cljs.compiler.get_first_ns_segment.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emit-fn-params"),new cljs.core.Var(function(){return cljs.compiler.emit_fn_params;},new cljs.core.Symbol("cljs.compiler","emit-fn-params","cljs.compiler/emit-fn-params",-430151686,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emit-fn-params","emit-fn-params",129983313,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",21,1,888,888,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"params","params",-1943919534,null)], null)),null,(cljs.core.truth_(cljs.compiler.emit_fn_params)?cljs.compiler.emit_fn_params.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"munge-reserved"),new cljs.core.Var(function(){return cljs.compiler.munge_reserved;},new cljs.core.Symbol("cljs.compiler","munge-reserved","cljs.compiler/munge-reserved",1093704604,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"munge-reserved","munge-reserved",-513957903,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",21,1,107,107,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"reserved","reserved",865303230,null)], null)),null,(cljs.core.truth_(cljs.compiler.munge_reserved)?cljs.compiler.munge_reserved.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"fn-self-name"),new cljs.core.Var(function(){return cljs.compiler.fn_self_name;},new cljs.core.Symbol("cljs.compiler","fn-self-name","cljs.compiler/fn-self-name",-655307883,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"fn-self-name","fn-self-name",-1193292238,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",19,1,97,97,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"info","info",1323462525,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"name-var","name-var",-1983248789,null)], null)], null)),null,(cljs.core.truth_(cljs.compiler.fn_self_name)?cljs.compiler.fn_self_name.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"load-libs"),new cljs.core.Var(function(){return cljs.compiler.load_libs;},new cljs.core.Symbol("cljs.compiler","load-libs","cljs.compiler/load-libs",-1449948289,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"load-libs","load-libs",-910784814,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",16,1,1289,1289,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"libs","libs",-1313619200,null),new cljs.core.Symbol(null,"seen","seen",1121531738,null),new cljs.core.Symbol(null,"reloads","reloads",-2043737247,null),new cljs.core.Symbol(null,"deps","deps",-771075450,null),new cljs.core.Symbol(null,"ns-name","ns-name",-436814796,null)], null)),null,(cljs.core.truth_(cljs.compiler.load_libs)?cljs.compiler.load_libs.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emit-constant-no-meta"),new cljs.core.Var(function(){return cljs.compiler.emit_constant_no_meta;},new cljs.core.Symbol("cljs.compiler","emit-constant-no-meta","cljs.compiler/emit-constant-no-meta",266348020,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emit-constant-no-meta","emit-constant-no-meta",-1346033389,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",31,4,287,287,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(cljs.compiler.emit_constant_no_meta)?cljs.compiler.emit_constant_no_meta.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"munge-param-return"),new cljs.core.Var(function(){return cljs.compiler.munge_param_return;},new cljs.core.Symbol("cljs.compiler","munge-param-return","cljs.compiler/munge-param-return",-1184498114,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"munge-param-return","munge-param-return",419480979,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",25,1,744,744,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"line","line",1852876762,null)], null)),null,(cljs.core.truth_(cljs.compiler.munge_param_return)?cljs.compiler.munge_param_return.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emit-js-array"),new cljs.core.Var(function(){return cljs.compiler.emit_js_array;},new cljs.core.Symbol("cljs.compiler","emit-js-array","cljs.compiler/emit-js-array",-1611875330,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emit-js-array","emit-js-array",1007271763,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",20,1,599,599,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"items","items",-1622480831,null),new cljs.core.Symbol(null,"comma-sep","comma-sep",-1535634875,null)], null)),null,(cljs.core.truth_(cljs.compiler.emit_js_array)?cljs.compiler.emit_js_array.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"find-ns-starts-with"),new cljs.core.Var(function(){return cljs.compiler.find_ns_starts_with;},new cljs.core.Symbol("cljs.compiler","find-ns-starts-with","cljs.compiler/find-ns-starts-with",-987275937,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"find-ns-starts-with","find-ns-starts-with",-1513858572,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",36,1,true,73,73,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"needle","needle",-1574833774,null)], null)),null,(cljs.core.truth_(cljs.compiler.find_ns_starts_with)?cljs.compiler.find_ns_starts_with.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emit*"),new cljs.core.Var(function(){return cljs.compiler.emit_STAR_;},new cljs.core.Symbol("cljs.compiler","emit*","cljs.compiler/emit*",631658449,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emit*","emit*",-2054991244,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",16,1,182,182,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.compiler.emit_STAR_)?cljs.compiler.emit_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emit-constant*"),new cljs.core.Var(function(){return cljs.compiler.emit_constant_STAR_;},new cljs.core.Symbol("cljs.compiler","emit-constant*","cljs.compiler/emit-constant*",-1865103600,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emit-constant*","emit-constant*",1895291829,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",28,4,268,268,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.compiler.emit_constant_STAR_)?cljs.compiler.emit_constant_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"checking-types?"),new cljs.core.Var(function(){return cljs.compiler.checking_types_QMARK_;},new cljs.core.Symbol("cljs.compiler","checking-types?","cljs.compiler/checking-types?",766073694,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"checking-types?","checking-types?",-1919526923,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",22,1,766,766,cljs.core.list(cljs.core.PersistentVector.EMPTY),null,(cljs.core.truth_(cljs.compiler.checking_types_QMARK_)?cljs.compiler.checking_types_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emit-fn-method"),new cljs.core.Var(function(){return cljs.compiler.emit_fn_method;},new cljs.core.Symbol("cljs.compiler","emit-fn-method","cljs.compiler/emit-fn-method",-640188867,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emit-fn-method","emit-fn-method",2045934166,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",21,1,895,895,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Keyword(null,"body","body",-2049205669),new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type","type",-1480165421,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"params","params",-1943919534,null),new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"recurs","recurs",-318777782,null)], null)], null)], null)),null,(cljs.core.truth_(cljs.compiler.emit_fn_method)?cljs.compiler.emit_fn_method.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emit-comment"),new cljs.core.Var(function(){return cljs.compiler.emit_comment;},new cljs.core.Symbol("cljs.compiler","emit-comment","cljs.compiler/emit-comment",-981807543,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emit-comment","emit-comment",1687798518,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",19,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"doc","doc",-741138878,null),new cljs.core.Symbol(null,"jsdoc","jsdoc",-909252253,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"doc","doc",-741138878,null),new cljs.core.Symbol(null,"jsdoc","jsdoc",-909252253,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"doc","doc",-741138878,null),new cljs.core.Symbol(null,"jsdoc","jsdoc",-909252253,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"doc","doc",-741138878,null),new cljs.core.Symbol(null,"jsdoc","jsdoc",-909252253,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,771,771,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"doc","doc",-741138878,null),new cljs.core.Symbol(null,"jsdoc","jsdoc",-909252253,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"doc","doc",-741138878,null),new cljs.core.Symbol(null,"jsdoc","jsdoc",-909252253,null)], null)),"Emit a nicely formatted comment string.",(cljs.core.truth_(cljs.compiler.emit_comment)?cljs.compiler.emit_comment.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"hash-scope"),new cljs.core.Var(function(){return cljs.compiler.hash_scope;},new cljs.core.Symbol("cljs.compiler","hash-scope","cljs.compiler/hash-scope",1981670501,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"hash-scope","hash-scope",377020440,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",17,1,90,90,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),null,(cljs.core.truth_(cljs.compiler.hash_scope)?cljs.compiler.hash_scope.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emit-apply-to"),new cljs.core.Var(function(){return cljs.compiler.emit_apply_to;},new cljs.core.Symbol("cljs.compiler","emit-apply-to","cljs.compiler/emit-apply-to",-1905506235,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emit-apply-to","emit-apply-to",776686840,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",20,1,853,853,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"params","params",-1943919534,null),new cljs.core.Symbol(null,"env","env",-175281708,null)], null)], null)], null)),null,(cljs.core.truth_(cljs.compiler.emit_apply_to)?cljs.compiler.emit_apply_to.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emits-symbol"),new cljs.core.Var(function(){return cljs.compiler.emits_symbol;},new cljs.core.Symbol("cljs.compiler","emits-symbol","cljs.compiler/emits-symbol",182559998,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emits-symbol","emits-symbol",-1428381351,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",19,1,382,382,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null)], null)),null,(cljs.core.truth_(cljs.compiler.emits_symbol)?cljs.compiler.emits_symbol.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"falsey-constant?"),new cljs.core.Var(function(){return cljs.compiler.falsey_constant_QMARK_;},new cljs.core.Symbol("cljs.compiler","falsey-constant?","cljs.compiler/falsey-constant?",695422622,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"falsey-constant?","falsey-constant?",-1990833543,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",23,1,634,634,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null)], null)),null,(cljs.core.truth_(cljs.compiler.falsey_constant_QMARK_)?cljs.compiler.falsey_constant_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emit-constants-comma-sep"),new cljs.core.Var(function(){return cljs.compiler.emit_constants_comma_sep;},new cljs.core.Symbol("cljs.compiler","emit-constants-comma-sep","cljs.compiler/emit-constants-comma-sep",-1484437890,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emit-constants-comma-sep","emit-constants-comma-sep",1206272729,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",31,1,412,412,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"cs","cs",-117024463,null)], null)),null,(cljs.core.truth_(cljs.compiler.emit_constants_comma_sep)?cljs.compiler.emit_constants_comma_sep.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*source-map-data*"),new cljs.core.Var(function(){return cljs.compiler._STAR_source_map_data_STAR_;},new cljs.core.Symbol("cljs.compiler","*source-map-data*","cljs.compiler/*source-map-data*",-555583202,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"*source-map-data*","*source-map-data*",2098004729,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",33,1,true,56,56,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.compiler._STAR_source_map_data_STAR_)?cljs.compiler._STAR_source_map_data_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emit-record-value"),new cljs.core.Var(function(){return cljs.compiler.emit_record_value;},new cljs.core.Symbol("cljs.compiler","emit-record-value","cljs.compiler/emit-record-value",1935949796,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emit-record-value","emit-record-value",314260377,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",24,1,612,612,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"items","items",-1622480831,null)], null)),null,(cljs.core.truth_(cljs.compiler.emit_record_value)?cljs.compiler.emit_record_value.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emit-var"),new cljs.core.Var(function(){return cljs.compiler.emit_var;},new cljs.core.Symbol("cljs.compiler","emit-var","cljs.compiler/emit-var",519557341,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emit-var","emit-var",-1093342022,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",15,1,454,454,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"info","info",1323462525,null),new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"ast","ast",780197459,null)], null)], null)),null,(cljs.core.truth_(cljs.compiler.emit_var)?cljs.compiler.emit_var.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"mapped-types"),new cljs.core.Var(function(){return cljs.compiler.mapped_types;},new cljs.core.Symbol("cljs.compiler","mapped-types","cljs.compiler/mapped-types",-1914811689,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"mapped-types","mapped-types",742081850,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",18,1,702,702,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.compiler.mapped_types)?cljs.compiler.mapped_types.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"resolve-types"),new cljs.core.Var(function(){return cljs.compiler.resolve_types;},new cljs.core.Symbol("cljs.compiler","resolve-types","cljs.compiler/resolve-types",855243549,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"resolve-types","resolve-types",-760807686,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",20,1,739,739,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"ts","ts",-1037225865,null)], null)),null,(cljs.core.truth_(cljs.compiler.resolve_types)?cljs.compiler.resolve_types.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*inputs*"),new cljs.core.Var(function(){return cljs.compiler._STAR_inputs_STAR_;},new cljs.core.Symbol("cljs.compiler","*inputs*","cljs.compiler/*inputs*",1604901917,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"*inputs*","*inputs*",-1076896774,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",24,1,true,55,55,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.compiler._STAR_inputs_STAR_)?cljs.compiler._STAR_inputs_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emit-str"),new cljs.core.Var(function(){return cljs.compiler.emit_str;},new cljs.core.Symbol("cljs.compiler","emit-str","cljs.compiler/emit-str",1813228918,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emit-str","emit-str",-868830501,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",23,1,262,262,new cljs.core.Symbol(null,"String","String",-2070057435,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null)], null)),null,(cljs.core.truth_(cljs.compiler.emit_str)?cljs.compiler.emit_str.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emit-map"),new cljs.core.Var(function(){return cljs.compiler.emit_map;},new cljs.core.Symbol("cljs.compiler","emit-map","cljs.compiler/emit-map",147404316,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emit-map","emit-map",-1460913157,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",15,1,524,524,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"keys","keys",-1586012071,null),new cljs.core.Symbol(null,"vals","vals",-1886377036,null),new cljs.core.Symbol(null,"comma-sep","comma-sep",-1535634875,null),new cljs.core.Symbol(null,"distinct-keys?","distinct-keys?",2006907747,null)], null)),null,(cljs.core.truth_(cljs.compiler.emit_map)?cljs.compiler.emit_map.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emit-vector"),new cljs.core.Var(function(){return cljs.compiler.emit_vector;},new cljs.core.Symbol("cljs.compiler","emit-vector","cljs.compiler/emit-vector",1475587091,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emit-vector","emit-vector",-140599172,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",18,1,555,555,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"items","items",-1622480831,null),new cljs.core.Symbol(null,"comma-sep","comma-sep",-1535634875,null)], null)),null,(cljs.core.truth_(cljs.compiler.emit_vector)?cljs.compiler.emit_vector.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"truthy-constant?"),new cljs.core.Var(function(){return cljs.compiler.truthy_constant_QMARK_;},new cljs.core.Symbol("cljs.compiler","truthy-constant?","cljs.compiler/truthy-constant?",-1279985593,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"truthy-constant?","truthy-constant?",273808604,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",23,1,625,625,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null)], null)),null,(cljs.core.truth_(cljs.compiler.truthy_constant_QMARK_)?cljs.compiler.truthy_constant_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emitln"),new cljs.core.Var(function(){return cljs.compiler.emitln;},new cljs.core.Symbol("cljs.compiler","emitln","cljs.compiler/emitln",-1309380807,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emitln","emitln",-787258532,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",13,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(5),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(5),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"c","c",-122660552,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"d","d",-682293345,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"d","d",-682293345,null),new cljs.core.Symbol(null,"e","e",-1273166571,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"c","c",-122660552,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"d","d",-682293345,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"d","d",-682293345,null),new cljs.core.Symbol(null,"e","e",-1273166571,null)], null),new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"d","d",-682293345,null),new cljs.core.Symbol(null,"e","e",-1273166571,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null,null,null,null,null)], null),1,245,245,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"c","c",-122660552,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"d","d",-682293345,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"d","d",-682293345,null),new cljs.core.Symbol(null,"e","e",-1273166571,null)], null),new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"d","d",-682293345,null),new cljs.core.Symbol(null,"e","e",-1273166571,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),null,(cljs.core.truth_(cljs.compiler.emitln)?cljs.compiler.emitln.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emit"),new cljs.core.Var(function(){return cljs.compiler.emit;},new cljs.core.Symbol("cljs.compiler","emit","cljs.compiler/emit",-230005096,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emit","emit",313352509,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",11,1,184,184,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ast","ast",780197459,null)], null)),null,(cljs.core.truth_(cljs.compiler.emit)?cljs.compiler.emit.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"safe-test?"),new cljs.core.Var(function(){return cljs.compiler.safe_test_QMARK_;},new cljs.core.Symbol("cljs.compiler","safe-test?","cljs.compiler/safe-test?",310339078,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"safe-test?","safe-test?",-1299160419,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",17,1,641,641,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"env","env",-175281708,null),new cljs.core.Symbol(null,"e","e",-1273166571,null)], null)),null,(cljs.core.truth_(cljs.compiler.safe_test_QMARK_)?cljs.compiler.safe_test_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emit-externs"),new cljs.core.Var(function(){return cljs.compiler.emit_externs;},new cljs.core.Symbol("cljs.compiler","emit-externs","cljs.compiler/emit-externs",186872945,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emit-externs","emit-externs",-1421837858,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",19,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),4,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),4,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"externs","externs",1862252204,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"prefix","prefix",1374623062,null),new cljs.core.Symbol(null,"externs","externs",1862252204,null),new cljs.core.Symbol(null,"top-level","top-level",277305852,null),new cljs.core.Symbol(null,"known-externs","known-externs",-249735922,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"externs","externs",1862252204,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"prefix","prefix",1374623062,null),new cljs.core.Symbol(null,"externs","externs",1862252204,null),new cljs.core.Symbol(null,"top-level","top-level",277305852,null),new cljs.core.Symbol(null,"known-externs","known-externs",-249735922,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,1865,1865,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"externs","externs",1862252204,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"prefix","prefix",1374623062,null),new cljs.core.Symbol(null,"externs","externs",1862252204,null),new cljs.core.Symbol(null,"top-level","top-level",277305852,null),new cljs.core.Symbol(null,"known-externs","known-externs",-249735922,null)], null)),null,(cljs.core.truth_(cljs.compiler.emit_externs)?cljs.compiler.emit_externs.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emit-global-export"),new cljs.core.Var(function(){return cljs.compiler.emit_global_export;},new cljs.core.Symbol("cljs.compiler","emit-global-export","cljs.compiler/emit-global-export",-1223256325,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"emit-global-export","emit-global-export",401709598,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",25,1,1273,1273,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns-name","ns-name",-436814796,null),new cljs.core.Symbol(null,"global-exports","global-exports",-4334065,null),new cljs.core.Symbol(null,"lib","lib",1832340253,null)], null)),null,(cljs.core.truth_(cljs.compiler.emit_global_export)?cljs.compiler.emit_global_export.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"distinct-constants?"),new cljs.core.Var(function(){return cljs.compiler.distinct_constants_QMARK_;},new cljs.core.Symbol("cljs.compiler","distinct-constants?","cljs.compiler/distinct-constants?",-445846895,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"distinct-constants?","distinct-constants?",-2058750210,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",26,1,569,569,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"items","items",-1622480831,null)], null)),null,(cljs.core.truth_(cljs.compiler.distinct_constants_QMARK_)?cljs.compiler.distinct_constants_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"shadow-depth"),new cljs.core.Var(function(){return cljs.compiler.shadow_depth;},new cljs.core.Symbol("cljs.compiler","shadow-depth","cljs.compiler/shadow-depth",643976516,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.compiler","cljs.compiler",-77239712,null),new cljs.core.Symbol(null,"shadow-depth","shadow-depth",-968799777,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/compiler.cljc",19,1,82,82,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),null,(cljs.core.truth_(cljs.compiler.shadow_depth)?cljs.compiler.shadow_depth.cljs$lang$test:null)]))], null)], true))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"cljs.env","cljs.env",-1810013139,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*compiler*"),new cljs.core.Var(function(){return cljs.env._STAR_compiler_STAR_;},new cljs.core.Symbol("cljs.env","*compiler*","cljs.env/*compiler*",524302605,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.env","cljs.env",-1810013139,null),new cljs.core.Symbol(null,"*compiler*","*compiler*",1472341438,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/env.cljc",26,1,true,44,44,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.env._STAR_compiler_STAR_)?cljs.env._STAR_compiler_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"default-compiler-env*"),new cljs.core.Var(function(){return cljs.env.default_compiler_env_STAR_;},new cljs.core.Symbol("cljs.env","default-compiler-env*","cljs.env/default-compiler-env*",748258311,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.env","cljs.env",-1810013139,null),new cljs.core.Symbol(null,"default-compiler-env*","default-compiler-env*",-199230474,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/env.cljc",28,1,46,46,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"options","options",1740170016,null)], null)),null,(cljs.core.truth_(cljs.env.default_compiler_env_STAR_)?cljs.env.default_compiler_env_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"default-compiler-env"),new cljs.core.Var(function(){return cljs.env.default_compiler_env;},new cljs.core.Symbol("cljs.env","default-compiler-env","cljs.env/default-compiler-env",254522022,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.env","cljs.env",-1810013139,null),new cljs.core.Symbol(null,"default-compiler-env","default-compiler-env",1200981559,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/env.cljc",27,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),1,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),1,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"options","options",1740170016,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"options","options",1740170016,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,59,59,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"options","options",1740170016,null)], null)),null,(cljs.core.truth_(cljs.env.default_compiler_env)?cljs.env.default_compiler_env.cljs$lang$test:null)]))], null)], null))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"cljs.js","cljs.js",474485962,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*load-fn*"),new cljs.core.Var(function(){return cljs.js._STAR_load_fn_STAR_;},new cljs.core.Symbol("cljs.js","*load-fn*","cljs.js/*load-fn*",288250636,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.js","cljs.js",474485962,null),new cljs.core.Symbol(null,"*load-fn*","*load-fn*",-598793663,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/js.cljs",12,1,true,74,101,cljs.core.List.EMPTY,"Each runtime environment provides a different way to load a library.\n  Whatever function *load-fn* is bound to will be passed two arguments - a\n  map and a callback function: The map will have the following keys:\n\n  :name   - the name of the library (a symbol)\n  :macros - modifier signaling a macros namespace load\n  :path   - munged relative library path (a string)\n\n  It is up to the implementor to correctly resolve the corresponding .cljs,\n  .cljc, or .js resource (the order must be respected). If :macros is true\n  resolution should only consider .clj or .cljc resources (the order must be\n  respected). Upon resolution the callback should be invoked with a map\n  containing the following keys:\n\n  :lang       - the language, :clj or :js\n  :source     - the source of the library (a string)\n  :file       - optional, the file path, it will be added to AST's :file keyword\n                (but not in :meta)\n  :cache      - optional, if a :clj namespace has been precompiled to :js, can\n                give an analysis cache for faster loads.\n  :source-map - optional, if a :clj namespace has been precompiled to :js, can\n                give a V3 source map JSON\n\n  If the resource could not be resolved, the callback should be invoked with\n  nil.",(cljs.core.truth_(cljs.js._STAR_load_fn_STAR_)?cljs.js._STAR_load_fn_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"eval"),new cljs.core.Var(function(){return cljs.js.eval;},new cljs.core.Symbol("cljs.js","eval","cljs.js/eval",-185703959,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.js","cljs.js",474485962,null),new cljs.core.Symbol(null,"eval","eval",536963622,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/js.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),4,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),4,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,858,858,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null)),"Evaluate a single ClojureScript form. The parameters:\n\n   state (atom)\n     the compiler state\n\n   form (s-expr)\n     the ClojureScript source\n\n   opts (map)\n     compilation options.\n\n      :eval             - eval function to invoke, see *eval-fn*\n      :load             - library resolution function, see *load-fn*\n      :source-map       - set to true to generate inline source map information\n      :def-emits-var    - sets whether def (and derived) forms return either a Var\n                          (if set to true) or the def init value (if false). Default\n                          is false.\n      :checked-arrays   - if :warn or :error, checks inferred types and values passed\n                          to aget/aset. Logs for incorrect values if :warn, throws if\n                          :error. Defaults to false.\n      :static-fns       - employ static dispatch to specific function arities in\n                          emitted JavaScript, as opposed to making use of the\n                          `call` construct. Defaults to false.\n      :fn-invoke-direct - if `true`, does not generate `.call(null...)` calls for\n                          unknown functions, but instead direct invokes via\n                          `f(a0,a1...)`. Defaults to `false`.\n      :target           - use `:nodejs` if targeting Node.js. Takes no other options\n                          at the moment.\n      :ns               - optional, the namespace in which to evaluate the source.\n      :verbose          - optional, emit details from compiler activity. Defaults to\n                          false.\n      :context          - optional, sets the context for the source. Possible values\n                          are `:expr`, `:statement` and `:return`. Defaults to\n                          `:statement`.\n\n   cb (function)\n     callback, will be invoked with a map. If successful the map will contain\n     a key :value with the result of evalution. If unsuccessful the map will\n     contain a key :error with an ex-info instance describing the cause of\n     failure.",(cljs.core.truth_(cljs.js.eval)?cljs.js.eval.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"compile-str"),new cljs.core.Var(function(){return cljs.js.compile_str;},new cljs.core.Symbol("cljs.js","compile-str","cljs.js/compile-str",-1005708548,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.js","cljs.js",474485962,null),new cljs.core.Symbol(null,"compile-str","compile-str",-1751055481,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/js.cljs",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),5,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),5,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,982,982,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null)),"Compile ClojureScript source into JavaScript. The parameters:\n\n   state (atom)\n     the compiler state\n\n   source (string)\n     the ClojureScript source\n\n   name (symbol or string)\n     optional, the name of the source - used as key in :source-maps\n\n   opts (map)\n     compilation options.\n\n      :eval             - eval function to invoke, see *eval-fn*\n      :load             - library resolution function, see *load-fn*\n      :source-map       - set to true to generate inline source map information\n      :def-emits-var    - sets whether def (and derived) forms return either a Var\n                          (if set to true) or the def init value (if false). Default\n                          is false.\n      :checked-arrays   - if :warn or :error, checks inferred types and values passed\n                          to aget/aset. Logs for incorrect values if :warn, throws if\n                          :error. Defaults to false.\n      :static-fns       - employ static dispatch to specific function arities in\n                          emitted JavaScript, as opposed to making use of the\n                          `call` construct. Defaults to false.\n      :fn-invoke-direct - if `true`, does not generate `.call(null...)` calls for\n                          unknown functions, but instead direct invokes via\n                          `f(a0,a1...)`. Defaults to `false`.\n      :target           - use `:nodejs` if targeting Node.js. Takes no other options\n                          at the moment.\n      :ns               - optional, the namespace in which to evaluate the source.\n      :verbose          - optional, emit details from compiler activity. Defaults to\n                          false.\n      :context          - optional, sets the context for the source. Possible values\n                          are `:expr`, `:statement` and `:return`. Defaults to\n                          `:statement`.\n\n   cb (function)\n     callback, will be invoked with a map. If successful the map will contain\n     a key :value with the compilation result (string). If unsuccessful the map\n     will contain a key :error with an ex-info instance describing the cause\n     of failure.",(cljs.core.truth_(cljs.js.compile_str)?cljs.js.compile_str.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ns->relpath"),new cljs.core.Var(function(){return cljs.js.ns__GT_relpath;},new cljs.core.Symbol("cljs.js","ns->relpath","cljs.js/ns->relpath",508714796,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.js","cljs.js",474485962,null),new cljs.core.Symbol(null,"ns->relpath","ns->relpath",-755932053,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/js.cljs",18,1,33,33,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns-sym","ns-sym",-55570078,null)], null)),"Given a namespace as a symbol return the relative path sans extension",(cljs.core.truth_(cljs.js.ns__GT_relpath)?cljs.js.ns__GT_relpath.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"empty-state"),new cljs.core.Var(function(){return cljs.js.empty_state;},new cljs.core.Symbol("cljs.js","empty-state","cljs.js/empty-state",-525178389,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.js","cljs.js",474485962,null),new cljs.core.Symbol(null,"empty-state","empty-state",1008034606,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/js.cljs",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),1,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),1,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"init","init",-234949907,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"init","init",-234949907,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,129,129,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"init","init",-234949907,null)], null)),"Construct an empty compiler state. Required to invoke analyze, compile,\n   eval and eval-str.",(cljs.core.truth_(cljs.js.empty_state)?cljs.js.empty_state.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*loaded*"),new cljs.core.Var(function(){return cljs.js._STAR_loaded_STAR_;},new cljs.core.Symbol("cljs.js","*loaded*","cljs.js/*loaded*",-767780228,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.js","cljs.js",474485962,null),new cljs.core.Symbol(null,"*loaded*","*loaded*",559777073,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/js.cljs",14,1,199,199,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.js._STAR_loaded_STAR_)?cljs.js._STAR_loaded_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"require"),new cljs.core.Var(function(){return cljs.js.require;},new cljs.core.Symbol("cljs.js","require","cljs.js/require",-1857916065,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.js","cljs.js",474485962,null),new cljs.core.Symbol(null,"require","require",1172530194,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/js.cljs",14,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),5,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),5,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"bound-vars","bound-vars",1684649184,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"bound-vars","bound-vars",1684649184,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"reload","reload",-1790732962,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"bound-vars","bound-vars",1684649184,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"bound-vars","bound-vars",1684649184,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"reload","reload",-1790732962,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null,null)], null),1,268,268,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"bound-vars","bound-vars",1684649184,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"bound-vars","bound-vars",1684649184,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"reload","reload",-1790732962,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null)),null,(cljs.core.truth_(cljs.js.require)?cljs.js.require.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"file->ns"),new cljs.core.Var(function(){return cljs.js.file__GT_ns;},new cljs.core.Symbol("cljs.js","file->ns","cljs.js/file->ns",-881881775,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.js","cljs.js",474485962,null),new cljs.core.Symbol(null,"file->ns","file->ns",-1630632428,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/js.cljs",15,1,38,38,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"file","file",370885649,null)], null)),null,(cljs.core.truth_(cljs.js.file__GT_ns)?cljs.js.file__GT_ns.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"eval-str"),new cljs.core.Var(function(){return cljs.js.eval_str;},new cljs.core.Symbol("cljs.js","eval-str","cljs.js/eval-str",-768062154,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.js","cljs.js",474485962,null),new cljs.core.Symbol(null,"eval-str","eval-str",-1902427013,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/js.cljs",15,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),5,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),5,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,1150,1150,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null)),"Evalute ClojureScript source given as a string. The parameters:\n\n  state (atom)\n    the compiler state\n\n  source (string)\n    the ClojureScript source\n\n  name (symbol or string)\n    optional, the name of the source - used as key in :source-maps\n\n  opts (map)\n    compilation options.\n\n    :eval             - eval function to invoke, see *eval-fn*\n    :load             - library resolution function, see *load-fn*\n    :source-map       - set to true to generate inline source map information\n    :cache-source     - optional, a function to run side-effects with the\n                        compilation result prior to actual evalution. This function\n                        takes two arguments, the first is the eval map, the source\n                        will be under :source. The second argument is a callback of\n                        one argument. If an error occurs an :error key should be\n                        supplied.\n    :def-emits-var    - sets whether def (and derived) forms return either a Var\n                        (if set to true) or the def init value (if false). Default\n                        is false.\n    :checked-arrays   - if :warn or :error, checks inferred types and values passed\n                        to aget/aset. Logs for incorrect values if :warn, throws if\n                        :error. Defaults to false.\n    :static-fns       - employ static dispatch to specific function arities in\n                        emitted JavaScript, as opposed to making use of the\n                        `call` construct. Defaults to false.\n    :fn-invoke-direct - if `true`, does not generate `.call(null...)` calls for\n                        unknown functions, but instead direct invokes via\n                        `f(a0,a1...)`. Defaults to `false`.\n    :target           - use `:nodejs` if targeting Node.js. Takes no other options\n                        at the moment.\n    :ns               - optional, the namespace in which to evaluate the source.\n    :verbose          - optional, emit details from compiler activity. Defaults to\n                        false.\n    :context          - optional, sets the context for the source. Possible values\n                     are `:expr`, `:statement` and `:return`. Defaults to\n                      `:statement`.\n\n  cb (function)\n    callback, will be invoked with a map. If succesful the map will contain\n    a :value key with the result of evaluation and :ns the current namespace.\n    If unsuccessful will contain a :error key with an ex-info instance describing\n    the cause of failure.",(cljs.core.truth_(cljs.js.eval_str)?cljs.js.eval_str.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"js-eval"),new cljs.core.Var(function(){return cljs.js.js_eval;},new cljs.core.Symbol("cljs.js","js-eval","cljs.js/js-eval",1831982448,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.js","cljs.js",474485962,null),new cljs.core.Symbol(null,"js-eval","js-eval",1502792635,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/js.cljs",14,1,121,121,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"source","source",1206599988,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"resource","resource",1892430363,null)], null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null)),"A default JavaScript evaluation function.",(cljs.core.truth_(cljs.js.js_eval)?cljs.js.js_eval.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"load-source-map!"),new cljs.core.Var(function(){return cljs.js.load_source_map_BANG_;},new cljs.core.Symbol("cljs.js","load-source-map!","cljs.js/load-source-map!",162698489,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.js","cljs.js",474485962,null),new cljs.core.Symbol(null,"load-source-map!","load-source-map!",1163763132,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/js.cljs",23,1,144,144,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"ns","ns",2082130287,null),new cljs.core.Symbol(null,"sm-json","sm-json",-1701261104,null)], null)),null,(cljs.core.truth_(cljs.js.load_source_map_BANG_)?cljs.js.load_source_map_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"load-analysis-cache!"),new cljs.core.Var(function(){return cljs.js.load_analysis_cache_BANG_;},new cljs.core.Symbol("cljs.js","load-analysis-cache!","cljs.js/load-analysis-cache!",-1025685191,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.js","cljs.js",474485962,null),new cljs.core.Symbol(null,"load-analysis-cache!","load-analysis-cache!",830096380,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/js.cljs",27,1,141,141,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"ns","ns",2082130287,null),new cljs.core.Symbol(null,"cache","cache",403508473,null)], null)),null,(cljs.core.truth_(cljs.js.load_analysis_cache_BANG_)?cljs.js.load_analysis_cache_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analyze-str"),new cljs.core.Var(function(){return cljs.js.analyze_str;},new cljs.core.Symbol("cljs.js","analyze-str","cljs.js/analyze-str",807431649,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.js","cljs.js",474485962,null),new cljs.core.Symbol(null,"analyze-str","analyze-str",2134991678,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/js.cljs",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),5,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),5,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,728,728,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null)),"Analyze ClojureScript source. The compiler state will be populated with\n   the results of analyzes. The parameters:\n\n   state (atom)\n     the compiler state\n\n   source (string)\n     the ClojureScript source\n\n   name (symbol or string)\n     optional, the name of the source\n\n   opts (map)\n     compilation options.\n\n      :eval             - eval function to invoke, see *eval-fn*\n      :load             - library resolution function, see *load-fn*\n      :source-map       - set to true to generate inline source map information\n      :def-emits-var    - sets whether def (and derived) forms return either a Var\n                          (if set to true) or the def init value (if false).\n                          Defaults to false.\n      :checked-arrays   - if :warn or :error, checks inferred types and values passed\n                          to aget/aset. Logs for incorrect values if :warn, throws if\n                          :error. Defaults to false.\n      :static-fns       - employ static dispatch to specific function arities in\n                          emitted JavaScript, as opposed to making use of the\n                          `call` construct. Defaults to false.\n      :fn-invoke-direct - if `true`, does not generate `.call(null...)` calls for\n                          unknown functions, but instead direct invokes via\n                          `f(a0,a1...)`. Defaults to `false`.\n      :target           - use `:nodejs` if targeting Node.js. Takes no other options\n                          at the moment.\n      :ns               - optional, the namespace in which to evaluate the source.\n      :verbose          - optional, emit details from compiler activity. Defaults to\n                          false.\n      :context          - optional, sets the context for the source. Possible values\n                          are `:expr`, `:statement` and `:return`. Defaults to\n                          `:statement`.\n\n   cb (function)\n     callback, will be invoked with a map. If successful the map will contain\n     a key :value, the actual value is not meaningful. If unsuccessful the\n     map will contain a key :error with an ex-info instance describing the cause\n     of failure.",(cljs.core.truth_(cljs.js.analyze_str)?cljs.js.analyze_str.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*eval-fn*"),new cljs.core.Var(function(){return cljs.js._STAR_eval_fn_STAR_;},new cljs.core.Symbol("cljs.js","*eval-fn*","cljs.js/*eval-fn*",-2139687712,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.js","cljs.js",474485962,null),new cljs.core.Symbol(null,"*eval-fn*","*eval-fn*",1423310399,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/js.cljs",12,1,true,105,117,cljs.core.List.EMPTY,"Each runtime environment provides various ways to eval JavaScript\n  source. Whatever function *eval-fn* is bound to will be passed a map\n  containing the following keys:\n\n  :source - the source of the library (string)\n  :name   - used to unique identify the script (symbol)\n  :cache  - if the source was originally ClojureScript, will be given the\n            analysis cache.\n\n  The result of evaluation should be the return value.",(cljs.core.truth_(cljs.js._STAR_eval_fn_STAR_)?cljs.js._STAR_eval_fn_STAR_.cljs$lang$test:null)]))], null)], null))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"indent-t"),new cljs.core.Var(function(){return cljs.pprint.indent_t;},new cljs.core.Symbol("cljs.pprint","indent-t","cljs.pprint/indent-t",-1643306481,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",new cljs.core.Keyword(null,"line","line",212345235),260,new cljs.core.Keyword(null,"column","column",2078222095),10,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"indent-t","indent-t",-2126116800,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.pprint.indent_t)?cljs.pprint.indent_t.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"t_cljs$pprint30417"),new cljs.core.Var(function(){return cljs.pprint.t_cljs$pprint30417;},new cljs.core.Symbol("cljs.pprint","t_cljs$pprint30417","cljs.pprint/t_cljs$pprint30417",-1485287686,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",new cljs.core.Keyword(null,"line","line",212345235),1922,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_cljs$pprint30417","t_cljs$pprint30417",-1363189631,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.pprint.t_cljs$pprint30417)?cljs.pprint.t_cljs$pprint30417.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"t_cljs$pprint29874"),new cljs.core.Var(function(){return cljs.pprint.t_cljs$pprint29874;},new cljs.core.Symbol("cljs.pprint","t_cljs$pprint29874","cljs.pprint/t_cljs$pprint29874",-2108117350,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",new cljs.core.Keyword(null,"line","line",212345235),189,new cljs.core.Keyword(null,"column","column",2078222095),6,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_cljs$pprint29874","t_cljs$pprint29874",-1686006623,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.pprint.t_cljs$pprint29874)?cljs.pprint.t_cljs$pprint29874.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"pprint"),new cljs.core.Var(function(){return cljs.pprint.pprint;},new cljs.core.Symbol("cljs.pprint","pprint","cljs.pprint/pprint",-1547147237,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"pprint","pprint",-1434237374,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",13,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"object","object",-1179821820,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"object","object",-1179821820,null),new cljs.core.Symbol(null,"writer","writer",1362963291,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"object","object",-1179821820,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"object","object",-1179821820,null),new cljs.core.Symbol(null,"writer","writer",1362963291,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,814,814,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"object","object",-1179821820,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"object","object",-1179821820,null),new cljs.core.Symbol(null,"writer","writer",1362963291,null)], null)),null,(cljs.core.truth_(cljs.pprint.pprint)?cljs.pprint.pprint.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"simple-dispatch"),new cljs.core.Var(function(){return cljs.pprint.simple_dispatch;},new cljs.core.Symbol("cljs.pprint","simple-dispatch","cljs.pprint/simple-dispatch",1591517689,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"simple-dispatch","simple-dispatch",623222658,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",26,1,2905,2905,cljs.core.List.EMPTY,"The pretty print dispatch function for simple data structure format.",(cljs.core.truth_(cljs.pprint.simple_dispatch)?cljs.pprint.simple_dispatch.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"get-pretty-writer"),new cljs.core.Var(function(){return cljs.pprint.get_pretty_writer;},new cljs.core.Symbol("cljs.pprint","get-pretty-writer","cljs.pprint/get-pretty-writer",-2019656662,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"get-pretty-writer","get-pretty-writer",-1905834397,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",24,1,2055,2055,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"writer","writer",1362963291,null)], null)),"Returns the IWriter passed in wrapped in a pretty writer proxy, unless it's\nalready a pretty writer. Generally, it is unnecessary to call this function, since pprint,\nwrite, and cl-format all call it if they need to. However if you want the state to be\npreserved across calls, you will want to wrap them with this.\n\nFor example, when you want to generate column-aware output with multiple calls to cl-format,\ndo it like in this example:\n\n    (defn print-table [aseq column-width]\n      (binding [*out* (get-pretty-writer *out*)]\n        (doseq [row aseq]\n          (doseq [col row]\n            (cl-format true \"~4D~7,vT\" col column-width))\n          (prn))))\n\nNow when you run:\n\n    user> (print-table (map #(vector % (* % %) (* % % %)) (range 1 11)) 8)\n\nIt prints a table of squares and cubes for the numbers from 1 to 10:\n\n       1      1       1\n       2      4       8\n       3      9      27\n       4     16      64\n       5     25     125\n       6     36     216\n       7     49     343\n       8     64     512\n       9     81     729\n      10    100    1000",(cljs.core.truth_(cljs.pprint.get_pretty_writer)?cljs.pprint.get_pretty_writer.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*print-suppress-namespaces*"),new cljs.core.Var(function(){return cljs.pprint._STAR_print_suppress_namespaces_STAR_;},new cljs.core.Symbol("cljs.pprint","*print-suppress-namespaces*","cljs.pprint/*print-suppress-namespaces*",1649488204,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.2",new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"*print-suppress-namespaces*","*print-suppress-namespaces*",1795828355,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",28,1,true,658,662,cljs.core.List.EMPTY,"Don't print namespaces with symbols. This is particularly useful when\npretty printing the results of macro expansions",(cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_)?cljs.pprint._STAR_print_suppress_namespaces_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"logical-block"),new cljs.core.Var(function(){return cljs.pprint.logical_block;},new cljs.core.Symbol("cljs.pprint","logical-block","cljs.pprint/logical-block",-971103062,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",new cljs.core.Keyword(null,"line","line",212345235),231,new cljs.core.Keyword(null,"column","column",2078222095),29,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"logical-block","logical-block",1059508963,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.pprint.logical_block)?cljs.pprint.logical_block.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"map->nl-t"),new cljs.core.Var(function(){return cljs.pprint.map__GT_nl_t;},new cljs.core.Symbol("cljs.pprint","map->nl-t","cljs.pprint/map->nl-t",-345266792,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"internal-ctor","internal-ctor",937392560),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"map->nl-t","map->nl-t",-195899485,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",14,1,true,new cljs.core.Keyword(null,"map","map",1371690461),254,254,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"G__29920","G__29920",390721842,null)], null)),"Factory function for cljs.pprint/nl-t, taking a map of keywords to field values.",(cljs.core.truth_(cljs.pprint.map__GT_nl_t)?cljs.pprint.map__GT_nl_t.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"char-code"),new cljs.core.Var(function(){return cljs.pprint.char_code;},new cljs.core.Symbol("cljs.pprint","char-code","cljs.pprint/char-code",-2021209987,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"char-code","char-code",-1900072444,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",16,1,63,63,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"c","c",-122660552,null)], null)),"Convert char to int",(cljs.core.truth_(cljs.pprint.char_code)?cljs.pprint.char_code.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"arg-navigator"),new cljs.core.Var(function(){return cljs.pprint.arg_navigator;},new cljs.core.Symbol("cljs.pprint","arg-navigator","cljs.pprint/arg-navigator",1512261827,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",new cljs.core.Keyword(null,"line","line",212345235),947,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"arg-navigator","arg-navigator",1660575364,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.pprint.arg_navigator)?cljs.pprint.arg_navigator.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*print-pretty*"),new cljs.core.Var(function(){return cljs.pprint._STAR_print_pretty_STAR_;},new cljs.core.Symbol("cljs.pprint","*print-pretty*","cljs.pprint/*print-pretty*",-762636861,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"*print-pretty*","*print-pretty*",726795140,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",16,1,true,616,618,cljs.core.List.EMPTY,"Bind to true if you want write to use pretty printing",(cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_)?cljs.pprint._STAR_print_pretty_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*print-pprint-dispatch*"),new cljs.core.Var(function(){return cljs.pprint._STAR_print_pprint_dispatch_STAR_;},new cljs.core.Symbol("cljs.pprint","*print-pprint-dispatch*","cljs.pprint/*print-pprint-dispatch*",-1820734013,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.2",new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"*print-pprint-dispatch*","*print-pprint-dispatch*",-1709114492,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",25,1,true,620,624,cljs.core.List.EMPTY,"The pretty print dispatch function. Use with-pprint-dispatch or\nset-pprint-dispatch to modify.",(cljs.core.truth_(cljs.pprint._STAR_print_pprint_dispatch_STAR_)?cljs.pprint._STAR_print_pprint_dispatch_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"start-block-t"),new cljs.core.Var(function(){return cljs.pprint.start_block_t;},new cljs.core.Symbol("cljs.pprint","start-block-t","cljs.pprint/start-block-t",1120486210,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",new cljs.core.Keyword(null,"line","line",212345235),256,new cljs.core.Keyword(null,"column","column",2078222095),10,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"start-block-t","start-block-t",1267100933,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.pprint.start_block_t)?cljs.pprint.start_block_t.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"nl-t"),new cljs.core.Var(function(){return cljs.pprint.nl_t;},new cljs.core.Symbol("cljs.pprint","nl-t","cljs.pprint/nl-t",-89287042,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",new cljs.core.Keyword(null,"line","line",212345235),254,new cljs.core.Keyword(null,"column","column",2078222095),10,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"nl-t","nl-t",32149413,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.pprint.nl_t)?cljs.pprint.nl_t.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"pprint-newline"),new cljs.core.Var(function(){return cljs.pprint.pprint_newline;},new cljs.core.Symbol("cljs.pprint","pprint-newline","cljs.pprint/pprint-newline",-896290881,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"pprint-newline","pprint-newline",-841697210,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",21,1,844,844,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"kind","kind",923265724,null)], null)),"Print a conditional newline to a pretty printing stream. kind specifies if the\n  newline is :linear, :miser, :fill, or :mandatory.\n\n  This function is intended for use when writing custom dispatch functions.\n\n  Output is sent to *out* which must be a pretty printing writer.",(cljs.core.truth_(cljs.pprint.pprint_newline)?cljs.pprint.pprint_newline.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"code-dispatch"),new cljs.core.Var(function(){return cljs.pprint.code_dispatch;},new cljs.core.Symbol("cljs.pprint","code-dispatch","cljs.pprint/code-dispatch",-423875137,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.2",new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"code-dispatch","code-dispatch",-511363514,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",16,1,3203,3204,cljs.core.List.EMPTY,"The pretty print dispatch function for pretty printing Clojure code.",(cljs.core.truth_(cljs.pprint.code_dispatch)?cljs.pprint.code_dispatch.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"end-block-t"),new cljs.core.Var(function(){return cljs.pprint.end_block_t;},new cljs.core.Symbol("cljs.pprint","end-block-t","cljs.pprint/end-block-t",-1298732961,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",new cljs.core.Keyword(null,"line","line",212345235),258,new cljs.core.Keyword(null,"column","column",2078222095),10,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"end-block-t","end-block-t",-1109787034,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.pprint.end_block_t)?cljs.pprint.end_block_t.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->t_cljs$pprint30423"),new cljs.core.Var(function(){return cljs.pprint.__GT_t_cljs$pprint30423;},new cljs.core.Symbol("cljs.pprint","->t_cljs$pprint30423","cljs.pprint/->t_cljs$pprint30423",-1078795346,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("cljs.core","IWriter","cljs.core/IWriter",-1282590490,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"->t_cljs$pprint30423","->t_cljs$pprint30423",-1191850521,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",true,3,new cljs.core.Keyword(null,"positional","positional",-203580463),1943,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"writer","writer",1362963291,null),new cljs.core.Symbol(null,"meta30424","meta30424",-2002839551,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("cljs.core","IWriter","cljs.core/IWriter",-1282590490,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for cljs.pprint/t_cljs$pprint30423.",(cljs.core.truth_(cljs.pprint.__GT_t_cljs$pprint30423)?cljs.pprint.__GT_t_cljs$pprint30423.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"t_cljs$pprint30429"),new cljs.core.Var(function(){return cljs.pprint.t_cljs$pprint30429;},new cljs.core.Symbol("cljs.pprint","t_cljs$pprint30429","cljs.pprint/t_cljs$pprint30429",-799064479,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",new cljs.core.Keyword(null,"line","line",212345235),1988,new cljs.core.Keyword(null,"column","column",2078222095),5,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_cljs$pprint30429","t_cljs$pprint30429",-661258200,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.pprint.t_cljs$pprint30429)?cljs.pprint.t_cljs$pprint30429.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->t_cljs$pprint30429"),new cljs.core.Var(function(){return cljs.pprint.__GT_t_cljs$pprint30429;},new cljs.core.Symbol("cljs.pprint","->t_cljs$pprint30429","cljs.pprint/->t_cljs$pprint30429",-616911887,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("cljs.core","IWriter","cljs.core/IWriter",-1282590490,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"->t_cljs$pprint30429","->t_cljs$pprint30429",-591176312,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",true,5,new cljs.core.Keyword(null,"positional","positional",-203580463),1988,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"writer","writer",1362963291,null),new cljs.core.Symbol(null,"last-was-whitespace?","last-was-whitespace?",-1073928093,null),new cljs.core.Symbol(null,"meta30430","meta30430",499118002,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("cljs.core","IWriter","cljs.core/IWriter",-1282590490,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for cljs.pprint/t_cljs$pprint30429.",(cljs.core.truth_(cljs.pprint.__GT_t_cljs$pprint30429)?cljs.pprint.__GT_t_cljs$pprint30429.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"float?"),new cljs.core.Var(function(){return cljs.pprint.float_QMARK_;},new cljs.core.Symbol("cljs.pprint","float?","cljs.pprint/float?",554811137,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"float?","float?",673884616,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",13,1,55,55,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Returns true if n is an float.",(cljs.core.truth_(cljs.pprint.float_QMARK_)?cljs.pprint.float_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"compiled-directive"),new cljs.core.Var(function(){return cljs.pprint.compiled_directive;},new cljs.core.Symbol("cljs.pprint","compiled-directive","cljs.pprint/compiled-directive",786817393,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",new cljs.core.Keyword(null,"line","line",212345235),991,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"compiled-directive","compiled-directive",1445123848,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.pprint.compiled_directive)?cljs.pprint.compiled_directive.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->t_cljs$pprint30417"),new cljs.core.Var(function(){return cljs.pprint.__GT_t_cljs$pprint30417;},new cljs.core.Symbol("cljs.pprint","->t_cljs$pprint30417","cljs.pprint/->t_cljs$pprint30417",791690946,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("cljs.core","IWriter","cljs.core/IWriter",-1282590490,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"->t_cljs$pprint30417","->t_cljs$pprint30417",644415627,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",true,3,new cljs.core.Keyword(null,"positional","positional",-203580463),1922,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"writer","writer",1362963291,null),new cljs.core.Symbol(null,"meta30418","meta30418",1325826267,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("cljs.core","IWriter","cljs.core/IWriter",-1282590490,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for cljs.pprint/t_cljs$pprint30417.",(cljs.core.truth_(cljs.pprint.__GT_t_cljs$pprint30417)?cljs.pprint.__GT_t_cljs$pprint30417.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"pprint-tab"),new cljs.core.Var(function(){return cljs.pprint.pprint_tab;},new cljs.core.Symbol("cljs.pprint","pprint-tab","cljs.pprint/pprint-tab",-481059340,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.2",new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"pprint-tab","pprint-tab",-66407379,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",17,1,869,869,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"kind","kind",923265724,null),new cljs.core.Symbol(null,"colnum","colnum",-630638915,null),new cljs.core.Symbol(null,"colinc","colinc",1055658142,null)], null)),"Tab at this point in the pretty printing stream. kind specifies whether the tab\nis :line, :section, :line-relative, or :section-relative.\n\nColnum and colinc specify the target column and the increment to move the target\nforward if the output is already past the original target.\n\nThis function is intended for use when writing custom dispatch functions.\n\nOutput is sent to *out* which must be a pretty printing writer.\n\nTHIS FUNCTION IS NOT YET IMPLEMENTED.",(cljs.core.truth_(cljs.pprint.pprint_tab)?cljs.pprint.pprint_tab.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->t_cljs$pprint30058"),new cljs.core.Var(function(){return cljs.pprint.__GT_t_cljs$pprint30058;},new cljs.core.Symbol("cljs.pprint","->t_cljs$pprint30058","cljs.pprint/->t_cljs$pprint30058",-830331287,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Symbol("cljs.core","IWriter","cljs.core/IWriter",-1282590490,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IDeref","cljs.core/IDeref",1331648568,null),"null",new cljs.core.Symbol("cljs.pprint","IPrettyFlush","cljs.pprint/IPrettyFlush",-1890322983,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"->t_cljs$pprint30058","->t_cljs$pprint30058",-981779026,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",true,5,new cljs.core.Keyword(null,"positional","positional",-203580463),510,cljs.core.list(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"writer","writer",1362963291,null),new cljs.core.Symbol(null,"max-columns","max-columns",-912112507,null),new cljs.core.Symbol(null,"miser-width","miser-width",330482090,null),new cljs.core.Symbol(null,"lb","lb",950310490,null),new cljs.core.Symbol(null,"fields","fields",-291534703,null),new cljs.core.Symbol(null,"meta30059","meta30059",143856261,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol("cljs.core","IWriter","cljs.core/IWriter",-1282590490,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IDeref","cljs.core/IDeref",1331648568,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for cljs.pprint/t_cljs$pprint30058.",(cljs.core.truth_(cljs.pprint.__GT_t_cljs$pprint30058)?cljs.pprint.__GT_t_cljs$pprint30058.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"pprint-set"),new cljs.core.Var(function(){return cljs.pprint.pprint_set;},new cljs.core.Symbol("cljs.pprint","pprint-set","cljs.pprint/pprint-set",-1762731483,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"pprint-set","pprint-set",-1349127186,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",16,1,2867,2867,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.pprint.pprint_set)?cljs.pprint.pprint_set.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->start-block-t"),new cljs.core.Var(function(){return cljs.pprint.__GT_start_block_t;},new cljs.core.Symbol("cljs.pprint","->start-block-t","cljs.pprint/->start-block-t",480344694,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"internal-ctor","internal-ctor",937392560),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"->start-block-t","->start-block-t",402145455,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",23,1,true,new cljs.core.Keyword(null,"positional","positional",-203580463),256,256,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type-tag","type-tag",-233331740,null),new cljs.core.Symbol(null,"logical-block","logical-block",1059508963,null),new cljs.core.Symbol(null,"start-pos","start-pos",-1985646683,null),new cljs.core.Symbol(null,"end-pos","end-pos",-3352399,null)], null)),"Positional factory function for cljs.pprint/start-block-t.",(cljs.core.truth_(cljs.pprint.__GT_start_block_t)?cljs.pprint.__GT_start_block_t.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"print-table"),new cljs.core.Var(function(){return cljs.pprint.print_table;},new cljs.core.Symbol("cljs.pprint","print-table","cljs.pprint/print-table",-1696208156,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.3",new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"print-table","print-table",-2093158225,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ks","ks",-754231827,null),new cljs.core.Symbol(null,"rows","rows",-1804386089,null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"rows","rows",-1804386089,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ks","ks",-754231827,null),new cljs.core.Symbol(null,"rows","rows",-1804386089,null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"rows","rows",-1804386089,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,3302,3302,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ks","ks",-754231827,null),new cljs.core.Symbol(null,"rows","rows",-1804386089,null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"rows","rows",-1804386089,null)], null)),"Prints a collection of maps in a textual table. Prints table headings\n   ks, and then a line of output for each row, corresponding to the keys\n   in ks. If ks are not specified, use the keys of the first item in rows.",(cljs.core.truth_(cljs.pprint.print_table)?cljs.pprint.print_table.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"set-pprint-dispatch"),new cljs.core.Var(function(){return cljs.pprint.set_pprint_dispatch;},new cljs.core.Symbol("cljs.pprint","set-pprint-dispatch","cljs.pprint/set-pprint-dispatch",-1197698588,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"set-pprint-dispatch","set-pprint-dispatch",-1547335761,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",26,1,827,827,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"function","function",-486723946,null)], null)),null,(cljs.core.truth_(cljs.pprint.set_pprint_dispatch)?cljs.pprint.set_pprint_dispatch.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"fresh-line"),new cljs.core.Var(function(){return cljs.pprint.fresh_line;},new cljs.core.Symbol("cljs.pprint","fresh-line","cljs.pprint/fresh-line",-1048356440,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"fresh-line","fresh-line",-620992529,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",17,1,2096,2096,cljs.core.list(cljs.core.PersistentVector.EMPTY),"Make a newline if *out* is not already at the beginning of the line. If *out* is\nnot a pretty writer (which keeps track of columns), this function always outputs a newline.",(cljs.core.truth_(cljs.pprint.fresh_line)?cljs.pprint.fresh_line.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"pprint-indent"),new cljs.core.Var(function(){return cljs.pprint.pprint_indent;},new cljs.core.Symbol("cljs.pprint","pprint-indent","cljs.pprint/pprint-indent",-1628472151,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"pprint-indent","pprint-indent",-2062129840,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",20,1,855,855,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"relative-to","relative-to",1170431476,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Create an indent at this point in the pretty printing stream. This defines how\nfollowing lines are indented. relative-to can be either :block or :current depending\nwhether the indent should be computed relative to the start of the logical block or\nthe current column position. n is an offset.\n\nThis function is intended for use when writing custom dispatch functions.\n\nOutput is sent to *out* which must be a pretty printing writer.",(cljs.core.truth_(cljs.pprint.pprint_indent)?cljs.pprint.pprint_indent.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"map->buffer-blob"),new cljs.core.Var(function(){return cljs.pprint.map__GT_buffer_blob;},new cljs.core.Symbol("cljs.pprint","map->buffer-blob","cljs.pprint/map->buffer-blob",-1435385863,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"internal-ctor","internal-ctor",937392560),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"map->buffer-blob","map->buffer-blob",-1522884176,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",21,1,true,new cljs.core.Keyword(null,"map","map",1371690461),251,251,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"G__29903","G__29903",2040744783,null)], null)),"Factory function for cljs.pprint/buffer-blob, taking a map of keywords to field values.",(cljs.core.truth_(cljs.pprint.map__GT_buffer_blob)?cljs.pprint.map__GT_buffer_blob.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*print-radix*"),new cljs.core.Var(function(){return cljs.pprint._STAR_print_radix_STAR_;},new cljs.core.Symbol("cljs.pprint","*print-radix*","cljs.pprint/*print-radix*",1558253641,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.2",new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"*print-radix*","*print-radix*",1168517744,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",14,1,true,666,671,cljs.core.List.EMPTY,"Print a radix specifier in front of integers and rationals. If *print-base* is 2, 8,\nor 16, then the radix specifier used is #b, #o, or #x, respectively. Otherwise the\nradix specifier is in the form #XXr where XX is the decimal value of *print-base* ",(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_)?cljs.pprint._STAR_print_radix_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"IPrettyFlush"),new cljs.core.Var(function(){return cljs.pprint.IPrettyFlush;},new cljs.core.Symbol("cljs.pprint","IPrettyFlush","cljs.pprint/IPrettyFlush",-1890322983,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol-symbol","protocol-symbol",1279552198),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"protocol-info","protocol-info",1471745843),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"sigs","sigs",-1653119622),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"jsdoc","jsdoc",1745183516),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"IPrettyFlush","IPrettyFlush",-160784496,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",26,1,145,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"methods","methods",453930866),new cljs.core.PersistentArrayMap(null, 1, [cljs.core.with_meta(new cljs.core.Symbol(null,"-ppflush","-ppflush",1004696281,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),null], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pp","pp",927842543,null)], null)], null)], null)], null),145,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"-ppflush","-ppflush",-635835246),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"-ppflush","-ppflush",1004696281,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pp","pp",927842543,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),null], null)], null),cljs.core.List.EMPTY,null,cljs.core.list("@interface"),(cljs.core.truth_(cljs.pprint.IPrettyFlush)?cljs.pprint.IPrettyFlush.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"t_cljs$pprint30423"),new cljs.core.Var(function(){return cljs.pprint.t_cljs$pprint30423;},new cljs.core.Symbol("cljs.pprint","t_cljs$pprint30423","cljs.pprint/t_cljs$pprint30423",-732557368,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",new cljs.core.Keyword(null,"line","line",212345235),1943,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_cljs$pprint30423","t_cljs$pprint30423",-821095951,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.pprint.t_cljs$pprint30423)?cljs.pprint.t_cljs$pprint30423.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"cl-format"),new cljs.core.Var(function(){return cljs.pprint.cl_format;},new cljs.core.Symbol("cljs.pprint","cl-format","cljs.pprint/cl-format",-1100272469,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"see-also","see-also",330781627),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"cl-format","cl-format",-1229847214,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",16,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"writer","writer",1362963291,null),new cljs.core.Symbol(null,"format-in","format-in",-833774677,null),new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"writer","writer",1362963291,null),new cljs.core.Symbol(null,"format-in","format-in",-833774677,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,896,896,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"writer","writer",1362963291,null),new cljs.core.Symbol(null,"format-in","format-in",-833774677,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["http://www.cs.cmu.edu/afs/cs.cmu.edu/project/ai-repository/ai/html/cltl/clm/node200.html#SECTION002633000000000000000","Common Lisp the Language"], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["http://www.lispworks.com/documentation/HyperSpec/Body/22_c.htm","Common Lisp HyperSpec"], null)], null),"An implementation of a Common Lisp compatible format function. cl-format formats its\narguments to an output stream or string based on the format control string given. It\nsupports sophisticated formatting of structured data.\n\nWriter satisfies IWriter, true to output via *print-fn* or nil to output\nto a string, format-in is the format control string and the remaining arguments\nare the data to be formatted.\n\nThe format control string is a string to be output with embedded 'format directives'\ndescribing how to format the various arguments passed in.\n\nIf writer is nil, cl-format returns the formatted result string. Otherwise, cl-format\nreturns nil.\n\nFor example:\n (let [results [46 38 22]]\n        (cl-format true \"There ~[are~;is~:;are~]~:* ~d result~:p: ~{~d~^, ~}~%\"\n                   (count results) results))\n\nPrints via *print-fn*:\n There are 3 results: 46, 38, 22\n\nDetailed documentation on format control strings is available in the \"Common Lisp the\nLanguage, 2nd edition\", Chapter 22 (available online at:\nhttp://www.cs.cmu.edu/afs/cs.cmu.edu/project/ai-repository/ai/html/cltl/clm/node200.html#SECTION002633000000000000000)\nand in the Common Lisp HyperSpec at\nhttp://www.lispworks.com/documentation/HyperSpec/Body/22_c.htm",(cljs.core.truth_(cljs.pprint.cl_format)?cljs.pprint.cl_format.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"directive-table"),new cljs.core.Var(function(){return cljs.pprint.directive_table;},new cljs.core.Symbol("cljs.pprint","directive-table","cljs.pprint/directive-table",-1138257669,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),2167,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"directive-table","directive-table",-1558673742,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.pprint.directive_table)?cljs.pprint.directive_table.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->nl-t"),new cljs.core.Var(function(){return cljs.pprint.__GT_nl_t;},new cljs.core.Symbol("cljs.pprint","->nl-t","cljs.pprint/->nl-t",-634978275,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"internal-ctor","internal-ctor",937392560),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"->nl-t","->nl-t",-756139310,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",14,1,true,new cljs.core.Keyword(null,"positional","positional",-203580463),254,254,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type-tag","type-tag",-233331740,null),new cljs.core.Symbol(null,"type","type",-1480165421,null),new cljs.core.Symbol(null,"logical-block","logical-block",1059508963,null),new cljs.core.Symbol(null,"start-pos","start-pos",-1985646683,null),new cljs.core.Symbol(null,"end-pos","end-pos",-3352399,null)], null)),"Positional factory function for cljs.pprint/nl-t.",(cljs.core.truth_(cljs.pprint.__GT_nl_t)?cljs.pprint.__GT_nl_t.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"t_cljs$pprint30058"),new cljs.core.Var(function(){return cljs.pprint.t_cljs$pprint30058;},new cljs.core.Symbol("cljs.pprint","t_cljs$pprint30058","cljs.pprint/t_cljs$pprint30058",-1169900343,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",new cljs.core.Keyword(null,"line","line",212345235),510,new cljs.core.Keyword(null,"column","column",2078222095),5,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_cljs$pprint30058","t_cljs$pprint30058",-1281521902,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.pprint.t_cljs$pprint30058)?cljs.pprint.t_cljs$pprint30058.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->buffer-blob"),new cljs.core.Var(function(){return cljs.pprint.__GT_buffer_blob;},new cljs.core.Symbol("cljs.pprint","->buffer-blob","cljs.pprint/->buffer-blob",-1635964838,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"internal-ctor","internal-ctor",937392560),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"->buffer-blob","->buffer-blob",-1759358445,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",21,1,true,new cljs.core.Keyword(null,"positional","positional",-203580463),251,251,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type-tag","type-tag",-233331740,null),new cljs.core.Symbol(null,"data","data",1407862150,null),new cljs.core.Symbol(null,"trailing-white-space","trailing-white-space",-1158428773,null),new cljs.core.Symbol(null,"start-pos","start-pos",-1985646683,null),new cljs.core.Symbol(null,"end-pos","end-pos",-3352399,null)], null)),"Positional factory function for cljs.pprint/buffer-blob.",(cljs.core.truth_(cljs.pprint.__GT_buffer_blob)?cljs.pprint.__GT_buffer_blob.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"map->end-block-t"),new cljs.core.Var(function(){return cljs.pprint.map__GT_end_block_t;},new cljs.core.Symbol("cljs.pprint","map->end-block-t","cljs.pprint/map->end-block-t",903938056,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"internal-ctor","internal-ctor",937392560),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"map->end-block-t","map->end-block-t",1294346835,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",21,1,true,new cljs.core.Keyword(null,"map","map",1371690461),258,258,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"G__29954","G__29954",-182423315,null)], null)),"Factory function for cljs.pprint/end-block-t, taking a map of keywords to field values.",(cljs.core.truth_(cljs.pprint.map__GT_end_block_t)?cljs.pprint.map__GT_end_block_t.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"map->start-block-t"),new cljs.core.Var(function(){return cljs.pprint.map__GT_start_block_t;},new cljs.core.Symbol("cljs.pprint","map->start-block-t","cljs.pprint/map->start-block-t",268005770,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"internal-ctor","internal-ctor",937392560),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"map->start-block-t","map->start-block-t",344330163,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",23,1,true,new cljs.core.Keyword(null,"map","map",1371690461),256,256,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"G__29937","G__29937",-835729502,null)], null)),"Factory function for cljs.pprint/start-block-t, taking a map of keywords to field values.",(cljs.core.truth_(cljs.pprint.map__GT_start_block_t)?cljs.pprint.map__GT_start_block_t.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*print-miser-width*"),new cljs.core.Var(function(){return cljs.pprint._STAR_print_miser_width_STAR_;},new cljs.core.Symbol("cljs.pprint","*print-miser-width*","cljs.pprint/*print-miser-width*",1588913450,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.2",new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"*print-miser-width*","*print-miser-width*",1206624211,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",21,1,true,633,638,cljs.core.List.EMPTY,"The column at which to enter miser style. Depending on the dispatch table,\nmiser style add newlines in more places to try to keep lines short allowing for further\nlevels of nesting.",(cljs.core.truth_(cljs.pprint._STAR_print_miser_width_STAR_)?cljs.pprint._STAR_print_miser_width_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->end-block-t"),new cljs.core.Var(function(){return cljs.pprint.__GT_end_block_t;},new cljs.core.Symbol("cljs.pprint","->end-block-t","cljs.pprint/->end-block-t",-471753075,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"internal-ctor","internal-ctor",937392560),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"->end-block-t","->end-block-t",-457247532,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",21,1,true,new cljs.core.Keyword(null,"positional","positional",-203580463),258,258,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type-tag","type-tag",-233331740,null),new cljs.core.Symbol(null,"logical-block","logical-block",1059508963,null),new cljs.core.Symbol(null,"start-pos","start-pos",-1985646683,null),new cljs.core.Symbol(null,"end-pos","end-pos",-3352399,null)], null)),"Positional factory function for cljs.pprint/end-block-t.",(cljs.core.truth_(cljs.pprint.__GT_end_block_t)?cljs.pprint.__GT_end_block_t.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"t_cljs$pprint30435"),new cljs.core.Var(function(){return cljs.pprint.t_cljs$pprint30435;},new cljs.core.Symbol("cljs.pprint","t_cljs$pprint30435","cljs.pprint/t_cljs$pprint30435",594328691,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",new cljs.core.Keyword(null,"line","line",212345235),2014,new cljs.core.Keyword(null,"column","column",2078222095),5,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_cljs$pprint30435","t_cljs$pprint30435",1513597620,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.pprint.t_cljs$pprint30435)?cljs.pprint.t_cljs$pprint30435.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"write"),new cljs.core.Var(function(){return cljs.pprint.write;},new cljs.core.Symbol("cljs.pprint","write","cljs.pprint/write",-196844020,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"write","write",-217117641,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",12,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"object","object",-1179821820,null),new cljs.core.Symbol(null,"kw-args","kw-args",-950901690,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"object","object",-1179821820,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"kw-args","kw-args",-950901690,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,751,751,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"object","object",-1179821820,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"kw-args","kw-args",-950901690,null)], null)),"Write an object subject to the current bindings of the printer control variables.\nUse the kw-args argument to override individual variables for this call (and any\nrecursive calls). Returns the string result if :stream is nil or nil otherwise.\n\nThe following keyword arguments can be passed with values:\n  Keyword              Meaning                              Default value\n  :stream              Writer for output or nil             true (indicates *out*)\n  :base                Base to use for writing rationals    Current value of *print-base*\n  :circle*             If true, mark circular structures    Current value of *print-circle*\n  :length              Maximum elements to show in sublists Current value of *print-length*\n  :level               Maximum depth                        Current value of *print-level*\n  :lines*              Maximum lines of output              Current value of *print-lines*\n  :miser-width         Width to enter miser mode            Current value of *print-miser-width*\n  :dispatch            The pretty print dispatch function   Current value of *print-pprint-dispatch*\n  :pretty              If true, do pretty printing          Current value of *print-pretty*\n  :radix               If true, prepend a radix specifier   Current value of *print-radix*\n  :readably*           If true, print readably              Current value of *print-readably*\n  :right-margin        The column for the right margin      Current value of *print-right-margin*\n  :suppress-namespaces If true, no namespaces in symbols    Current value of *print-suppress-namespaces*\n\n  * = not yet supported\n",(cljs.core.truth_(cljs.pprint.write)?cljs.pprint.write.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->t_cljs$pprint30435"),new cljs.core.Var(function(){return cljs.pprint.__GT_t_cljs$pprint30435;},new cljs.core.Symbol("cljs.pprint","->t_cljs$pprint30435","cljs.pprint/->t_cljs$pprint30435",384480775,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("cljs.core","IWriter","cljs.core/IWriter",-1282590490,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"->t_cljs$pprint30435","->t_cljs$pprint30435",430293080,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",true,5,new cljs.core.Keyword(null,"positional","positional",-203580463),2014,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"writer","writer",1362963291,null),new cljs.core.Symbol(null,"capped","capped",-1650988402,null),new cljs.core.Symbol(null,"meta30436","meta30436",-624282976,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("cljs.core","IWriter","cljs.core/IWriter",-1282590490,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for cljs.pprint/t_cljs$pprint30435.",(cljs.core.truth_(cljs.pprint.__GT_t_cljs$pprint30435)?cljs.pprint.__GT_t_cljs$pprint30435.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->indent-t"),new cljs.core.Var(function(){return cljs.pprint.__GT_indent_t;},new cljs.core.Symbol("cljs.pprint","->indent-t","cljs.pprint/->indent-t",-139346255,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"internal-ctor","internal-ctor",937392560),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"->indent-t","->indent-t",-59091720,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",18,1,true,new cljs.core.Keyword(null,"positional","positional",-203580463),260,260,cljs.core.list(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type-tag","type-tag",-233331740,null),new cljs.core.Symbol(null,"logical-block","logical-block",1059508963,null),new cljs.core.Symbol(null,"relative-to","relative-to",1170431476,null),new cljs.core.Symbol(null,"offset","offset",1937029838,null),new cljs.core.Symbol(null,"start-pos","start-pos",-1985646683,null),new cljs.core.Symbol(null,"end-pos","end-pos",-3352399,null)], null)),"Positional factory function for cljs.pprint/indent-t.",(cljs.core.truth_(cljs.pprint.__GT_indent_t)?cljs.pprint.__GT_indent_t.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"-ppflush"),new cljs.core.Var(function(){return cljs.pprint._ppflush;},new cljs.core.Symbol("cljs.pprint","-ppflush","cljs.pprint/-ppflush",-1019520880,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("cljs.pprint","IPrettyFlush","cljs.pprint/IPrettyFlush",-1890322983,null),new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"-ppflush","-ppflush",1004696281,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",12,1,145,146,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pp","pp",927842543,null)], null)),null,(cljs.core.truth_(cljs.pprint._ppflush)?cljs.pprint._ppflush.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*print-right-margin*"),new cljs.core.Var(function(){return cljs.pprint._STAR_print_right_margin_STAR_;},new cljs.core.Symbol("cljs.pprint","*print-right-margin*","cljs.pprint/*print-right-margin*",-56183119,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.2",new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"*print-right-margin*","*print-right-margin*",-437272454,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",22,1,true,626,631,cljs.core.List.EMPTY,"Pretty printing will try to avoid anything going beyond this column.\nSet it to nil to have pprint let the line be arbitrarily long. This will ignore all\nnon-mandatory newlines.",(cljs.core.truth_(cljs.pprint._STAR_print_right_margin_STAR_)?cljs.pprint._STAR_print_right_margin_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"map->indent-t"),new cljs.core.Var(function(){return cljs.pprint.map__GT_indent_t;},new cljs.core.Symbol("cljs.pprint","map->indent-t","cljs.pprint/map->indent-t",-1896477787,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"internal-ctor","internal-ctor",937392560),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"map->indent-t","map->indent-t",-2042682886,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",18,1,true,new cljs.core.Keyword(null,"map","map",1371690461),260,260,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"G__29971","G__29971",-24987299,null)], null)),"Factory function for cljs.pprint/indent-t, taking a map of keywords to field values.",(cljs.core.truth_(cljs.pprint.map__GT_indent_t)?cljs.pprint.map__GT_indent_t.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"buffer-blob"),new cljs.core.Var(function(){return cljs.pprint.buffer_blob;},new cljs.core.Symbol("cljs.pprint","buffer-blob","cljs.pprint/buffer-blob",-813154235,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",new cljs.core.Keyword(null,"line","line",212345235),251,new cljs.core.Keyword(null,"column","column",2078222095),10,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"buffer-blob","buffer-blob",-189580646,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.pprint.buffer_blob)?cljs.pprint.buffer_blob.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"write-out"),new cljs.core.Var(function(){return cljs.pprint.write_out;},new cljs.core.Symbol("cljs.pprint","write-out","cljs.pprint/write-out",-338269326,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"write-out","write-out",-258400837,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",16,1,727,727,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"object","object",-1179821820,null)], null)),"Write an object to *out* subject to the current bindings of the printer control\nvariables. Use the kw-args argument to override individual variables for this call (and\nany recursive calls).\n\n*out* must be a PrettyWriter if pretty printing is enabled. This is the responsibility\nof the caller.\n\nThis method is primarily intended for use by pretty print dispatch functions that\nalready know that the pretty printer will have set up their environment appropriately.\nNormal library clients should use the standard \"write\" interface. ",(cljs.core.truth_(cljs.pprint.write_out)?cljs.pprint.write_out.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->t_cljs$pprint29874"),new cljs.core.Var(function(){return cljs.pprint.__GT_t_cljs$pprint29874;},new cljs.core.Symbol("cljs.pprint","->t_cljs$pprint29874","cljs.pprint/->t_cljs$pprint29874",703505716,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol("cljs.core","IWriter","cljs.core/IWriter",-1282590490,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IDeref","cljs.core/IDeref",1331648568,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"->t_cljs$pprint29874","->t_cljs$pprint29874",816155389,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",true,6,new cljs.core.Keyword(null,"positional","positional",-203580463),189,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"writer","writer",1362963291,null),new cljs.core.Symbol(null,"max-columns","max-columns",-912112507,null),new cljs.core.Symbol(null,"fields","fields",-291534703,null),new cljs.core.Symbol(null,"meta29875","meta29875",-693320818,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol("cljs.core","IWriter","cljs.core/IWriter",-1282590490,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IDeref","cljs.core/IDeref",1331648568,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for cljs.pprint/t_cljs$pprint29874.",(cljs.core.truth_(cljs.pprint.__GT_t_cljs$pprint29874)?cljs.pprint.__GT_t_cljs$pprint29874.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*print-base*"),new cljs.core.Var(function(){return cljs.pprint._STAR_print_base_STAR_;},new cljs.core.Symbol("cljs.pprint","*print-base*","cljs.pprint/*print-base*",1887526790,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.2",new cljs.core.Symbol(null,"cljs.pprint","cljs.pprint",-966900911,null),new cljs.core.Symbol(null,"*print-base*","*print-base*",2037937791,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/pprint.cljs",13,1,true,673,676,cljs.core.List.EMPTY,"The base to use for printing integers and rationals.",(cljs.core.truth_(cljs.pprint._STAR_print_base_STAR_)?cljs.pprint._STAR_print_base_STAR_.cljs$lang$test:null)]))], null)], true))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"cljs.stacktrace","cljs.stacktrace",880035689,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"output-directory"),new cljs.core.Var(function(){return cljs.stacktrace.output_directory;},new cljs.core.Symbol("cljs.stacktrace","output-directory","cljs.stacktrace/output-directory",-1836127815,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.stacktrace","cljs.stacktrace",880035689,null),new cljs.core.Symbol(null,"output-directory","output-directory",519253088,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/stacktrace.cljc",23,1,53,53,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),null,(cljs.core.truth_(cljs.stacktrace.output_directory)?cljs.stacktrace.output_directory.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ends-with?"),new cljs.core.Var(function(){return cljs.stacktrace.ends_with_QMARK_;},new cljs.core.Symbol("cljs.stacktrace","ends-with?","cljs.stacktrace/ends-with?",1867023977,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.stacktrace","cljs.stacktrace",880035689,null),new cljs.core.Symbol(null,"ends-with?","ends-with?",-346570208,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/stacktrace.cljc",17,1,43,43,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,"s0","s0",1289819691,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"String","String",-2070057435,null)], null)),new cljs.core.Symbol(null,"s1","s1",338671490,null)], null)),null,((cljs.stacktrace.ends_with_QMARK_)?cljs.stacktrace.ends_with_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"starts-with?"),new cljs.core.Var(function(){return cljs.stacktrace.starts_with_QMARK_;},new cljs.core.Symbol("cljs.stacktrace","starts-with?","cljs.stacktrace/starts-with?",-1335995232,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.stacktrace","cljs.stacktrace",880035689,null),new cljs.core.Symbol(null,"starts-with?","starts-with?",1014173927,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/stacktrace.cljc",19,1,37,37,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,"s0","s0",1289819691,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"String","String",-2070057435,null)], null)),new cljs.core.Symbol(null,"s1","s1",338671490,null)], null)),null,((cljs.stacktrace.starts_with_QMARK_)?cljs.stacktrace.starts_with_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"remove-ext"),new cljs.core.Var(function(){return cljs.stacktrace.remove_ext;},new cljs.core.Symbol("cljs.stacktrace","remove-ext","cljs.stacktrace/remove-ext",717546494,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.stacktrace","cljs.stacktrace",880035689,null),new cljs.core.Symbol(null,"remove-ext","remove-ext",-1456853241,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/stacktrace.cljc",17,1,443,443,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"file","file",370885649,null)], null)),null,(cljs.core.truth_(cljs.stacktrace.remove_ext)?cljs.stacktrace.remove_ext.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"string->regex"),new cljs.core.Var(function(){return cljs.stacktrace.string__GT_regex;},new cljs.core.Symbol("cljs.stacktrace","string->regex","cljs.stacktrace/string->regex",-51792873,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.stacktrace","cljs.stacktrace",880035689,null),new cljs.core.Symbol(null,"string->regex","string->regex",1891922088,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/stacktrace.cljc",20,1,49,49,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),null,(cljs.core.truth_(cljs.stacktrace.string__GT_regex)?cljs.stacktrace.string__GT_regex.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"safari-st-el->frame"),new cljs.core.Var(function(){return cljs.stacktrace.safari_st_el__GT_frame;},new cljs.core.Symbol("cljs.stacktrace","safari-st-el->frame","cljs.stacktrace/safari-st-el->frame",-625630752,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.stacktrace","cljs.stacktrace",880035689,null),new cljs.core.Symbol(null,"safari-st-el->frame","safari-st-el->frame",1184818217,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/stacktrace.cljc",26,1,212,212,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"repl-env","repl-env",-335972401,null),new cljs.core.Symbol(null,"st-el","st-el",1513767801,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),null,(cljs.core.truth_(cljs.stacktrace.safari_st_el__GT_frame)?cljs.stacktrace.safari_st_el__GT_frame.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"mapped-frame"),new cljs.core.Var(function(){return cljs.stacktrace.mapped_frame;},new cljs.core.Symbol("cljs.stacktrace","mapped-frame","cljs.stacktrace/mapped-frame",1961186498,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.stacktrace","cljs.stacktrace",880035689,null),new cljs.core.Symbol(null,"mapped-frame","mapped-frame",-253781879,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/stacktrace.cljc",19,1,471,471,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"function","function",-486723946,null),new cljs.core.Symbol(null,"file","file",370885649,null),new cljs.core.Symbol(null,"line","line",1852876762,null),new cljs.core.Symbol(null,"column","column",-576213674,null)], null)], null),new cljs.core.Symbol(null,"sms","sms",-812924355,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),"Given opts and a canonicalized JavaScript stacktrace frame, return the\n  ClojureScript frame.",(cljs.core.truth_(cljs.stacktrace.mapped_frame)?cljs.stacktrace.mapped_frame.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"firefox-st-el->frame"),new cljs.core.Var(function(){return cljs.stacktrace.firefox_st_el__GT_frame;},new cljs.core.Symbol("cljs.stacktrace","firefox-st-el->frame","cljs.stacktrace/firefox-st-el->frame",671684194,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.stacktrace","cljs.stacktrace",880035689,null),new cljs.core.Symbol(null,"firefox-st-el->frame","firefox-st-el->frame",-1272174039,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/stacktrace.cljc",27,1,306,306,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"repl-env","repl-env",-335972401,null),new cljs.core.Symbol(null,"st-el","st-el",1513767801,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),null,(cljs.core.truth_(cljs.stacktrace.firefox_st_el__GT_frame)?cljs.stacktrace.firefox_st_el__GT_frame.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"firefox-clean-function"),new cljs.core.Var(function(){return cljs.stacktrace.firefox_clean_function;},new cljs.core.Symbol("cljs.stacktrace","firefox-clean-function","cljs.stacktrace/firefox-clean-function",1426688551,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.stacktrace","cljs.stacktrace",880035689,null),new cljs.core.Symbol(null,"firefox-clean-function","firefox-clean-function",-689645972,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/stacktrace.cljc",29,1,294,294,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null)),null,(cljs.core.truth_(cljs.stacktrace.firefox_clean_function)?cljs.stacktrace.firefox_clean_function.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"chrome-st-el->frame"),new cljs.core.Var(function(){return cljs.stacktrace.chrome_st_el__GT_frame;},new cljs.core.Symbol("cljs.stacktrace","chrome-st-el->frame","cljs.stacktrace/chrome-st-el->frame",-585463693,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.stacktrace","cljs.stacktrace",880035689,null),new cljs.core.Symbol(null,"chrome-st-el->frame","chrome-st-el->frame",1497320500,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/stacktrace.cljc",26,1,111,111,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"repl-env","repl-env",-335972401,null),new cljs.core.Symbol(null,"st-el","st-el",1513767801,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),null,(cljs.core.truth_(cljs.stacktrace.chrome_st_el__GT_frame)?cljs.stacktrace.chrome_st_el__GT_frame.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"mapped-line-column-call"),new cljs.core.Var(function(){return cljs.stacktrace.mapped_line_column_call;},new cljs.core.Symbol("cljs.stacktrace","mapped-line-column-call","cljs.stacktrace/mapped-line-column-call",-1790416913,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.stacktrace","cljs.stacktrace",880035689,null),new cljs.core.Symbol(null,"mapped-line-column-call","mapped-line-column-call",424848148,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/stacktrace.cljc",30,1,450,450,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sms","sms",-812924355,null),new cljs.core.Symbol(null,"file","file",370885649,null),new cljs.core.Symbol(null,"line","line",1852876762,null),new cljs.core.Symbol(null,"column","column",-576213674,null)], null)),"Given a cljs.source-map source map data structure map a generated line\n   and column back to the original line, column, and function called.",(cljs.core.truth_(cljs.stacktrace.mapped_line_column_call)?cljs.stacktrace.mapped_line_column_call.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"mapped-stacktrace-str"),new cljs.core.Var(function(){return cljs.stacktrace.mapped_stacktrace_str;},new cljs.core.Symbol("cljs.stacktrace","mapped-stacktrace-str","cljs.stacktrace/mapped-stacktrace-str",942451566,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.stacktrace","cljs.stacktrace",880035689,null),new cljs.core.Symbol(null,"mapped-stacktrace-str","mapped-stacktrace-str",-1128108395,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/stacktrace.cljc",28,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"stacktrace","stacktrace",1544943133,null),new cljs.core.Symbol(null,"sms","sms",-812924355,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"stacktrace","stacktrace",1544943133,null),new cljs.core.Symbol(null,"sms","sms",-812924355,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"stacktrace","stacktrace",1544943133,null),new cljs.core.Symbol(null,"sms","sms",-812924355,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"stacktrace","stacktrace",1544943133,null),new cljs.core.Symbol(null,"sms","sms",-812924355,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,528,528,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"stacktrace","stacktrace",1544943133,null),new cljs.core.Symbol(null,"sms","sms",-812924355,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"stacktrace","stacktrace",1544943133,null),new cljs.core.Symbol(null,"sms","sms",-812924355,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),"Given a vector representing the canonicalized JavaScript stacktrace and a map\n  of library names to decoded source maps, print the ClojureScript stacktrace .\n  See mapped-stacktrace.",(cljs.core.truth_(cljs.stacktrace.mapped_stacktrace_str)?cljs.stacktrace.mapped_stacktrace_str.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"mapped-stacktrace"),new cljs.core.Var(function(){return cljs.stacktrace.mapped_stacktrace;},new cljs.core.Symbol("cljs.stacktrace","mapped-stacktrace","cljs.stacktrace/mapped-stacktrace",-1371911053,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.stacktrace","cljs.stacktrace",880035689,null),new cljs.core.Symbol(null,"mapped-stacktrace","mapped-stacktrace",710346810,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/stacktrace.cljc",24,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"stacktrace","stacktrace",1544943133,null),new cljs.core.Symbol(null,"sms","sms",-812924355,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"stacktrace","stacktrace",1544943133,null),new cljs.core.Symbol(null,"sms","sms",-812924355,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"stacktrace","stacktrace",1544943133,null),new cljs.core.Symbol(null,"sms","sms",-812924355,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"stacktrace","stacktrace",1544943133,null),new cljs.core.Symbol(null,"sms","sms",-812924355,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,491,491,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"stacktrace","stacktrace",1544943133,null),new cljs.core.Symbol(null,"sms","sms",-812924355,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"stacktrace","stacktrace",1544943133,null),new cljs.core.Symbol(null,"sms","sms",-812924355,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),"Given a vector representing the canonicalized JavaScript stacktrace\n   return the ClojureScript stacktrace. The canonical stacktrace must be\n   in the form:\n\n    [{:file <string>\n      :function <string>\n      :line <integer>\n      :column <integer>}*]\n\n   :file must be a URL path (without protocol) relative to :output-dir or a\n   identifier delimited by angle brackets. The returned mapped stacktrace will\n   also contain :url entries to the original sources if it can be determined\n   from the classpath.",(cljs.core.truth_(cljs.stacktrace.mapped_stacktrace)?cljs.stacktrace.mapped_stacktrace.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"parse-stacktrace"),new cljs.core.Var(function(){return cljs.stacktrace.parse_stacktrace;},new cljs.core.Symbol("cljs.stacktrace","parse-stacktrace","cljs.stacktrace/parse-stacktrace",-474316893,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.stacktrace","cljs.stacktrace",880035689,null),new cljs.core.Symbol(null,"parse-stacktrace","parse-stacktrace",1602323066,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/stacktrace.cljc",27,1,17,17,cljs.core.List.EMPTY,"Parse a JavaScript stacktrace string into a canonical data form. The\n  arguments:\n\n  repl-env - the repl environment, an optional map with :host and :port keys\n             if the stacktrace includes url, not file references\n  st       - the original stacktrace string to parse\n  err      - an error map. :ua-product key defines the type of stacktrace parser\n             to use, for example :chrome\n  opts     - additional options. :output-dir maybe given in this argument if\n             :host and :port do not apply, for example, a file path\n\n  The canonical stacktrace representation can easily be mapped to a\n  ClojureScript one see mapped-stacktrace and mapped-stacktrace-str",(cljs.core.truth_(cljs.stacktrace.parse_stacktrace)?cljs.stacktrace.parse_stacktrace.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"parse-int"),new cljs.core.Var(function(){return cljs.stacktrace.parse_int;},new cljs.core.Symbol("cljs.stacktrace","parse-int","cljs.stacktrace/parse-int",1876846434,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.stacktrace","cljs.stacktrace",880035689,null),new cljs.core.Symbol(null,"parse-int","parse-int",-742710469,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/stacktrace.cljc",16,1,33,33,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),null,(cljs.core.truth_(cljs.stacktrace.parse_int)?cljs.stacktrace.parse_int.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"parse-file"),new cljs.core.Var(function(){return cljs.stacktrace.parse_file;},new cljs.core.Symbol("cljs.stacktrace","parse-file","cljs.stacktrace/parse-file",-37266827,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.stacktrace","cljs.stacktrace",880035689,null),new cljs.core.Symbol(null,"parse-file","parse-file",-2119557570,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/stacktrace.cljc",17,1,81,81,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"host","host",82046360,null),new cljs.core.Symbol(null,"host-port","host-port",-697883997,null),new cljs.core.Symbol(null,"port","port",-1119498507,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"repl-env","repl-env",-335972401,null)], null),new cljs.core.Symbol(null,"file","file",370885649,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"asset-path","asset-path",-1153546152,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null)),"Given a browser file url convert it into a relative path that can be used\n   to locate the original source.",(cljs.core.truth_(cljs.stacktrace.parse_file)?cljs.stacktrace.parse_file.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"parse-file-line-column"),new cljs.core.Var(function(){return cljs.stacktrace.parse_file_line_column;},new cljs.core.Symbol("cljs.stacktrace","parse-file-line-column","cljs.stacktrace/parse-file-line-column",1131191286,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.stacktrace","cljs.stacktrace",880035689,null),new cljs.core.Symbol(null,"parse-file-line-column","parse-file-line-column",-951462337,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/stacktrace.cljc",29,1,60,60,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"flc","flc",-667071030,null)], null)),null,(cljs.core.truth_(cljs.stacktrace.parse_file_line_column)?cljs.stacktrace.parse_file_line_column.cljs$lang$test:null)]))], null)], null))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"cljs.reader","cljs.reader",1327473948,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*default-data-reader-fn*"),new cljs.core.Var(function(){return cljs.reader._STAR_default_data_reader_fn_STAR_;},new cljs.core.Symbol("cljs.reader","*default-data-reader-fn*","cljs.reader/*default-data-reader-fn*",548166570,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.reader","cljs.reader",1327473948,null),new cljs.core.Symbol(null,"*default-data-reader-fn*","*default-data-reader-fn*",758795499,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/reader.cljs",40,1,true,131,131,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.reader._STAR_default_data_reader_fn_STAR_)?cljs.reader._STAR_default_data_reader_fn_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"read"),new cljs.core.Var(function(){return cljs.reader.read;},new cljs.core.Symbol("cljs.reader","read","cljs.reader/read",-1188148435,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.reader","cljs.reader",1327473948,null),new cljs.core.Symbol(null,"read","read",-1514377108,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/reader.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),4,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),4,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"reader","reader",1810192380,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"eof","eof",1151468290,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null),new cljs.core.Symbol(null,"reader","reader",1810192380,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"reader","reader",1810192380,null),new cljs.core.Symbol(null,"eof-error?","eof-error?",863128689,null),new cljs.core.Symbol(null,"eof","eof",1151468290,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"reader","reader",1810192380,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"eof","eof",1151468290,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null),new cljs.core.Symbol(null,"reader","reader",1810192380,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"reader","reader",1810192380,null),new cljs.core.Symbol(null,"eof-error?","eof-error?",863128689,null),new cljs.core.Symbol(null,"eof","eof",1151468290,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,142,142,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"reader","reader",1810192380,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"eof","eof",1151468290,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null),new cljs.core.Symbol(null,"reader","reader",1810192380,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"reader","reader",1810192380,null),new cljs.core.Symbol(null,"eof-error?","eof-error?",863128689,null),new cljs.core.Symbol(null,"eof","eof",1151468290,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),"Reads the first object from an cljs.tools.reader.reader-types/IPushbackReader.\n   Returns the object read. If EOF, throws if eof-error? is true otherwise returns eof.\n   If no reader is provided, *in* will be used.\n\n   Reads data in the edn format (subset of Clojure data):\n   http://edn-format.org\n\n   cljs.tools.reader.edn/read doesn't depend on dynamic Vars, all configuration\n   is done by passing an opt map.\n\n   opts is a map that can include the following keys:\n   :eof - value to return on end-of-file. When not supplied, eof throws an exception.\n   :readers  - a map of tag symbols to data-reader functions to be considered before default-data-readers.\n              When not supplied, only the default-data-readers will be used.\n   :default - A function of two args, that will, if present and no reader is found for a tag,\n              be called with the tag and the value.",(cljs.core.truth_(cljs.reader.read)?cljs.reader.read.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*tag-table*"),new cljs.core.Var(function(){return cljs.reader._STAR_tag_table_STAR_;},new cljs.core.Symbol("cljs.reader","*tag-table*","cljs.reader/*tag-table*",-672238835,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.reader","cljs.reader",1327473948,null),new cljs.core.Symbol(null,"*tag-table*","*tag-table*",-746829364,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/reader.cljs",27,1,true,134,134,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.reader._STAR_tag_table_STAR_)?cljs.reader._STAR_tag_table_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"parse-and-validate-timestamp"),new cljs.core.Var(function(){return cljs.reader.parse_and_validate_timestamp;},new cljs.core.Symbol("cljs.reader","parse-and-validate-timestamp","cljs.reader/parse-and-validate-timestamp",1307150540,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.reader","cljs.reader",1327473948,null),new cljs.core.Symbol(null,"parse-and-validate-timestamp","parse-and-validate-timestamp",1213985165,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/reader.cljs",35,1,58,58,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),null,(cljs.core.truth_(cljs.reader.parse_and_validate_timestamp)?cljs.reader.parse_and_validate_timestamp.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"register-tag-parser!"),new cljs.core.Var(function(){return cljs.reader.register_tag_parser_BANG_;},new cljs.core.Symbol("cljs.reader","register-tag-parser!","cljs.reader/register-tag-parser!",-297621071,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.reader","cljs.reader",1327473948,null),new cljs.core.Symbol(null,"register-tag-parser!","register-tag-parser!",-489639826,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/reader.cljs",27,1,192,192,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"f","f",43394975,null)], null)),null,(cljs.core.truth_(cljs.reader.register_tag_parser_BANG_)?cljs.reader.register_tag_parser_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"register-default-tag-parser!"),new cljs.core.Var(function(){return cljs.reader.register_default_tag_parser_BANG_;},new cljs.core.Symbol("cljs.reader","register-default-tag-parser!","cljs.reader/register-default-tag-parser!",1037299120,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.reader","cljs.reader",1327473948,null),new cljs.core.Symbol(null,"register-default-tag-parser!","register-default-tag-parser!",960862065,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/reader.cljs",35,1,204,204,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null)),null,(cljs.core.truth_(cljs.reader.register_default_tag_parser_BANG_)?cljs.reader.register_default_tag_parser_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"deregister-default-tag-parser!"),new cljs.core.Var(function(){return cljs.reader.deregister_default_tag_parser_BANG_;},new cljs.core.Symbol("cljs.reader","deregister-default-tag-parser!","cljs.reader/deregister-default-tag-parser!",-11514503,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.reader","cljs.reader",1327473948,null),new cljs.core.Symbol(null,"deregister-default-tag-parser!","deregister-default-tag-parser!",-72469322,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/reader.cljs",37,1,210,210,cljs.core.list(cljs.core.PersistentVector.EMPTY),null,(cljs.core.truth_(cljs.reader.deregister_default_tag_parser_BANG_)?cljs.reader.deregister_default_tag_parser_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"read-string"),new cljs.core.Var(function(){return cljs.reader.read_string;},new cljs.core.Symbol("cljs.reader","read-string","cljs.reader/read-string",589673466,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.reader","cljs.reader",1327473948,null),new cljs.core.Symbol(null,"read-string","read-string",-558384455,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/reader.cljs",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,174,174,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Reads one object from the string s.\n   Returns nil when s is nil or empty.\n\n   Reads data in the edn format (subset of Clojure data):\n   http://edn-format.org\n\n   opts is a map as per cljs.tools.reader.edn/read",(cljs.core.truth_(cljs.reader.read_string)?cljs.reader.read_string.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"deregister-tag-parser!"),new cljs.core.Var(function(){return cljs.reader.deregister_tag_parser_BANG_;},new cljs.core.Symbol("cljs.reader","deregister-tag-parser!","cljs.reader/deregister-tag-parser!",-1190815842,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.reader","cljs.reader",1327473948,null),new cljs.core.Symbol(null,"deregister-tag-parser!","deregister-tag-parser!",-1114403617,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/reader.cljs",29,1,198,198,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag","tag",350170304,null)], null)),null,(cljs.core.truth_(cljs.reader.deregister_tag_parser_BANG_)?cljs.reader.deregister_tag_parser_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"parse-timestamp"),new cljs.core.Var(function(){return cljs.reader.parse_timestamp;},new cljs.core.Symbol("cljs.reader","parse-timestamp","cljs.reader/parse-timestamp",28446620,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.reader","cljs.reader",1327473948,null),new cljs.core.Symbol(null,"parse-timestamp","parse-timestamp",86013663,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/reader.cljs",22,1,83,83,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ts","ts",-1037225865,null)], null)),null,(cljs.core.truth_(cljs.reader.parse_timestamp)?cljs.reader.parse_timestamp.cljs$lang$test:null)]))], null)], null))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"cljs.tagged-literals","cljs.tagged-literals",387033363,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"read-queue"),new cljs.core.Var(function(){return cljs.tagged_literals.read_queue;},new cljs.core.Symbol("cljs.tagged-literals","read-queue","cljs.tagged-literals/read-queue",2052544700,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.tagged-literals","cljs.tagged-literals",387033363,null),new cljs.core.Symbol(null,"read-queue","read-queue",-1036575977,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/tagged_literals.cljc",17,1,13,13,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null)], null)),null,(cljs.core.truth_(cljs.tagged_literals.read_queue)?cljs.tagged_literals.read_queue.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"read-uuid"),new cljs.core.Var(function(){return cljs.tagged_literals.read_uuid;},new cljs.core.Symbol("cljs.tagged-literals","read-uuid","cljs.tagged-literals/read-uuid",579984427,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.tagged-literals","cljs.tagged-literals",387033363,null),new cljs.core.Symbol(null,"read-uuid","read-uuid",-1921933696,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/tagged_literals.cljc",19,4,34,34,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null)], null)),null,(cljs.core.truth_(cljs.tagged_literals.read_uuid)?cljs.tagged_literals.read_uuid.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"read-inst"),new cljs.core.Var(function(){return cljs.tagged_literals.read_inst;},new cljs.core.Symbol("cljs.tagged-literals","read-inst","cljs.tagged-literals/read-inst",1060077035,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.tagged-literals","cljs.tagged-literals",387033363,null),new cljs.core.Symbol(null,"read-inst","read-inst",-686866574,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/tagged_literals.cljc",19,4,54,54,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null)], null)),null,(cljs.core.truth_(cljs.tagged_literals.read_inst)?cljs.tagged_literals.read_inst.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"valid-js-literal-key?"),new cljs.core.Var(function(){return cljs.tagged_literals.valid_js_literal_key_QMARK_;},new cljs.core.Symbol("cljs.tagged-literals","valid-js-literal-key?","cljs.tagged-literals/valid-js-literal-key?",-513803197,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.tagged-literals","cljs.tagged-literals",387033363,null),new cljs.core.Symbol(null,"valid-js-literal-key?","valid-js-literal-key?",-1988347350,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/tagged_literals.cljc",28,1,63,63,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),null,(cljs.core.truth_(cljs.tagged_literals.valid_js_literal_key_QMARK_)?cljs.tagged_literals.valid_js_literal_key_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"JSValue"),new cljs.core.Var(function(){return cljs.tagged_literals.JSValue;},new cljs.core.Symbol("cljs.tagged-literals","JSValue","cljs.tagged-literals/JSValue",-1985083430,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.tagged-literals","cljs.tagged-literals",387033363,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/tagged_literals.cljc",new cljs.core.Keyword(null,"line","line",212345235),68,new cljs.core.Keyword(null,"column","column",2078222095),10,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"JSValue","JSValue",831505843,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.tagged_literals.JSValue)?cljs.tagged_literals.JSValue.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->JSValue"),new cljs.core.Var(function(){return cljs.tagged_literals.__GT_JSValue;},new cljs.core.Symbol("cljs.tagged-literals","->JSValue","cljs.tagged-literals/->JSValue",-401801552,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[cljs.core.PersistentHashSet.EMPTY,new cljs.core.Symbol(null,"cljs.tagged-literals","cljs.tagged-literals",387033363,null),new cljs.core.Symbol(null,"->JSValue","->JSValue",-2140324583,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/tagged_literals.cljc",17,1,new cljs.core.Keyword(null,"positional","positional",-203580463),68,68,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"val","val",1769233139,null)], null)),null,"Positional factory function for cljs.tagged-literals/JSValue.",(cljs.core.truth_(cljs.tagged_literals.__GT_JSValue)?cljs.tagged_literals.__GT_JSValue.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"read-js"),new cljs.core.Var(function(){return cljs.tagged_literals.read_js;},new cljs.core.Symbol("cljs.tagged-literals","read-js","cljs.tagged-literals/read-js",1272968822,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.tagged-literals","cljs.tagged-literals",387033363,null),new cljs.core.Symbol(null,"read-js","read-js",-473975777,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/tagged_literals.cljc",14,1,70,70,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null)], null)),null,(cljs.core.truth_(cljs.tagged_literals.read_js)?cljs.tagged_literals.read_js.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*cljs-data-readers*"),new cljs.core.Var(function(){return cljs.tagged_literals._STAR_cljs_data_readers_STAR_;},new cljs.core.Symbol("cljs.tagged-literals","*cljs-data-readers*","cljs.tagged-literals/*cljs-data-readers*",-916178180,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.tagged-literals","cljs.tagged-literals",387033363,null),new cljs.core.Symbol(null,"*cljs-data-readers*","*cljs-data-readers*",1900313431,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/clojure/cljs/tagged_literals.cljc",35,1,true,87,87,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.tagged_literals._STAR_cljs_data_readers_STAR_)?cljs.tagged_literals._STAR_cljs_data_readers_STAR_.cljs$lang$test:null)]))], null)], null))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 27, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"test-var"),new cljs.core.Var(function(){return cljs.test.test_var;},new cljs.core.Symbol("cljs.test","test-var","cljs.test/test-var",639352116,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),new cljs.core.Symbol(null,"test-var","test-var",534613154,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/test.cljs",15,1,496,496,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"v","v",1661996586,null)], null)),"If v has a function in its :test metadata, calls that function,\n  add v to :testing-vars property of env.",(cljs.core.truth_(cljs.test.test_var)?cljs.test.test_var.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"do-report"),new cljs.core.Var(function(){return cljs.test.do_report;},new cljs.core.Symbol("cljs.test","do-report","cljs.test/do-report",1258077813,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),new cljs.core.Symbol(null,"do-report","do-report",581091811,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/test.cljs",16,1,420,420,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),null,(cljs.core.truth_(cljs.test.do_report)?cljs.test.do_report.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"async?"),new cljs.core.Var(function(){return cljs.test.async_QMARK_;},new cljs.core.Symbol("cljs.test","async?","cljs.test/async?",1163310135,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),new cljs.core.Symbol(null,"async?","async?",-1131378011,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/test.cljs",13,1,434,434,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns whether x implements IAsyncTest.",(cljs.core.truth_(cljs.test.async_QMARK_)?cljs.test.async_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"testing-contexts-str"),new cljs.core.Var(function(){return cljs.test.testing_contexts_str;},new cljs.core.Symbol("cljs.test","testing-contexts-str","cljs.test/testing-contexts-str",-1726571112,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),new cljs.core.Symbol(null,"testing-contexts-str","testing-contexts-str",-514798554,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/test.cljs",27,1,299,299,cljs.core.list(cljs.core.PersistentVector.EMPTY),"Returns a string representation of the current test context. Joins\n  strings in *testing-contexts* with spaces.",(cljs.core.truth_(cljs.test.testing_contexts_str)?cljs.test.testing_contexts_str.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"join-fixtures"),new cljs.core.Var(function(){return cljs.test.join_fixtures;},new cljs.core.Symbol("cljs.test","join-fixtures","cljs.test/join-fixtures",-823232464,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),new cljs.core.Symbol(null,"join-fixtures","join-fixtures",-1227879482,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/test.cljs",20,1,517,517,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"fixtures","fixtures",-1644620775,null)], null)),"Composes a collection of fixtures, in order.  Always returns a valid\n  fixture function, even if the collection is empty.\n\n  NOTE: Incompatible with map fixtures.",(cljs.core.truth_(cljs.test.join_fixtures)?cljs.test.join_fixtures.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"inc-report-counter!"),new cljs.core.Var(function(){return cljs.test.inc_report_counter_BANG_;},new cljs.core.Symbol("cljs.test","inc-report-counter!","cljs.test/inc-report-counter!",-1718913167,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),new cljs.core.Symbol(null,"inc-report-counter!","inc-report-counter!",1909274887,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/test.cljs",26,1,305,305,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null)], null)),"Increments the named counter in *report-counters*, a ref to a map.\n  Does nothing if *report-counters* is nil.",(cljs.core.truth_(cljs.test.inc_report_counter_BANG_)?cljs.test.inc_report_counter_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"get-current-env"),new cljs.core.Var(function(){return cljs.test.get_current_env;},new cljs.core.Symbol("cljs.test","get-current-env","cljs.test/get-current-env",1274262302,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),new cljs.core.Symbol(null,"get-current-env","get-current-env",1663721608,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/test.cljs",22,1,271,271,cljs.core.list(cljs.core.PersistentVector.EMPTY),null,(cljs.core.truth_(cljs.test.get_current_env)?cljs.test.get_current_env.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"file-and-line"),new cljs.core.Var(function(){return cljs.test.file_and_line;},new cljs.core.Symbol("cljs.test","file-and-line","cljs.test/file-and-line",-215092582,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),new cljs.core.Symbol(null,"file-and-line","file-and-line",-605831960,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/test.cljs",20,1,406,406,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"exception","exception",1305254463,null),new cljs.core.Symbol(null,"depth","depth",-885772129,null)], null)),null,(cljs.core.truth_(cljs.test.file_and_line)?cljs.test.file_and_line.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"block"),new cljs.core.Var(function(){return cljs.test.block;},new cljs.core.Symbol("cljs.test","block","cljs.test/block",-1587771553,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),new cljs.core.Symbol(null,"block","block",-1989749559,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/test.cljs",12,1,458,458,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"fns","fns",-1469296983,null)], null)),"Tag a seq of fns to be picked up by run-block as injected\n  continuation.  See run-block.",(cljs.core.truth_(cljs.test.block)?cljs.test.block.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"report"),new cljs.core.Var(function(){return cljs.test.report;},new cljs.core.Symbol("cljs.test","report","cljs.test/report",-1933655233,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),new cljs.core.Symbol(null,"report","report",-1260380759,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/test.cljs",9,1,true,312,318,cljs.core.List.EMPTY,"Generic reporting function, may be overridden to plug in\n   different report formats (e.g., TAP, JUnit).  Assertions such as\n   'is' call 'report' to indicate results.  The argument given to\n   'report' will be a map with a :type key.",(cljs.core.truth_(cljs.test.report)?cljs.test.report.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"compose-fixtures"),new cljs.core.Var(function(){return cljs.test.compose_fixtures;},new cljs.core.Symbol("cljs.test","compose-fixtures","cljs.test/compose-fixtures",-1717543108,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),new cljs.core.Symbol(null,"compose-fixtures","compose-fixtures",-228168278,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/test.cljs",23,1,509,509,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f1","f1",-939903380,null),new cljs.core.Symbol(null,"f2","f2",2036700123,null)], null)),"Composes two fixture functions, creating a new fixture function\n  that combines their behavior.\n\n  NOTE: Incompatible with map fixtures.",(cljs.core.truth_(cljs.test.compose_fixtures)?cljs.test.compose_fixtures.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"js-line-and-column"),new cljs.core.Var(function(){return cljs.test.js_line_and_column;},new cljs.core.Symbol("cljs.test","js-line-and-column","cljs.test/js-line-and-column",168143645,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),new cljs.core.Symbol(null,"js-line-and-column","js-line-and-column",599947915,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/test.cljs",25,1,366,366,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"stack-element","stack-element",-298419566,null)], null)),null,(cljs.core.truth_(cljs.test.js_line_and_column)?cljs.test.js_line_and_column.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"IAsyncTest"),new cljs.core.Var(function(){return cljs.test.IAsyncTest;},new cljs.core.Symbol("cljs.test","IAsyncTest","cljs.test/IAsyncTest",-885937316,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol-symbol","protocol-symbol",1279552198),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"protocol-info","protocol-info",1471745843),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"sigs","sigs",-1653119622),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"jsdoc","jsdoc",1745183516),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),new cljs.core.Symbol(null,"IAsyncTest","IAsyncTest",-470811154,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/test.cljs",24,1,430,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"methods","methods",453930866),cljs.core.PersistentArrayMap.EMPTY], null),430,cljs.core.PersistentArrayMap.EMPTY,cljs.core.List.EMPTY,"Marker protocol denoting CPS function to begin asynchronous\n  testing.",cljs.core.list("@interface"),(cljs.core.truth_(cljs.test.IAsyncTest)?cljs.test.IAsyncTest.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"test-vars-block"),new cljs.core.Var(function(){return cljs.test.test_vars_block;},new cljs.core.Symbol("cljs.test","test-vars-block","cljs.test/test-vars-block",-257828355,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),new cljs.core.Symbol(null,"test-vars-block","test-vars-block",-1720743025,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/test.cljs",22,1,556,556,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"vars","vars",-406425690,null)], null)),"Like test-vars, but returns a block for further composition and\n  later execution.",(cljs.core.truth_(cljs.test.test_vars_block)?cljs.test.test_vars_block.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"clear-env!"),new cljs.core.Var(function(){return cljs.test.clear_env_BANG_;},new cljs.core.Symbol("cljs.test","clear-env!","cljs.test/clear-env!",241475586,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),new cljs.core.Symbol(null,"clear-env!","clear-env!",1985937008,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/test.cljs",17,1,280,280,cljs.core.list(cljs.core.PersistentVector.EMPTY),null,(cljs.core.truth_(cljs.test.clear_env_BANG_)?cljs.test.clear_env_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"set-env!"),new cljs.core.Var(function(){return cljs.test.set_env_BANG_;},new cljs.core.Symbol("cljs.test","set-env!","cljs.test/set-env!",-702147289,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),new cljs.core.Symbol(null,"set-env!","set-env!",-1099160431,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/test.cljs",15,1,277,277,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"new-env","new-env",-1486390331,null)], null)),null,(cljs.core.truth_(cljs.test.set_env_BANG_)?cljs.test.set_env_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"mapped-line-and-column"),new cljs.core.Var(function(){return cljs.test.mapped_line_and_column;},new cljs.core.Symbol("cljs.test","mapped-line-and-column","cljs.test/mapped-line-and-column",711898304,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),new cljs.core.Symbol(null,"mapped-line-and-column","mapped-line-and-column",1135035698,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/test.cljs",29,1,388,388,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"filename","filename",211690744,null),new cljs.core.Symbol(null,"line","line",1852876762,null),new cljs.core.Symbol(null,"column","column",-576213674,null)], null)),null,(cljs.core.truth_(cljs.test.mapped_line_and_column)?cljs.test.mapped_line_and_column.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"test-vars"),new cljs.core.Var(function(){return cljs.test.test_vars;},new cljs.core.Symbol("cljs.test","test-vars","cljs.test/test-vars",-1060717055,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),new cljs.core.Symbol(null,"test-vars","test-vars",411070579,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/test.cljs",16,1,589,589,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"vars","vars",-406425690,null)], null)),"Groups vars by their namespace and runs test-var on them with\n  appropriate fixtures assuming they are present in the current\n  testing environment.",(cljs.core.truth_(cljs.test.test_vars)?cljs.test.test_vars.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"get-and-clear-env!"),new cljs.core.Var(function(){return cljs.test.get_and_clear_env_BANG_;},new cljs.core.Symbol("cljs.test","get-and-clear-env!","cljs.test/get-and-clear-env!",-1402633791,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),new cljs.core.Symbol(null,"get-and-clear-env!","get-and-clear-env!",-1002458285,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/test.cljs",25,1,283,283,cljs.core.list(cljs.core.PersistentVector.EMPTY),null,(cljs.core.truth_(cljs.test.get_and_clear_env_BANG_)?cljs.test.get_and_clear_env_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"test-var-block"),new cljs.core.Var(function(){return cljs.test.test_var_block;},new cljs.core.Symbol("cljs.test","test-var-block","cljs.test/test-var-block",-1463056154,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),new cljs.core.Symbol(null,"test-var-block","test-var-block",1091681940,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/test.cljs",21,1,489,489,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"v","v",1661996586,null)], null)),"Like test-var, but returns a block for further composition and\n  later execution.",(cljs.core.truth_(cljs.test.test_var_block)?cljs.test.test_var_block.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"successful?"),new cljs.core.Var(function(){return cljs.test.successful_QMARK_;},new cljs.core.Symbol("cljs.test","successful?","cljs.test/successful?",1870698443,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),new cljs.core.Symbol(null,"successful?","successful?",398154069,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/test.cljs",18,1,601,601,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"summary","summary",2021379479,null)], null)),"Returns true if the given test summary indicates all tests\n  were successful, false otherwise.",(cljs.core.truth_(cljs.test.successful_QMARK_)?cljs.test.successful_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"empty-env"),new cljs.core.Var(function(){return cljs.test.empty_env;},new cljs.core.Symbol("cljs.test","empty-env","cljs.test/empty-env",849387048,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),new cljs.core.Symbol(null,"empty-env","empty-env",1793510582,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/test.cljs",16,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),1,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),1,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"reporter","reporter",835170906,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"reporter","reporter",835170906,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,252,252,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"reporter","reporter",835170906,null)], null)),"Generates a testing environment with a reporter.\n   (empty-env) - uses the :cljs.test/default reporter.\n   (empty-env :cljs.test/pprint) - pretty prints all data structures. \n   (empty-env reporter) - uses a reporter of your choosing.\n\n   To create your own reporter see cljs.test/report",(cljs.core.truth_(cljs.test.empty_env)?cljs.test.empty_env.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"testing-vars-str"),new cljs.core.Var(function(){return cljs.test.testing_vars_str;},new cljs.core.Symbol("cljs.test","testing-vars-str","cljs.test/testing-vars-str",1224992200,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),new cljs.core.Symbol(null,"testing-vars-str","testing-vars-str",851973974,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/test.cljs",23,1,289,289,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Returns a string representation of the current test.  Renders names\n  in *testing-vars* as a list, then the source file and line of\n  current assertion.",(cljs.core.truth_(cljs.test.testing_vars_str)?cljs.test.testing_vars_str.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*current-env*"),new cljs.core.Var(function(){return cljs.test._STAR_current_env_STAR_;},new cljs.core.Symbol("cljs.test","*current-env*","cljs.test/*current-env*",1044868196,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),new cljs.core.Symbol(null,"*current-env*","*current-env*",1443701750,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/test.cljs",29,1,true,269,269,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.test._STAR_current_env_STAR_)?cljs.test._STAR_current_env_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"run-block"),new cljs.core.Var(function(){return cljs.test.run_block;},new cljs.core.Symbol("cljs.test","run-block","cljs.test/run-block",-834586193,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),new cljs.core.Symbol(null,"run-block","run-block",637995581,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/test.cljs",16,1,439,439,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"fns","fns",-1469296983,null)], null)),"Invoke all functions in fns with no arguments. A fn can optionally\n  return\n\n  an async test - is invoked with a continuation running left fns\n\n  a seq of fns tagged per block - are invoked immediately after fn",(cljs.core.truth_(cljs.test.run_block)?cljs.test.run_block.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"update-current-env!"),new cljs.core.Var(function(){return cljs.test.update_current_env_BANG_;},new cljs.core.Symbol("cljs.test","update-current-env!","cljs.test/update-current-env!",-250761520,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),new cljs.core.Symbol(null,"update-current-env!","update-current-env!",418667870,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/test.cljs",26,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"ks","ks",-754231827,null),new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ks","ks",-754231827,null),new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,274,274,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ks","ks",-754231827,null),new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),null,(cljs.core.truth_(cljs.test.update_current_env_BANG_)?cljs.test.update_current_env_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"js-filename"),new cljs.core.Var(function(){return cljs.test.js_filename;},new cljs.core.Symbol("cljs.test","js-filename","cljs.test/js-filename",2103303213,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.test","cljs.test",884805483,null),new cljs.core.Symbol(null,"js-filename","js-filename",622537631,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/test.cljs",18,1,378,378,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"stack-element","stack-element",-298419566,null)], null)),null,(cljs.core.truth_(cljs.test.js_filename)?cljs.test.js_filename.cljs$lang$test:null)]))], null)], null))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"form"),new cljs.core.Var(function(){return cljs.spec.alpha.form;},new cljs.core.Symbol("cljs.spec.alpha","form","cljs.spec.alpha/form",-1550622407,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"form","form",16469056,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",11,1,181,181,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null)], null)),"returns the spec as data",(cljs.core.truth_(cljs.spec.alpha.form)?cljs.spec.alpha.form.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"nilable-impl"),new cljs.core.Var(function(){return cljs.spec.alpha.nilable_impl;},new cljs.core.Symbol("cljs.spec.alpha","nilable-impl","cljs.spec.alpha/nilable-impl",1785777257,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"skip-wiki","skip-wiki",-2018833298),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"nilable-impl","nilable-impl",-922164800,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",31,true,1,1410,1410,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null)], null)),"Do not call this directly, use 'nilable'",(cljs.core.truth_(cljs.spec.alpha.nilable_impl)?cljs.spec.alpha.nilable_impl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*recursion-limit*"),new cljs.core.Var(function(){return cljs.spec.alpha._STAR_recursion_limit_STAR_;},new cljs.core.Symbol("cljs.spec.alpha","*recursion-limit*","cljs.spec.alpha/*recursion-limit*",-1173178583,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"*recursion-limit*","*recursion-limit*",361405056,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",33,1,true,21,21,cljs.core.List.EMPTY,"A soft limit on how many times a branching spec (or/alt/*/opt-keys/multi-spec)\n  can be recursed through during generation. After this a\n  non-recursive branch will be chosen.",(cljs.core.truth_(cljs.spec.alpha._STAR_recursion_limit_STAR_)?cljs.spec.alpha._STAR_recursion_limit_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*coll-error-limit*"),new cljs.core.Var(function(){return cljs.spec.alpha._STAR_coll_error_limit_STAR_;},new cljs.core.Symbol("cljs.spec.alpha","*coll-error-limit*","cljs.spec.alpha/*coll-error-limit*",-1170087575,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"*coll-error-limit*","*coll-error-limit*",1491698368,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",34,1,true,35,35,cljs.core.List.EMPTY,"The number of errors reported by explain in a collection spec'ed with 'every'",(cljs.core.truth_(cljs.spec.alpha._STAR_coll_error_limit_STAR_)?cljs.spec.alpha._STAR_coll_error_limit_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"explain-printer"),new cljs.core.Var(function(){return cljs.spec.alpha.explain_printer;},new cljs.core.Symbol("cljs.spec.alpha","explain-printer","cljs.spec.alpha/explain-printer",-1833540246,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"explain-printer","explain-printer",1879988417,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",22,1,235,235,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ed","ed",2076825751,null)], null)),"Default printer for explain-data. nil indicates a successful validation.",(cljs.core.truth_(cljs.spec.alpha.explain_printer)?cljs.spec.alpha.explain_printer.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"Specize"),new cljs.core.Var(function(){return cljs.spec.alpha.Specize;},new cljs.core.Symbol("cljs.spec.alpha","Specize","cljs.spec.alpha/Specize",230180600,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol-symbol","protocol-symbol",1279552198),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"protocol-info","protocol-info",1471745843),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"sigs","sigs",-1653119622),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"jsdoc","jsdoc",1745183516),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"Specize","Specize",1800413441,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",21,1,131,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"methods","methods",453930866),new cljs.core.PersistentArrayMap(null, 1, [cljs.core.with_meta(new cljs.core.Symbol(null,"specize*","specize*",813986047,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),null], null)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null)], null)], null)], null),131,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"specize*","specize*",-826545480),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"specize*","specize*",813986047,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),null], null)], null),cljs.core.List.EMPTY,null,cljs.core.list("@interface"),(cljs.core.truth_(cljs.spec.alpha.Specize)?cljs.spec.alpha.Specize.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"alt-impl"),new cljs.core.Var(function(){return cljs.spec.alpha.alt_impl;},new cljs.core.Symbol("cljs.spec.alpha","alt-impl","cljs.spec.alpha/alt-impl",1852741609,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"skip-wiki","skip-wiki",-2018833298),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"alt-impl","alt-impl",-1983466174,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",27,true,1,1044,1044,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ks","ks",-754231827,null),new cljs.core.Symbol(null,"ps","ps",1932889573,null),new cljs.core.Symbol(null,"forms","forms",-608443419,null)], null)),"Do not call this directly, use 'alt'",(cljs.core.truth_(cljs.spec.alpha.alt_impl)?cljs.spec.alpha.alt_impl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"t_cljs$spec$alpha28681"),new cljs.core.Var(function(){return cljs.spec.alpha.t_cljs$spec$alpha28681;},new cljs.core.Symbol("cljs.spec.alpha","t_cljs$spec$alpha28681","cljs.spec.alpha/t_cljs$spec$alpha28681",-1908705813,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",new cljs.core.Keyword(null,"line","line",212345235),430,new cljs.core.Keyword(null,"column","column",2078222095),5,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_cljs$spec$alpha28681","t_cljs$spec$alpha28681",680826690,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.spec.alpha.t_cljs$spec$alpha28681)?cljs.spec.alpha.t_cljs$spec$alpha28681.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->t_cljs$spec$alpha28854"),new cljs.core.Var(function(){return cljs.spec.alpha.__GT_t_cljs$spec$alpha28854;},new cljs.core.Symbol("cljs.spec.alpha","->t_cljs$spec$alpha28854","cljs.spec.alpha/->t_cljs$spec$alpha28854",-33643878,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol("cljs.spec.alpha","Spec","cljs.spec.alpha/Spec",-2014630299,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.spec.alpha","Specize","cljs.spec.alpha/Specize",230180600,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"->t_cljs$spec$alpha28854","->t_cljs$spec$alpha28854",524717091,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",true,6,new cljs.core.Keyword(null,"positional","positional",-203580463),881,cljs.core.list(new cljs.core.PersistentVector(null, 25, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"max-count","max-count",-1115250464,null),new cljs.core.Symbol(null,"check?","check?",409539557,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null),new cljs.core.Symbol(null,"gen-max","gen-max",846851082,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.Symbol(null,"cpred","cpred",-540353554,null),new cljs.core.Symbol(null,"conform-keys","conform-keys",-159510287,null),new cljs.core.Symbol(null,"kind-form","kind-form",1155997457,null),new cljs.core.Symbol(null,"addcv","addcv",-1552991247,null),new cljs.core.Symbol(null,"cfns","cfns",1335482066,null),new cljs.core.Symbol(null,"map__28853","map__28853",-1486100332,null),new cljs.core.Symbol(null,"describe-form","describe-form",-1410156588,null),new cljs.core.Symbol(null,"distinct","distinct",-148347594,null),new cljs.core.Symbol(null,"p__28852","p__28852",-581838920,null),new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"kfn","kfn",729311001,null),new cljs.core.Symbol(null,"gen-into","gen-into",592640985,null),new cljs.core.Symbol(null,"count","count",-514511684,null),new cljs.core.Symbol(null,"min-count","min-count",-1059726756,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"kind","kind",923265724,null),new cljs.core.Symbol(null,"conform-all","conform-all",-980179459,null),new cljs.core.Symbol(null,"conform-into","conform-into",-1039113729,null),new cljs.core.Symbol(null,"meta28855","meta28855",-1343483698,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28854.",(cljs.core.truth_(cljs.spec.alpha.__GT_t_cljs$spec$alpha28854)?cljs.spec.alpha.__GT_t_cljs$spec$alpha28854.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"def-impl"),new cljs.core.Var(function(){return cljs.spec.alpha.def_impl;},new cljs.core.Symbol("cljs.spec.alpha","def-impl","cljs.spec.alpha/def-impl",-940040760,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"skip-wiki","skip-wiki",-2018833298),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"def-impl","def-impl",624983587,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",27,true,1,306,306,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"k","k",-505765866,null),new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"spec","spec",1988051928,null)], null)),"Do not call this directly, use 'def'",(cljs.core.truth_(cljs.spec.alpha.def_impl)?cljs.spec.alpha.def_impl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*explain-out*"),new cljs.core.Var(function(){return cljs.spec.alpha._STAR_explain_out_STAR_;},new cljs.core.Symbol("cljs.spec.alpha","*explain-out*","cljs.spec.alpha/*explain-out*",-1783482982,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"*explain-out*","*explain-out*",190453539,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",29,1,true,262,262,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.spec.alpha._STAR_explain_out_STAR_)?cljs.spec.alpha._STAR_explain_out_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"regex-spec-impl"),new cljs.core.Var(function(){return cljs.spec.alpha.regex_spec_impl;},new cljs.core.Symbol("cljs.spec.alpha","regex-spec-impl","cljs.spec.alpha/regex-spec-impl",-88755281,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"skip-wiki","skip-wiki",-2018833298),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"regex-spec-impl","regex-spec-impl",1541266692,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",34,true,1,1294,1294,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"re","re",1869207729,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null)], null)),"Do not call this directly, use 'spec' with a regex op argument",(cljs.core.truth_(cljs.spec.alpha.regex_spec_impl)?cljs.spec.alpha.regex_spec_impl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"merge-spec-impl"),new cljs.core.Var(function(){return cljs.spec.alpha.merge_spec_impl;},new cljs.core.Symbol("cljs.spec.alpha","merge-spec-impl","cljs.spec.alpha/merge-spec-impl",-1254890813,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"skip-wiki","skip-wiki",-2018833298),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"merge-spec-impl","merge-spec-impl",397115684,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",34,true,1,813,813,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"forms","forms",-608443419,null),new cljs.core.Symbol(null,"preds","preds",150921777,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null)], null)),"Do not call this directly, use 'merge'",(cljs.core.truth_(cljs.spec.alpha.merge_spec_impl)?cljs.spec.alpha.merge_spec_impl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"explain-data*"),new cljs.core.Var(function(){return cljs.spec.alpha.explain_data_STAR_;},new cljs.core.Symbol("cljs.spec.alpha","explain-data*","cljs.spec.alpha/explain-data*",161572685,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"explain-data*","explain-data*",-1439103580,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",20,1,219,219,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"path","path",1452340359,null),new cljs.core.Symbol(null,"via","via",-263925809,null),new cljs.core.Symbol(null,"in","in",109346662,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(cljs.spec.alpha.explain_data_STAR_)?cljs.spec.alpha.explain_data_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->t_cljs$spec$alpha29049"),new cljs.core.Var(function(){return cljs.spec.alpha.__GT_t_cljs$spec$alpha29049;},new cljs.core.Symbol("cljs.spec.alpha","->t_cljs$spec$alpha29049","cljs.spec.alpha/->t_cljs$spec$alpha29049",96412669,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol("cljs.spec.alpha","Spec","cljs.spec.alpha/Spec",-2014630299,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.spec.alpha","Specize","cljs.spec.alpha/Specize",230180600,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"->t_cljs$spec$alpha29049","->t_cljs$spec$alpha29049",1729562212,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",true,5,new cljs.core.Keyword(null,"positional","positional",-203580463),1394,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"meta29050","meta29050",1917354509,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha29049.",(cljs.core.truth_(cljs.spec.alpha.__GT_t_cljs$spec$alpha29049)?cljs.spec.alpha.__GT_t_cljs$spec$alpha29049.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"MAX_INT"),new cljs.core.Var(function(){return cljs.spec.alpha.MAX_INT;},new cljs.core.Symbol("cljs.spec.alpha","MAX_INT","cljs.spec.alpha/MAX_INT",1315428963,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"const","const",1709929842),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"MAX_INT","MAX_INT",-1394669628,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",21,1,true,19,19,cljs.core.List.EMPTY,null,(9007199254740991).cljs$lang$test
]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"check-asserts"),new cljs.core.Var(function(){return cljs.spec.alpha.check_asserts;},new cljs.core.Symbol("cljs.spec.alpha","check-asserts","cljs.spec.alpha/check-asserts",-1305679122,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"check-asserts","check-asserts",277089349,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",20,1,1490,1490,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,"flag","flag",-1565787888,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"boolean","boolean",-278886877,null)], null))], null)),"Enable or disable spec asserts that have been compiled\nwith '*compile-asserts*' true.  See 'assert'.\nInitially set to boolean value of cljs.spec.alpha/*runtime-asserts*.\nDefaults to false.",(cljs.core.truth_(cljs.spec.alpha.check_asserts)?cljs.spec.alpha.check_asserts.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"assert*"),new cljs.core.Var(function(){return cljs.spec.alpha.assert_STAR_;},new cljs.core.Symbol("cljs.spec.alpha","assert*","cljs.spec.alpha/assert*",464381070,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"assert*","assert*",2050341221,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",14,1,1498,1498,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Do not call this directly, use 'assert'.",(cljs.core.truth_(cljs.spec.alpha.assert_STAR_)?cljs.spec.alpha.assert_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"inst-in-range?"),new cljs.core.Var(function(){return cljs.spec.alpha.inst_in_range_QMARK_;},new cljs.core.Symbol("cljs.spec.alpha","inst-in-range?","cljs.spec.alpha/inst-in-range?",-1154968958,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"inst-in-range?","inst-in-range?",428913125,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",21,1,1445,1445,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"start","start",1285322546,null),new cljs.core.Symbol(null,"end","end",1372345569,null),new cljs.core.Symbol(null,"inst","inst",-2008473268,null)], null)),"Return true if inst at or after start and before end",(cljs.core.truth_(cljs.spec.alpha.inst_in_range_QMARK_)?cljs.spec.alpha.inst_in_range_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"and-spec-impl"),new cljs.core.Var(function(){return cljs.spec.alpha.and_spec_impl;},new cljs.core.Symbol("cljs.spec.alpha","and-spec-impl","cljs.spec.alpha/and-spec-impl",-492178340,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"skip-wiki","skip-wiki",-2018833298),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"and-spec-impl","and-spec-impl",1127339973,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",32,true,1,749,749,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"forms","forms",-608443419,null),new cljs.core.Symbol(null,"preds","preds",150921777,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null)], null)),"Do not call this directly, use 'and'",(cljs.core.truth_(cljs.spec.alpha.and_spec_impl)?cljs.spec.alpha.and_spec_impl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->t_cljs$spec$alpha28829"),new cljs.core.Var(function(){return cljs.spec.alpha.__GT_t_cljs$spec$alpha28829;},new cljs.core.Symbol("cljs.spec.alpha","->t_cljs$spec$alpha28829","cljs.spec.alpha/->t_cljs$spec$alpha28829",870517855,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol("cljs.spec.alpha","Spec","cljs.spec.alpha/Spec",-2014630299,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.spec.alpha","Specize","cljs.spec.alpha/Specize",230180600,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"->t_cljs$spec$alpha28829","->t_cljs$spec$alpha28829",-728026682,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",true,5,new cljs.core.Keyword(null,"positional","positional",-203580463),780,cljs.core.list(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"forms","forms",-608443419,null),new cljs.core.Symbol(null,"preds","preds",150921777,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null),new cljs.core.Symbol(null,"specs","specs",-1227865028,null),new cljs.core.Symbol(null,"cform","cform",1319506748,null),new cljs.core.Symbol(null,"meta28830","meta28830",2134237874,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28829.",(cljs.core.truth_(cljs.spec.alpha.__GT_t_cljs$spec$alpha28829)?cljs.spec.alpha.__GT_t_cljs$spec$alpha28829.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->t_cljs$spec$alpha28762"),new cljs.core.Var(function(){return cljs.spec.alpha.__GT_t_cljs$spec$alpha28762;},new cljs.core.Symbol("cljs.spec.alpha","->t_cljs$spec$alpha28762","cljs.spec.alpha/->t_cljs$spec$alpha28762",1443569439,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol("cljs.spec.alpha","Spec","cljs.spec.alpha/Spec",-2014630299,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.spec.alpha","Specize","cljs.spec.alpha/Specize",230180600,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"->t_cljs$spec$alpha28762","->t_cljs$spec$alpha28762",-1264389498,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",true,6,new cljs.core.Keyword(null,"positional","positional",-203580463),600,cljs.core.list(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"forms","forms",-608443419,null),new cljs.core.Symbol(null,"preds","preds",150921777,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null),new cljs.core.Symbol(null,"specs","specs",-1227865028,null),new cljs.core.Symbol(null,"cnt","cnt",1924510325,null),new cljs.core.Symbol(null,"meta28763","meta28763",562069642,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28762.",(cljs.core.truth_(cljs.spec.alpha.__GT_t_cljs$spec$alpha28762)?cljs.spec.alpha.__GT_t_cljs$spec$alpha28762.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"describe*"),new cljs.core.Var(function(){return cljs.spec.alpha.describe_STAR_;},new cljs.core.Symbol("cljs.spec.alpha","describe*","cljs.spec.alpha/describe*",-2042109363,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("cljs.spec.alpha","Spec","cljs.spec.alpha/Spec",-2014630299,null),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"describe*","describe*",1731182374,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",13,1,39,45,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null)], null)),null,(cljs.core.truth_(cljs.spec.alpha.describe_STAR_)?cljs.spec.alpha.describe_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"map-spec-impl"),new cljs.core.Var(function(){return cljs.spec.alpha.map_spec_impl;},new cljs.core.Symbol("cljs.spec.alpha","map-spec-impl","cljs.spec.alpha/map-spec-impl",1965627085,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"skip-wiki","skip-wiki",-2018833298),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"map-spec-impl","map-spec-impl",-1682885722,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",32,true,1,423,423,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"req-un","req-un",-1579864761,null),new cljs.core.Symbol(null,"opt-un","opt-un",-1770993273,null),new cljs.core.Symbol(null,"keys-pred","keys-pred",-1795451030,null),new cljs.core.Symbol(null,"pred-exprs","pred-exprs",-862164374,null),new cljs.core.Symbol(null,"opt-keys","opt-keys",-1391747508,null),new cljs.core.Symbol(null,"req-specs","req-specs",-2100473456,null),new cljs.core.Symbol(null,"req","req",1314083224,null),new cljs.core.Symbol(null,"req-keys","req-keys",-2140116548,null),new cljs.core.Symbol(null,"opt-specs","opt-specs",1255626077,null),new cljs.core.Symbol(null,"pred-forms","pred-forms",1813143359,null),new cljs.core.Symbol(null,"opt","opt",845825158,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"argm","argm",-181546357,null)], null)], null)),"Do not call this directly, use 'spec' with a map argument",(cljs.core.truth_(cljs.spec.alpha.map_spec_impl)?cljs.spec.alpha.map_spec_impl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"explain"),new cljs.core.Var(function(){return cljs.spec.alpha.explain;},new cljs.core.Symbol("cljs.spec.alpha","explain","cljs.spec.alpha/explain",-603101424,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"explain","explain",2124757673,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",14,1,270,270,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Given a spec and a value that fails to conform, prints an explanation to *out*.",(cljs.core.truth_(cljs.spec.alpha.explain)?cljs.spec.alpha.explain.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"map-spec"),new cljs.core.Var(function(){return cljs.spec.alpha.map_spec;},new cljs.core.Symbol("cljs.spec.alpha","map-spec","cljs.spec.alpha/map-spec",-170719104,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"declared","declared",92336021),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"map-spec","map-spec",1414212457,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",18,1,335,true,335,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.spec.alpha.map_spec)?cljs.spec.alpha.map_spec.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->t_cljs$spec$alpha29017"),new cljs.core.Var(function(){return cljs.spec.alpha.__GT_t_cljs$spec$alpha29017;},new cljs.core.Symbol("cljs.spec.alpha","->t_cljs$spec$alpha29017","cljs.spec.alpha/->t_cljs$spec$alpha29017",177685157,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol("cljs.spec.alpha","Spec","cljs.spec.alpha/Spec",-2014630299,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.spec.alpha","Specize","cljs.spec.alpha/Specize",230180600,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"->t_cljs$spec$alpha29017","->t_cljs$spec$alpha29017",-399547382,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",true,3,new cljs.core.Keyword(null,"positional","positional",-203580463),1297,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"re","re",1869207729,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null),new cljs.core.Symbol(null,"meta29018","meta29018",-1482514897,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha29017.",(cljs.core.truth_(cljs.spec.alpha.__GT_t_cljs$spec$alpha29017)?cljs.spec.alpha.__GT_t_cljs$spec$alpha29017.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"with-gen*"),new cljs.core.Var(function(){return cljs.spec.alpha.with_gen_STAR_;},new cljs.core.Symbol("cljs.spec.alpha","with-gen*","cljs.spec.alpha/with-gen*",-1871868783,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("cljs.spec.alpha","Spec","cljs.spec.alpha/Spec",-2014630299,null),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"with-gen*","with-gen*",823517706,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",13,1,39,44,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null)], null)),null,(cljs.core.truth_(cljs.spec.alpha.with_gen_STAR_)?cljs.spec.alpha.with_gen_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->t_cljs$spec$alpha29052"),new cljs.core.Var(function(){return cljs.spec.alpha.__GT_t_cljs$spec$alpha29052;},new cljs.core.Symbol("cljs.spec.alpha","->t_cljs$spec$alpha29052","cljs.spec.alpha/->t_cljs$spec$alpha29052",904551811,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol("cljs.spec.alpha","Spec","cljs.spec.alpha/Spec",-2014630299,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.spec.alpha","Specize","cljs.spec.alpha/Specize",230180600,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"->t_cljs$spec$alpha29052","->t_cljs$spec$alpha29052",-1838006678,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",true,5,new cljs.core.Keyword(null,"positional","positional",-203580463),1414,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null),new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"meta29053","meta29053",-2092809702,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha29052.",(cljs.core.truth_(cljs.spec.alpha.__GT_t_cljs$spec$alpha29052)?cljs.spec.alpha.__GT_t_cljs$spec$alpha29052.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"t_cljs$spec$alpha28737"),new cljs.core.Var(function(){return cljs.spec.alpha.t_cljs$spec$alpha28737;},new cljs.core.Symbol("cljs.spec.alpha","t_cljs$spec$alpha28737","cljs.spec.alpha/t_cljs$spec$alpha28737",-214970925,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",new cljs.core.Keyword(null,"line","line",212345235),520,new cljs.core.Keyword(null,"column","column",2078222095),6,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_cljs$spec$alpha28737","t_cljs$spec$alpha28737",307752810,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.spec.alpha.t_cljs$spec$alpha28737)?cljs.spec.alpha.t_cljs$spec$alpha28737.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"or-spec-impl"),new cljs.core.Var(function(){return cljs.spec.alpha.or_spec_impl;},new cljs.core.Symbol("cljs.spec.alpha","or-spec-impl","cljs.spec.alpha/or-spec-impl",174083152,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"skip-wiki","skip-wiki",-2018833298),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"or-spec-impl","or-spec-impl",-1412945461,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",31,true,1,659,659,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"keys","keys",-1586012071,null),new cljs.core.Symbol(null,"forms","forms",-608443419,null),new cljs.core.Symbol(null,"preds","preds",150921777,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null)], null)),"Do not call this directly, use 'or'",(cljs.core.truth_(cljs.spec.alpha.or_spec_impl)?cljs.spec.alpha.or_spec_impl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"t_cljs$spec$alpha28748"),new cljs.core.Var(function(){return cljs.spec.alpha.t_cljs$spec$alpha28748;},new cljs.core.Symbol("cljs.spec.alpha","t_cljs$spec$alpha28748","cljs.spec.alpha/t_cljs$spec$alpha28748",311857616,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",new cljs.core.Keyword(null,"line","line",212345235),556,new cljs.core.Keyword(null,"column","column",2078222095),6,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_cljs$spec$alpha28748","t_cljs$spec$alpha28748",-1309769909,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.spec.alpha.t_cljs$spec$alpha28748)?cljs.spec.alpha.t_cljs$spec$alpha28748.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->t_cljs$spec$alpha28681"),new cljs.core.Var(function(){return cljs.spec.alpha.__GT_t_cljs$spec$alpha28681;},new cljs.core.Symbol("cljs.spec.alpha","->t_cljs$spec$alpha28681","cljs.spec.alpha/->t_cljs$spec$alpha28681",342168196,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol("cljs.spec.alpha","Spec","cljs.spec.alpha/Spec",-2014630299,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.spec.alpha","Specize","cljs.spec.alpha/Specize",230180600,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"->t_cljs$spec$alpha28681","->t_cljs$spec$alpha28681",-1215482005,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",true,5,new cljs.core.Keyword(null,"positional","positional",-203580463),430,cljs.core.list(new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"keys->specnames","keys->specnames",1791294693,null),new cljs.core.Symbol(null,"opt","opt",845825158,null),new cljs.core.Symbol(null,"req-un","req-un",-1579864761,null),new cljs.core.Symbol(null,"opt-un","opt-un",-1770993273,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null),new cljs.core.Symbol(null,"pred-exprs","pred-exprs",-862164374,null),new cljs.core.Symbol(null,"keys-pred","keys-pred",-1795451030,null),new cljs.core.Symbol(null,"argm","argm",-181546357,null),new cljs.core.Symbol(null,"opt-keys","opt-keys",-1391747508,null),new cljs.core.Symbol(null,"p__28679","p__28679",1037102606,null),new cljs.core.Symbol(null,"req-specs","req-specs",-2100473456,null),new cljs.core.Symbol(null,"req","req",1314083224,null),new cljs.core.Symbol(null,"id","id",252129435,null),new cljs.core.Symbol(null,"map__28680","map__28680",-1325640165,null),new cljs.core.Symbol(null,"req-keys","req-keys",-2140116548,null),new cljs.core.Symbol(null,"opt-specs","opt-specs",1255626077,null),new cljs.core.Symbol(null,"k->s","k->s",-1685112801,null),new cljs.core.Symbol(null,"pred-forms","pred-forms",1813143359,null),new cljs.core.Symbol(null,"meta28682","meta28682",-895636940,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28681.",(cljs.core.truth_(cljs.spec.alpha.__GT_t_cljs$spec$alpha28681)?cljs.spec.alpha.__GT_t_cljs$spec$alpha28681.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*fspec-iterations*"),new cljs.core.Var(function(){return cljs.spec.alpha._STAR_fspec_iterations_STAR_;},new cljs.core.Symbol("cljs.spec.alpha","*fspec-iterations*","cljs.spec.alpha/*fspec-iterations*",71954347,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"*fspec-iterations*","*fspec-iterations*",-1545597748,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",34,1,true,27,27,cljs.core.List.EMPTY,"The number of times an anonymous fn specified by fspec will be (generatively) tested during conform",(cljs.core.truth_(cljs.spec.alpha._STAR_fspec_iterations_STAR_)?cljs.spec.alpha._STAR_fspec_iterations_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"Spec"),new cljs.core.Var(function(){return cljs.spec.alpha.Spec;},new cljs.core.Symbol("cljs.spec.alpha","Spec","cljs.spec.alpha/Spec",-2014630299,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol-symbol","protocol-symbol",1279552198),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"protocol-info","protocol-info",1471745843),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"sigs","sigs",-1653119622),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"jsdoc","jsdoc",1745183516),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"Spec","Spec",605228492,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",18,1,39,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"methods","methods",453930866),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.with_meta(new cljs.core.Symbol(null,"conform*","conform*",418951131,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),null], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)], null),cljs.core.with_meta(new cljs.core.Symbol(null,"unform*","unform*",-1932016594,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),null], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"y","y",-117328249,null)], null)], null),cljs.core.with_meta(new cljs.core.Symbol(null,"explain*","explain*",-382579041,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),null], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"path","path",1452340359,null),new cljs.core.Symbol(null,"via","via",-263925809,null),new cljs.core.Symbol(null,"in","in",109346662,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)], null),cljs.core.with_meta(new cljs.core.Symbol(null,"gen*","gen*",223144820,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),null], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"overrides","overrides",-915806902,null),new cljs.core.Symbol(null,"path","path",1452340359,null),new cljs.core.Symbol(null,"rmap","rmap",-1489258065,null)], null)], null),cljs.core.with_meta(new cljs.core.Symbol(null,"with-gen*","with-gen*",823517706,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),null], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null)], null)], null),cljs.core.with_meta(new cljs.core.Symbol(null,"describe*","describe*",1731182374,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),null], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null)], null)], null)], null)], null),39,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"conform*","conform*",-1221580396),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"conform*","conform*",418951131,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),null], null),new cljs.core.Keyword(null,"unform*","unform*",722419175),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"unform*","unform*",-1932016594,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"y","y",-117328249,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),null], null),new cljs.core.Keyword(null,"explain*","explain*",-2023110568),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"explain*","explain*",-382579041,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"path","path",1452340359,null),new cljs.core.Symbol(null,"via","via",-263925809,null),new cljs.core.Symbol(null,"in","in",109346662,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),null], null),new cljs.core.Keyword(null,"gen*","gen*",-1417386707),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"gen*","gen*",223144820,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"overrides","overrides",-915806902,null),new cljs.core.Symbol(null,"path","path",1452340359,null),new cljs.core.Symbol(null,"rmap","rmap",-1489258065,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),null], null),new cljs.core.Keyword(null,"with-gen*","with-gen*",-817013821),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"with-gen*","with-gen*",823517706,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),null], null),new cljs.core.Keyword(null,"describe*","describe*",90650847),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"describe*","describe*",1731182374,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),null], null)], null),cljs.core.List.EMPTY,null,cljs.core.list("@interface"),(cljs.core.truth_(cljs.spec.alpha.Spec)?cljs.spec.alpha.Spec.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"unform"),new cljs.core.Var(function(){return cljs.spec.alpha.unform;},new cljs.core.Symbol("cljs.spec.alpha","unform","cljs.spec.alpha/unform",-56885659,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"unform","unform",1530125772,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",13,1,174,174,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Given a spec and a value created by or compliant with a call to\n  'conform' with the same spec, returns a value with all conform\n   destructuring undone.",(cljs.core.truth_(cljs.spec.alpha.unform)?cljs.spec.alpha.unform.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"valid?"),new cljs.core.Var(function(){return cljs.spec.alpha.valid_QMARK_;},new cljs.core.Symbol("cljs.spec.alpha","valid?","cljs.spec.alpha/valid?",-142132235,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"valid?","valid?",1428119148,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",13,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,371,371,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null)),"Helper function that returns true when x is valid for spec.",(cljs.core.truth_(cljs.spec.alpha.valid_QMARK_)?cljs.spec.alpha.valid_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"t_cljs$spec$alpha28843"),new cljs.core.Var(function(){return cljs.spec.alpha.t_cljs$spec$alpha28843;},new cljs.core.Symbol("cljs.spec.alpha","t_cljs$spec$alpha28843","cljs.spec.alpha/t_cljs$spec$alpha28843",-561905545,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",new cljs.core.Keyword(null,"line","line",212345235),816,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_cljs$spec$alpha28843","t_cljs$spec$alpha28843",2137681548,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.spec.alpha.t_cljs$spec$alpha28843)?cljs.spec.alpha.t_cljs$spec$alpha28843.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"gen"),new cljs.core.Var(function(){return cljs.spec.alpha.gen;},new cljs.core.Symbol("cljs.spec.alpha","gen","cljs.spec.alpha/gen",147877780,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"gen","gen",1783106829,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",10,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"overrides","overrides",-915806902,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"overrides","overrides",-915806902,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,293,293,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"overrides","overrides",-915806902,null)], null)),"Given a spec, returns the generator for it, or throws if none can\n  be constructed. Optionally an overrides map can be provided which\n  should map spec names or paths (vectors of keywords) to no-arg\n  generator-creating fns. These will be used instead of the generators at those\n  names/paths. Note that parent generator (in the spec or overrides\n  map) will supersede those of any subtrees. A generator for a regex\n  op must always return a sequential collection (i.e. a generator for\n  s/? should return either an empty sequence/vector or a\n  sequence/vector with one item in it)",(cljs.core.truth_(cljs.spec.alpha.gen)?cljs.spec.alpha.gen.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"nonconforming"),new cljs.core.Var(function(){return cljs.spec.alpha.nonconforming;},new cljs.core.Symbol("cljs.spec.alpha","nonconforming","cljs.spec.alpha/nonconforming",-1009218508,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"nonconforming","nonconforming",1648455341,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",20,1,1389,1389,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null)], null)),"takes a spec and returns a spec that has the same properties except\n  'conform' returns the original (not the conformed) value. Note, will specize regex ops.",(cljs.core.truth_(cljs.spec.alpha.nonconforming)?cljs.spec.alpha.nonconforming.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"unform*"),new cljs.core.Var(function(){return cljs.spec.alpha.unform_STAR_;},new cljs.core.Symbol("cljs.spec.alpha","unform*","cljs.spec.alpha/unform*",1852809877,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("cljs.spec.alpha","Spec","cljs.spec.alpha/Spec",-2014630299,null),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"unform*","unform*",-1932016594,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",11,1,39,41,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"y","y",-117328249,null)], null)),null,(cljs.core.truth_(cljs.spec.alpha.unform_STAR_)?cljs.spec.alpha.unform_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"abbrev"),new cljs.core.Var(function(){return cljs.spec.alpha.abbrev;},new cljs.core.Symbol("cljs.spec.alpha","abbrev","cljs.spec.alpha/abbrev",-859488921,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"abbrev","abbrev",1651335374,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",13,1,187,187,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null)], null)),null,(cljs.core.truth_(cljs.spec.alpha.abbrev)?cljs.spec.alpha.abbrev.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"t_cljs$spec$alpha28829"),new cljs.core.Var(function(){return cljs.spec.alpha.t_cljs$spec$alpha28829;},new cljs.core.Symbol("cljs.spec.alpha","t_cljs$spec$alpha28829","cljs.spec.alpha/t_cljs$spec$alpha28829",67547209,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",new cljs.core.Keyword(null,"line","line",212345235),780,new cljs.core.Keyword(null,"column","column",2078222095),5,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_cljs$spec$alpha28829","t_cljs$spec$alpha28829",-1566616082,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.spec.alpha.t_cljs$spec$alpha28829)?cljs.spec.alpha.t_cljs$spec$alpha28829.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"regex?"),new cljs.core.Var(function(){return cljs.spec.alpha.regex_QMARK_;},new cljs.core.Symbol("cljs.spec.alpha","regex?","cljs.spec.alpha/regex?",-976220887,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"regex?","regex?",661137998,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",13,1,80,80,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"returns x if x is a (cljs.spec.alpha) regex op, else logical false",(cljs.core.truth_(cljs.spec.alpha.regex_QMARK_)?cljs.spec.alpha.regex_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"t_cljs$spec$alpha29024"),new cljs.core.Var(function(){return cljs.spec.alpha.t_cljs$spec$alpha29024;},new cljs.core.Symbol("cljs.spec.alpha","t_cljs$spec$alpha29024","cljs.spec.alpha/t_cljs$spec$alpha29024",-744093929,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",new cljs.core.Keyword(null,"line","line",212345235),1346,new cljs.core.Keyword(null,"column","column",2078222095),5,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_cljs$spec$alpha29024","t_cljs$spec$alpha29024",-1139924338,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.spec.alpha.t_cljs$spec$alpha29024)?cljs.spec.alpha.t_cljs$spec$alpha29024.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"int-in-range?"),new cljs.core.Var(function(){return cljs.spec.alpha.int_in_range_QMARK_;},new cljs.core.Symbol("cljs.spec.alpha","int-in-range?","cljs.spec.alpha/int-in-range?",92650900,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"int-in-range?","int-in-range?",-432186577,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",20,1,1452,1452,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"start","start",1285322546,null),new cljs.core.Symbol(null,"end","end",1372345569,null),new cljs.core.Symbol(null,"val","val",1769233139,null)], null)),"Return true if start <= val, val < end and val is a fixed\n  precision integer.",(cljs.core.truth_(cljs.spec.alpha.int_in_range_QMARK_)?cljs.spec.alpha.int_in_range_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"spec?"),new cljs.core.Var(function(){return cljs.spec.alpha.spec_QMARK_;},new cljs.core.Symbol("cljs.spec.alpha","spec?","cljs.spec.alpha/spec?",-2086793671,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"spec?","spec?",-517590128,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",12,1,74,74,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"returns x if x is a spec object, else logical false",(cljs.core.truth_(cljs.spec.alpha.spec_QMARK_)?cljs.spec.alpha.spec_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"registry"),new cljs.core.Var(function(){return cljs.spec.alpha.registry;},new cljs.core.Symbol("cljs.spec.alpha","registry","cljs.spec.alpha/registry",1027473882,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"registry","registry",-1633276751,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",15,1,318,318,cljs.core.list(cljs.core.PersistentVector.EMPTY),"returns the registry map, prefer 'get-spec' to lookup a spec by name",(cljs.core.truth_(cljs.spec.alpha.registry)?cljs.spec.alpha.registry.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rep+impl"),new cljs.core.Var(function(){return cljs.spec.alpha.rep_PLUS_impl;},new cljs.core.Symbol("cljs.spec.alpha","rep+impl","cljs.spec.alpha/rep+impl",1883292654,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"skip-wiki","skip-wiki",-2018833298),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"rep+impl","rep+impl",-1814495631,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",27,true,1,1010,1010,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Do not call this directly, use '+'",(cljs.core.truth_(cljs.spec.alpha.rep_PLUS_impl)?cljs.spec.alpha.rep_PLUS_impl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"t_cljs$spec$alpha28771"),new cljs.core.Var(function(){return cljs.spec.alpha.t_cljs$spec$alpha28771;},new cljs.core.Symbol("cljs.spec.alpha","t_cljs$spec$alpha28771","cljs.spec.alpha/t_cljs$spec$alpha28771",-1382054085,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",new cljs.core.Keyword(null,"line","line",212345235),697,new cljs.core.Keyword(null,"column","column",2078222095),5,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_cljs$spec$alpha28771","t_cljs$spec$alpha28771",-886594414,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.spec.alpha.t_cljs$spec$alpha28771)?cljs.spec.alpha.t_cljs$spec$alpha28771.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"exercise"),new cljs.core.Var(function(){return cljs.spec.alpha.exercise;},new cljs.core.Symbol("cljs.spec.alpha","exercise","cljs.spec.alpha/exercise",-1820382835,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"exercise","exercise",838912786,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",15,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"overrides","overrides",-915806902,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"overrides","overrides",-915806902,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,1436,1436,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"overrides","overrides",-915806902,null)], null)),"generates a number (default 10) of values compatible with spec and maps conform over them,\n  returning a sequence of [val conformed-val] tuples. Optionally takes\n  a generator overrides map as per gen",(cljs.core.truth_(cljs.spec.alpha.exercise)?cljs.spec.alpha.exercise.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"t_cljs$spec$alpha29052"),new cljs.core.Var(function(){return cljs.spec.alpha.t_cljs$spec$alpha29052;},new cljs.core.Symbol("cljs.spec.alpha","t_cljs$spec$alpha29052","cljs.spec.alpha/t_cljs$spec$alpha29052",822593613,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",new cljs.core.Keyword(null,"line","line",212345235),1414,new cljs.core.Keyword(null,"column","column",2078222095),5,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_cljs$spec$alpha29052","t_cljs$spec$alpha29052",-1871713326,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.spec.alpha.t_cljs$spec$alpha29052)?cljs.spec.alpha.t_cljs$spec$alpha29052.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"explain-data"),new cljs.core.Var(function(){return cljs.spec.alpha.explain_data;},new cljs.core.Symbol("cljs.spec.alpha","explain-data","cljs.spec.alpha/explain-data",-1205665300,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"explain-data","explain-data",515587187,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",19,1,226,226,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Given a spec and a value x which ought to conform, returns nil if x\n  conforms, else a map with at least the key ::problems whose value is\n  a collection of problem-maps, where problem-map has at least :path :pred and :val\n  keys describing the predicate and the value that failed at that\n  path.",(cljs.core.truth_(cljs.spec.alpha.explain_data)?cljs.spec.alpha.explain_data.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"tuple-impl"),new cljs.core.Var(function(){return cljs.spec.alpha.tuple_impl;},new cljs.core.Symbol("cljs.spec.alpha","tuple-impl","cljs.spec.alpha/tuple-impl",113790282,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"skip-wiki","skip-wiki",-2018833298),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"tuple-impl","tuple-impl",1730158803,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",29,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"forms","forms",-608443419,null),new cljs.core.Symbol(null,"preds","preds",150921777,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"forms","forms",-608443419,null),new cljs.core.Symbol(null,"preds","preds",150921777,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"forms","forms",-608443419,null),new cljs.core.Symbol(null,"preds","preds",150921777,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"forms","forms",-608443419,null),new cljs.core.Symbol(null,"preds","preds",150921777,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),true,1,594,594,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"forms","forms",-608443419,null),new cljs.core.Symbol(null,"preds","preds",150921777,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"forms","forms",-608443419,null),new cljs.core.Symbol(null,"preds","preds",150921777,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null)], null)),"Do not call this directly, use 'tuple'",(cljs.core.truth_(cljs.spec.alpha.tuple_impl)?cljs.spec.alpha.tuple_impl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->t_cljs$spec$alpha28748"),new cljs.core.Var(function(){return cljs.spec.alpha.__GT_t_cljs$spec$alpha28748;},new cljs.core.Symbol("cljs.spec.alpha","->t_cljs$spec$alpha28748","cljs.spec.alpha/->t_cljs$spec$alpha28748",2077138890,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol("cljs.spec.alpha","Spec","cljs.spec.alpha/Spec",-2014630299,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.spec.alpha","Specize","cljs.spec.alpha/Specize",230180600,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"->t_cljs$spec$alpha28748","->t_cljs$spec$alpha28748",-629739181,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",true,6,new cljs.core.Keyword(null,"positional","positional",-203580463),556,cljs.core.list(new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"mmvar","mmvar",-1714325675,null),new cljs.core.Symbol(null,"retag","retag",528972725,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null),new cljs.core.Symbol(null,"id","id",252129435,null),new cljs.core.Symbol(null,"predx","predx",2063470948,null),new cljs.core.Symbol(null,"dval","dval",835211877,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"meta28749","meta28749",-974902901,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28748.",(cljs.core.truth_(cljs.spec.alpha.__GT_t_cljs$spec$alpha28748)?cljs.spec.alpha.__GT_t_cljs$spec$alpha28748.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"multi-spec-impl"),new cljs.core.Var(function(){return cljs.spec.alpha.multi_spec_impl;},new cljs.core.Symbol("cljs.spec.alpha","multi-spec-impl","cljs.spec.alpha/multi-spec-impl",-1581100244,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"skip-wiki","skip-wiki",-2018833298),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"multi-spec-impl","multi-spec-impl",57314739,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",34,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),4,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),4,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"mmvar","mmvar",-1714325675,null),new cljs.core.Symbol(null,"retag","retag",528972725,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"mmvar","mmvar",-1714325675,null),new cljs.core.Symbol(null,"retag","retag",528972725,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"mmvar","mmvar",-1714325675,null),new cljs.core.Symbol(null,"retag","retag",528972725,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"mmvar","mmvar",-1714325675,null),new cljs.core.Symbol(null,"retag","retag",528972725,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),true,1,544,544,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"mmvar","mmvar",-1714325675,null),new cljs.core.Symbol(null,"retag","retag",528972725,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"mmvar","mmvar",-1714325675,null),new cljs.core.Symbol(null,"retag","retag",528972725,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null)], null)),"Do not call this directly, use 'multi-spec'",(cljs.core.truth_(cljs.spec.alpha.multi_spec_impl)?cljs.spec.alpha.multi_spec_impl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"conform"),new cljs.core.Var(function(){return cljs.spec.alpha.conform;},new cljs.core.Symbol("cljs.spec.alpha","conform","cljs.spec.alpha/conform",763100824,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"conform","conform",-808199309,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",14,1,168,168,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Given a spec and a value, returns :cljs.spec.alpha/invalid if value does\n  not match spec, else the (possibly destructured) value.",(cljs.core.truth_(cljs.spec.alpha.conform)?cljs.spec.alpha.conform.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"gen*"),new cljs.core.Var(function(){return cljs.spec.alpha.gen_STAR_;},new cljs.core.Symbol("cljs.spec.alpha","gen*","cljs.spec.alpha/gen*",-1398486579,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("cljs.spec.alpha","Spec","cljs.spec.alpha/Spec",-2014630299,null),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"gen*","gen*",223144820,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",8,1,39,43,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"overrides","overrides",-915806902,null),new cljs.core.Symbol(null,"path","path",1452340359,null),new cljs.core.Symbol(null,"rmap","rmap",-1489258065,null)], null)),null,(cljs.core.truth_(cljs.spec.alpha.gen_STAR_)?cljs.spec.alpha.gen_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"fspec-impl"),new cljs.core.Var(function(){return cljs.spec.alpha.fspec_impl;},new cljs.core.Symbol("cljs.spec.alpha","fspec-impl","cljs.spec.alpha/fspec-impl",-1748020611,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"skip-wiki","skip-wiki",-2018833298),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"fspec-impl","fspec-impl",897021908,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",29,true,1,1342,1342,cljs.core.list(new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"argspec","argspec",-1207762746,null),new cljs.core.Symbol(null,"aform","aform",531303525,null),new cljs.core.Symbol(null,"retspec","retspec",-920025354,null),new cljs.core.Symbol(null,"rform","rform",-1420499912,null),new cljs.core.Symbol(null,"fnspec","fnspec",-1865712406,null),new cljs.core.Symbol(null,"fform","fform",-176049972,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null)], null)),"Do not call this directly, use 'fspec'",(cljs.core.truth_(cljs.spec.alpha.fspec_impl)?cljs.spec.alpha.fspec_impl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->t_cljs$spec$alpha28843"),new cljs.core.Var(function(){return cljs.spec.alpha.__GT_t_cljs$spec$alpha28843;},new cljs.core.Symbol("cljs.spec.alpha","->t_cljs$spec$alpha28843","cljs.spec.alpha/->t_cljs$spec$alpha28843",524520956,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol("cljs.spec.alpha","Spec","cljs.spec.alpha/Spec",-2014630299,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.spec.alpha","Specize","cljs.spec.alpha/Specize",230180600,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"->t_cljs$spec$alpha28843","->t_cljs$spec$alpha28843",-131354795,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",true,3,new cljs.core.Keyword(null,"positional","positional",-203580463),816,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"forms","forms",-608443419,null),new cljs.core.Symbol(null,"preds","preds",150921777,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null),new cljs.core.Symbol(null,"meta28844","meta28844",93069384,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28843.",(cljs.core.truth_(cljs.spec.alpha.__GT_t_cljs$spec$alpha28843)?cljs.spec.alpha.__GT_t_cljs$spec$alpha28843.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"t_cljs$spec$alpha28854"),new cljs.core.Var(function(){return cljs.spec.alpha.t_cljs$spec$alpha28854;},new cljs.core.Symbol("cljs.spec.alpha","t_cljs$spec$alpha28854","cljs.spec.alpha/t_cljs$spec$alpha28854",664681489,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",new cljs.core.Keyword(null,"line","line",212345235),881,new cljs.core.Keyword(null,"column","column",2078222095),6,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_cljs$spec$alpha28854","t_cljs$spec$alpha28854",-2030691594,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.spec.alpha.t_cljs$spec$alpha28854)?cljs.spec.alpha.t_cljs$spec$alpha28854.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*coll-check-limit*"),new cljs.core.Var(function(){return cljs.spec.alpha._STAR_coll_check_limit_STAR_;},new cljs.core.Symbol("cljs.spec.alpha","*coll-check-limit*","cljs.spec.alpha/*coll-check-limit*",1203790271,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"*coll-check-limit*","*coll-check-limit*",-428113130,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",34,1,true,31,31,cljs.core.List.EMPTY,"The number of items validated in a collection spec'ed with 'every'",(cljs.core.truth_(cljs.spec.alpha._STAR_coll_check_limit_STAR_)?cljs.spec.alpha._STAR_coll_check_limit_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->t_cljs$spec$alpha29024"),new cljs.core.Var(function(){return cljs.spec.alpha.__GT_t_cljs$spec$alpha29024;},new cljs.core.Symbol("cljs.spec.alpha","->t_cljs$spec$alpha29024","cljs.spec.alpha/->t_cljs$spec$alpha29024",-760812399,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Symbol("cljs.spec.alpha","Spec","cljs.spec.alpha/Spec",-2014630299,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.spec.alpha","Specize","cljs.spec.alpha/Specize",230180600,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null",new cljs.core.Symbol("cljs.core","ILookup","cljs.core/ILookup",-150575073,null),"null"], null), null),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"->t_cljs$spec$alpha29024","->t_cljs$spec$alpha29024",1276039030,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",true,5,new cljs.core.Keyword(null,"positional","positional",-203580463),1346,cljs.core.list(new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"argspec","argspec",-1207762746,null),new cljs.core.Symbol(null,"aform","aform",531303525,null),new cljs.core.Symbol(null,"retspec","retspec",-920025354,null),new cljs.core.Symbol(null,"rform","rform",-1420499912,null),new cljs.core.Symbol(null,"fnspec","fnspec",-1865712406,null),new cljs.core.Symbol(null,"fform","fform",-176049972,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null),new cljs.core.Symbol(null,"specs","specs",-1227865028,null),new cljs.core.Symbol(null,"meta29025","meta29025",-1165807187,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null",new cljs.core.Symbol("cljs.core","ILookup","cljs.core/ILookup",-150575073,null),"null"], null), null),"Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha29024.",(cljs.core.truth_(cljs.spec.alpha.__GT_t_cljs$spec$alpha29024)?cljs.spec.alpha.__GT_t_cljs$spec$alpha29024.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"get-spec"),new cljs.core.Var(function(){return cljs.spec.alpha.get_spec;},new cljs.core.Symbol("cljs.spec.alpha","get-spec","cljs.spec.alpha/get-spec",785931985,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"get-spec","get-spec",-1922008138,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",15,1,330,330,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),"Returns spec registered for keyword/symbol/var k, or nil.",(cljs.core.truth_(cljs.spec.alpha.get_spec)?cljs.spec.alpha.get_spec.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->t_cljs$spec$alpha28771"),new cljs.core.Var(function(){return cljs.spec.alpha.__GT_t_cljs$spec$alpha28771;},new cljs.core.Symbol("cljs.spec.alpha","->t_cljs$spec$alpha28771","cljs.spec.alpha/->t_cljs$spec$alpha28771",494590430,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol("cljs.spec.alpha","Spec","cljs.spec.alpha/Spec",-2014630299,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.spec.alpha","Specize","cljs.spec.alpha/Specize",230180600,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"->t_cljs$spec$alpha28771","->t_cljs$spec$alpha28771",2076359351,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",true,5,new cljs.core.Keyword(null,"positional","positional",-203580463),697,cljs.core.list(new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"keys","keys",-1586012071,null),new cljs.core.Symbol(null,"forms","forms",-608443419,null),new cljs.core.Symbol(null,"preds","preds",150921777,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null),new cljs.core.Symbol(null,"id","id",252129435,null),new cljs.core.Symbol(null,"kps","kps",-1157342767,null),new cljs.core.Symbol(null,"specs","specs",-1227865028,null),new cljs.core.Symbol(null,"cform","cform",1319506748,null),new cljs.core.Symbol(null,"meta28772","meta28772",-1195463578,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28771.",(cljs.core.truth_(cljs.spec.alpha.__GT_t_cljs$spec$alpha28771)?cljs.spec.alpha.__GT_t_cljs$spec$alpha28771.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"every-impl"),new cljs.core.Var(function(){return cljs.spec.alpha.every_impl;},new cljs.core.Symbol("cljs.spec.alpha","every-impl","cljs.spec.alpha/every-impl",30419907,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"skip-wiki","skip-wiki",-2018833298),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"every-impl","every-impl",-482847368,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",29,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),4,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),4,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Symbol(null,"conform-into","conform-into",-1039113729,null),new cljs.core.Keyword(null,"into","into",-150836029),new cljs.core.Symbol(null,"describe-form","describe-form",-1410156588,null),new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"kind","kind",923265724,null),new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),new cljs.core.Symbol(null,"count","count",-514511684,null),new cljs.core.Symbol(null,"max-count","max-count",-1115250464,null),new cljs.core.Symbol(null,"min-count","min-count",-1059726756,null),new cljs.core.Symbol(null,"distinct","distinct",-148347594,null),new cljs.core.Symbol(null,"gen-max","gen-max",846851082,null),new cljs.core.Keyword("cljs.spec.alpha","kfn","cljs.spec.alpha/kfn",672643897),new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),new cljs.core.Symbol(null,"conform-keys","conform-keys",-159510287,null),new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,"gen-max","gen-max",846851082,null),(20)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Symbol(null,"conform-into","conform-into",-1039113729,null),new cljs.core.Keyword(null,"into","into",-150836029),new cljs.core.Symbol(null,"describe-form","describe-form",-1410156588,null),new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"kind","kind",923265724,null),new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),new cljs.core.Symbol(null,"count","count",-514511684,null),new cljs.core.Symbol(null,"max-count","max-count",-1115250464,null),new cljs.core.Symbol(null,"min-count","min-count",-1059726756,null),new cljs.core.Symbol(null,"distinct","distinct",-148347594,null),new cljs.core.Symbol(null,"gen-max","gen-max",846851082,null),new cljs.core.Keyword("cljs.spec.alpha","kfn","cljs.spec.alpha/kfn",672643897),new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),new cljs.core.Symbol(null,"conform-keys","conform-keys",-159510287,null),new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,"gen-max","gen-max",846851082,null),(20)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),true,1,843,843,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Symbol(null,"conform-into","conform-into",-1039113729,null),new cljs.core.Keyword(null,"into","into",-150836029),new cljs.core.Symbol(null,"describe-form","describe-form",-1410156588,null),new cljs.core.Keyword("cljs.spec.alpha","describe","cljs.spec.alpha/describe",1883026911),new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"kind","kind",923265724,null),new cljs.core.Keyword("cljs.spec.alpha","kind-form","cljs.spec.alpha/kind-form",-1047104697),new cljs.core.Symbol(null,"count","count",-514511684,null),new cljs.core.Symbol(null,"max-count","max-count",-1115250464,null),new cljs.core.Symbol(null,"min-count","min-count",-1059726756,null),new cljs.core.Symbol(null,"distinct","distinct",-148347594,null),new cljs.core.Symbol(null,"gen-max","gen-max",846851082,null),new cljs.core.Keyword("cljs.spec.alpha","kfn","cljs.spec.alpha/kfn",672643897),new cljs.core.Keyword("cljs.spec.alpha","cpred","cljs.spec.alpha/cpred",-693471218),new cljs.core.Symbol(null,"conform-keys","conform-keys",-159510287,null),new cljs.core.Keyword("cljs.spec.alpha","conform-all","cljs.spec.alpha/conform-all",45201917)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,"gen-max","gen-max",846851082,null),(20)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null)], null)),"Do not call this directly, use 'every', 'every-kv', 'coll-of' or 'map-of'",(cljs.core.truth_(cljs.spec.alpha.every_impl)?cljs.spec.alpha.every_impl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"t_cljs$spec$alpha29017"),new cljs.core.Var(function(){return cljs.spec.alpha.t_cljs$spec$alpha29017;},new cljs.core.Symbol("cljs.spec.alpha","t_cljs$spec$alpha29017","cljs.spec.alpha/t_cljs$spec$alpha29017",1999188375,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",new cljs.core.Keyword(null,"line","line",212345235),1297,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_cljs$spec$alpha29017","t_cljs$spec$alpha29017",-696166664,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.spec.alpha.t_cljs$spec$alpha29017)?cljs.spec.alpha.t_cljs$spec$alpha29017.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"spec-impl"),new cljs.core.Var(function(){return cljs.spec.alpha.spec_impl;},new cljs.core.Symbol("cljs.spec.alpha","spec-impl","cljs.spec.alpha/spec-impl",69764672,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"skip-wiki","skip-wiki",-2018833298),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"spec-impl","spec-impl",1706091993,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",28,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),5,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),5,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null),new cljs.core.Symbol(null,"cpred?","cpred?",35589515,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null),new cljs.core.Symbol(null,"cpred?","cpred?",35589515,null),new cljs.core.Symbol(null,"unc","unc",-465250751,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null),new cljs.core.Symbol(null,"cpred?","cpred?",35589515,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null),new cljs.core.Symbol(null,"cpred?","cpred?",35589515,null),new cljs.core.Symbol(null,"unc","unc",-465250751,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),true,1,511,511,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null),new cljs.core.Symbol(null,"cpred?","cpred?",35589515,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null),new cljs.core.Symbol(null,"cpred?","cpred?",35589515,null),new cljs.core.Symbol(null,"unc","unc",-465250751,null)], null)),"Do not call this directly, use 'spec'",(cljs.core.truth_(cljs.spec.alpha.spec_impl)?cljs.spec.alpha.spec_impl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"invalid?"),new cljs.core.Var(function(){return cljs.spec.alpha.invalid_QMARK_;},new cljs.core.Symbol("cljs.spec.alpha","invalid?","cljs.spec.alpha/invalid?",-293855021,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"invalid?","invalid?",-1865038534,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",15,1,163,163,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ret","ret",1172308713,null)], null)),"tests the validity of a conform return value",(cljs.core.truth_(cljs.spec.alpha.invalid_QMARK_)?cljs.spec.alpha.invalid_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"amp-impl"),new cljs.core.Var(function(){return cljs.spec.alpha.amp_impl;},new cljs.core.Symbol("cljs.spec.alpha","amp-impl","cljs.spec.alpha/amp-impl",1419577313,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"skip-wiki","skip-wiki",-2018833298),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"amp-impl","amp-impl",-148561382,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",27,true,1,1015,1015,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"re","re",1869207729,null),new cljs.core.Symbol(null,"re-form","re-form",-1297518024,null),new cljs.core.Symbol(null,"preds","preds",150921777,null),new cljs.core.Symbol(null,"pred-forms","pred-forms",1813143359,null)], null)),"Do not call this directly, use '&'",(cljs.core.truth_(cljs.spec.alpha.amp_impl)?cljs.spec.alpha.amp_impl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"cat-impl"),new cljs.core.Var(function(){return cljs.spec.alpha.cat_impl;},new cljs.core.Symbol("cljs.spec.alpha","cat-impl","cljs.spec.alpha/cat-impl",1256350867,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"skip-wiki","skip-wiki",-2018833298),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"cat-impl","cat-impl",-1538653190,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",27,true,1,994,994,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ks","ks",-754231827,null),new cljs.core.Symbol(null,"ps","ps",1932889573,null),new cljs.core.Symbol(null,"forms","forms",-608443419,null)], null)),"Do not call this directly, use 'cat'",(cljs.core.truth_(cljs.spec.alpha.cat_impl)?cljs.spec.alpha.cat_impl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"explain-str"),new cljs.core.Var(function(){return cljs.spec.alpha.explain_str;},new cljs.core.Symbol("cljs.spec.alpha","explain-str","cljs.spec.alpha/explain-str",-1558211040,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"explain-str","explain-str",-844674725,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",18,1,275,275,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Given a spec and a value that fails to conform, returns an explanation as a string.",(cljs.core.truth_(cljs.spec.alpha.explain_str)?cljs.spec.alpha.explain_str.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*compile-asserts*"),new cljs.core.Var(function(){return cljs.spec.alpha._STAR_compile_asserts_STAR_;},new cljs.core.Symbol("cljs.spec.alpha","*compile-asserts*","cljs.spec.alpha/*compile-asserts*",-1808061440,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"*compile-asserts*","*compile-asserts*",928188859,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",20,1,true,1470,1477,cljs.core.List.EMPTY,"If true, compiler will enable spec asserts, which are then\nsubject to runtime control via check-asserts? If false, compiler\nwill eliminate all spec assert overhead. See 'assert'.\nInitially set to the negation of the ':elide-asserts' compiler option.\nDefaults to true.",(cljs.core.truth_(cljs.spec.alpha._STAR_compile_asserts_STAR_)?cljs.spec.alpha._STAR_compile_asserts_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"with-gen"),new cljs.core.Var(function(){return cljs.spec.alpha.with_gen;},new cljs.core.Symbol("cljs.spec.alpha","with-gen","cljs.spec.alpha/with-gen",1999495028,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"with-gen","with-gen",344322779,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",15,1,211,211,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"gen-fn","gen-fn",-1442131341,null)], null)),"Takes a spec and a no-arg, generator-returning fn and returns a version of that spec that uses that generator",(cljs.core.truth_(cljs.spec.alpha.with_gen)?cljs.spec.alpha.with_gen.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"t_cljs$spec$alpha29049"),new cljs.core.Var(function(){return cljs.spec.alpha.t_cljs$spec$alpha29049;},new cljs.core.Symbol("cljs.spec.alpha","t_cljs$spec$alpha29049","cljs.spec.alpha/t_cljs$spec$alpha29049",1212873088,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",new cljs.core.Keyword(null,"line","line",212345235),1394,new cljs.core.Keyword(null,"column","column",2078222095),5,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_cljs$spec$alpha29049","t_cljs$spec$alpha29049",-372070597,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.spec.alpha.t_cljs$spec$alpha29049)?cljs.spec.alpha.t_cljs$spec$alpha29049.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"conform*"),new cljs.core.Var(function(){return cljs.spec.alpha.conform_STAR_;},new cljs.core.Symbol("cljs.spec.alpha","conform*","cljs.spec.alpha/conform*",-116356494,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("cljs.spec.alpha","Spec","cljs.spec.alpha/Spec",-2014630299,null),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"conform*","conform*",418951131,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",12,1,39,40,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(cljs.spec.alpha.conform_STAR_)?cljs.spec.alpha.conform_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"check-asserts?"),new cljs.core.Var(function(){return cljs.spec.alpha.check_asserts_QMARK_;},new cljs.core.Symbol("cljs.spec.alpha","check-asserts?","cljs.spec.alpha/check-asserts?",1117314706,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"check-asserts?","check-asserts?",536912891,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",30,1,1485,1485,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(cljs.core.PersistentVector.EMPTY),"Returns the value set by check-asserts.",((cljs.spec.alpha.check_asserts_QMARK_)?cljs.spec.alpha.check_asserts_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rep-impl"),new cljs.core.Var(function(){return cljs.spec.alpha.rep_impl;},new cljs.core.Symbol("cljs.spec.alpha","rep-impl","cljs.spec.alpha/rep-impl",272857093,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"skip-wiki","skip-wiki",-2018833298),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"rep-impl","rep-impl",-205840964,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",27,true,1,1006,1006,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Do not call this directly, use '*'",(cljs.core.truth_(cljs.spec.alpha.rep_impl)?cljs.spec.alpha.rep_impl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"t_cljs$spec$alpha28762"),new cljs.core.Var(function(){return cljs.spec.alpha.t_cljs$spec$alpha28762;},new cljs.core.Symbol("cljs.spec.alpha","t_cljs$spec$alpha28762","cljs.spec.alpha/t_cljs$spec$alpha28762",1556981850,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",new cljs.core.Keyword(null,"line","line",212345235),600,new cljs.core.Keyword(null,"column","column",2078222095),6,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_cljs$spec$alpha28762","t_cljs$spec$alpha28762",-47888899,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.spec.alpha.t_cljs$spec$alpha28762)?cljs.spec.alpha.t_cljs$spec$alpha28762.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"describe"),new cljs.core.Var(function(){return cljs.spec.alpha.describe;},new cljs.core.Symbol("cljs.spec.alpha","describe","cljs.spec.alpha/describe",-771408858,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"describe","describe",-1284645187,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",15,1,206,206,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null)], null)),"returns an abbreviated description of the spec as data",(cljs.core.truth_(cljs.spec.alpha.describe)?cljs.spec.alpha.describe.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"explain-out"),new cljs.core.Var(function(){return cljs.spec.alpha.explain_out;},new cljs.core.Symbol("cljs.spec.alpha","explain-out","cljs.spec.alpha/explain-out",448500742,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"explain-out","explain-out",-1143770211,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",18,1,264,264,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ed","ed",2076825751,null)], null)),"Prints explanation data (per 'explain-data') to *out* using the printer in *explain-out*,\n    by default explain-printer.",(cljs.core.truth_(cljs.spec.alpha.explain_out)?cljs.spec.alpha.explain_out.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"specize*"),new cljs.core.Var(function(){return cljs.spec.alpha.specize_STAR_;},new cljs.core.Symbol("cljs.spec.alpha","specize*","cljs.spec.alpha/specize*",-1858300394,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("cljs.spec.alpha","Specize","cljs.spec.alpha/Specize",230180600,null),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"specize*","specize*",813986047,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",12,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,131,132,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null)),null,(cljs.core.truth_(cljs.spec.alpha.specize_STAR_)?cljs.spec.alpha.specize_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"maybe-impl"),new cljs.core.Var(function(){return cljs.spec.alpha.maybe_impl;},new cljs.core.Symbol("cljs.spec.alpha","maybe-impl","cljs.spec.alpha/maybe-impl",1618854020,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"skip-wiki","skip-wiki",-2018833298),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"maybe-impl","maybe-impl",-2028622305,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",29,true,1,1048,1048,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null)),"Do not call this directly, use '?'",(cljs.core.truth_(cljs.spec.alpha.maybe_impl)?cljs.spec.alpha.maybe_impl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->t_cljs$spec$alpha28737"),new cljs.core.Var(function(){return cljs.spec.alpha.__GT_t_cljs$spec$alpha28737;},new cljs.core.Symbol("cljs.spec.alpha","->t_cljs$spec$alpha28737","cljs.spec.alpha/->t_cljs$spec$alpha28737",750614724,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol("cljs.spec.alpha","Spec","cljs.spec.alpha/Spec",-2014630299,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.spec.alpha","Specize","cljs.spec.alpha/Specize",230180600,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"->t_cljs$spec$alpha28737","->t_cljs$spec$alpha28737",-1910153633,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",true,6,new cljs.core.Keyword(null,"positional","positional",-203580463),520,cljs.core.list(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.Symbol(null,"gfn","gfn",-1862918295,null),new cljs.core.Symbol(null,"cpred?","cpred?",35589515,null),new cljs.core.Symbol(null,"unc","unc",-465250751,null),new cljs.core.Symbol(null,"meta28738","meta28738",-1436967506,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for cljs.spec.alpha/t_cljs$spec$alpha28737.",(cljs.core.truth_(cljs.spec.alpha.__GT_t_cljs$spec$alpha28737)?cljs.spec.alpha.__GT_t_cljs$spec$alpha28737.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"explain*"),new cljs.core.Var(function(){return cljs.spec.alpha.explain_STAR_;},new cljs.core.Symbol("cljs.spec.alpha","explain*","cljs.spec.alpha/explain*",-1951747324,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("cljs.spec.alpha","Spec","cljs.spec.alpha/Spec",-2014630299,null),new cljs.core.Symbol(null,"cljs.spec.alpha","cljs.spec.alpha",505122844,null),new cljs.core.Symbol(null,"explain*","explain*",-382579041,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/alpha.cljs",12,1,39,42,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"path","path",1452340359,null),new cljs.core.Symbol(null,"via","via",-263925809,null),new cljs.core.Symbol(null,"in","in",109346662,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(cljs.spec.alpha.explain_STAR_)?cljs.spec.alpha.explain_STAR_.cljs$lang$test:null)]))], null)], true))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"uuid"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.uuid;},new cljs.core.Symbol("cljs.spec.gen.alpha","uuid","cljs.spec.gen.alpha/uuid",1160791787,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"uuid","uuid",-504564192,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",64,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,74,76,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Fn returning clojure.test.check.generators/uuid",(cljs.core.truth_(cljs.spec.gen.alpha.uuid)?cljs.spec.gen.alpha.uuid.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"gen-for-pred"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.gen_for_pred;},new cljs.core.Symbol("cljs.spec.gen.alpha","gen-for-pred","cljs.spec.gen.alpha/gen-for-pred",-216859745,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"gen-for-pred","gen-for-pred",1598974784,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",19,1,144,144,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pred","pred",-727012372,null)], null)),"Given a predicate, returns a built-in generator if one exists.",(cljs.core.truth_(cljs.spec.gen.alpha.gen_for_pred)?cljs.spec.gen.alpha.gen_for_pred.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"set"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.set;},new cljs.core.Symbol("cljs.spec.gen.alpha","set","cljs.spec.gen.alpha/set",-1355541154,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"set","set",1945134081,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",50,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,70,70,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Lazy loaded version of clojure.test.check.generators/set",(cljs.core.truth_(cljs.spec.gen.alpha.set)?cljs.spec.gen.alpha.set.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"one-of"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.one_of;},new cljs.core.Symbol("cljs.spec.gen.alpha","one-of","cljs.spec.gen.alpha/one-of",-827911016,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"one-of","one-of",1784898625,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",21,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,70,71,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Lazy loaded version of clojure.test.check.generators/one-of",(cljs.core.truth_(cljs.spec.gen.alpha.one_of)?cljs.spec.gen.alpha.one_of.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"any-printable"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.any_printable;},new cljs.core.Symbol("cljs.spec.gen.alpha","any-printable","cljs.spec.gen.alpha/any-printable",-1175418902,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"any-printable","any-printable",1563768609,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",30,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,74,74,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Fn returning clojure.test.check.generators/any-printable",(cljs.core.truth_(cljs.spec.gen.alpha.any_printable)?cljs.spec.gen.alpha.any_printable.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"vector-distinct"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.vector_distinct;},new cljs.core.Symbol("cljs.spec.gen.alpha","vector-distinct","cljs.spec.gen.alpha/vector-distinct",1967788381,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"vector-distinct","vector-distinct",294553090,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",73,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,70,70,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Lazy loaded version of clojure.test.check.generators/vector-distinct",(cljs.core.truth_(cljs.spec.gen.alpha.vector_distinct)?cljs.spec.gen.alpha.vector_distinct.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"boolean"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.boolean$;},new cljs.core.Symbol("cljs.spec.gen.alpha","boolean","cljs.spec.gen.alpha/boolean",857487080,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",38,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,74,74,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Fn returning clojure.test.check.generators/boolean",(cljs.core.truth_(cljs.spec.gen.alpha.boolean$)?cljs.spec.gen.alpha.boolean$.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"string-alphanumeric"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.string_alphanumeric;},new cljs.core.Symbol("cljs.spec.gen.alpha","string-alphanumeric","cljs.spec.gen.alpha/string-alphanumeric",642708392,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"string-alphanumeric","string-alphanumeric",-2104663325,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",42,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,74,76,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Fn returning clojure.test.check.generators/string-alphanumeric",(cljs.core.truth_(cljs.spec.gen.alpha.string_alphanumeric)?cljs.spec.gen.alpha.string_alphanumeric.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"map"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.map;},new cljs.core.Symbol("cljs.spec.gen.alpha","map","cljs.spec.gen.alpha/map",398806365,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"map","map",-1282745308,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",36,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,70,70,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Lazy loaded version of clojure.test.check.generators/map",(cljs.core.truth_(cljs.spec.gen.alpha.map)?cljs.spec.gen.alpha.map.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"simple-type"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.simple_type;},new cljs.core.Symbol("cljs.spec.gen.alpha","simple-type","cljs.spec.gen.alpha/simple-type",1605958669,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"simple-type","simple-type",-1535340732,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",57,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,74,75,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Fn returning clojure.test.check.generators/simple-type",(cljs.core.truth_(cljs.spec.gen.alpha.simple_type)?cljs.spec.gen.alpha.simple_type.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"char"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.char$;},new cljs.core.Symbol("cljs.spec.gen.alpha","char","cljs.spec.gen.alpha/char",1146018830,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"char","char",998943941,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",43,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,74,74,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Fn returning clojure.test.check.generators/char",(cljs.core.truth_(cljs.spec.gen.alpha.char$)?cljs.spec.gen.alpha.char$.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"bind"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.bind;},new cljs.core.Symbol("cljs.spec.gen.alpha","bind","cljs.spec.gen.alpha/bind",-380993,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"bind","bind",1527103110,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",7,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,70,71,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Lazy loaded version of clojure.test.check.generators/bind",(cljs.core.truth_(cljs.spec.gen.alpha.bind)?cljs.spec.gen.alpha.bind.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"symbol-ns"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.symbol_ns;},new cljs.core.Symbol("cljs.spec.gen.alpha","symbol-ns","cljs.spec.gen.alpha/symbol-ns",-1174276161,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"symbol-ns","symbol-ns",1606698630,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",59,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,74,76,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Fn returning clojure.test.check.generators/symbol-ns",(cljs.core.truth_(cljs.spec.gen.alpha.symbol_ns)?cljs.spec.gen.alpha.symbol_ns.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"any"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.any;},new cljs.core.Symbol("cljs.spec.gen.alpha","any","cljs.spec.gen.alpha/any",464718831,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"any","any",-948528346,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",16,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,74,74,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Fn returning clojure.test.check.generators/any",(cljs.core.truth_(cljs.spec.gen.alpha.any)?cljs.spec.gen.alpha.any.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"shuffle"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.shuffle;},new cljs.core.Symbol("cljs.spec.gen.alpha","shuffle","cljs.spec.gen.alpha/shuffle",50697932,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"shuffle","shuffle",-1393023609,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",43,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,70,72,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Lazy loaded version of clojure.test.check.generators/shuffle",(cljs.core.truth_(cljs.spec.gen.alpha.shuffle)?cljs.spec.gen.alpha.shuffle.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"cat"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.cat;},new cljs.core.Symbol("cljs.spec.gen.alpha","cat","cljs.spec.gen.alpha/cat",-1230926879,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"cat","cat",182721320,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",10,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"gens","gens",106737606,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"gens","gens",106737606,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,78,78,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"gens","gens",106737606,null)], null)),"Returns a generator of a sequence catenated from results of\ngens, each of which should generate something sequential.",(cljs.core.truth_(cljs.spec.gen.alpha.cat)?cljs.spec.gen.alpha.cat.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"LazyVar"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.LazyVar;},new cljs.core.Symbol("cljs.spec.gen.alpha","LazyVar","cljs.spec.gen.alpha/LazyVar",1377760528,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",new cljs.core.Keyword(null,"line","line",212345235),17,new cljs.core.Keyword(null,"column","column",2078222095),10,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"LazyVar","LazyVar",240289321,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cljs.spec.gen.alpha.LazyVar)?cljs.spec.gen.alpha.LazyVar.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"double"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.double$;},new cljs.core.Symbol("cljs.spec.gen.alpha","double","cljs.spec.gen.alpha/double",960578147,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"double","double",-1769548886,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",90,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,74,74,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Fn returning clojure.test.check.generators/double",(cljs.core.truth_(cljs.spec.gen.alpha.double$)?cljs.spec.gen.alpha.double$.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"char-alpha"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.char_alpha;},new cljs.core.Symbol("cljs.spec.gen.alpha","char-alpha","cljs.spec.gen.alpha/char-alpha",843008149,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"char-alpha","char-alpha",-1752967092,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",54,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,74,74,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Fn returning clojure.test.check.generators/char-alpha",(cljs.core.truth_(cljs.spec.gen.alpha.char_alpha)?cljs.spec.gen.alpha.char_alpha.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"int"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.int$;},new cljs.core.Symbol("cljs.spec.gen.alpha","int","cljs.spec.gen.alpha/int",-2060382812,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"int","int",-100885395,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",6,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,74,75,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Fn returning clojure.test.check.generators/int",(cljs.core.truth_(cljs.spec.gen.alpha.int$)?cljs.spec.gen.alpha.int$.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->LazyVar"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.__GT_LazyVar;},new cljs.core.Symbol("cljs.spec.gen.alpha","->LazyVar","cljs.spec.gen.alpha/->LazyVar",1575855831,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("cljs.core","IDeref","cljs.core/IDeref",1331648568,null),"null"], null), null),new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"->LazyVar","->LazyVar",-106359410,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",17,1,new cljs.core.Keyword(null,"positional","positional",-203580463),17,17,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),cljs.core.with_meta(new cljs.core.Symbol(null,"cached","cached",-1216707864,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"mutable","mutable",875778266),true], null))], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("cljs.core","IDeref","cljs.core/IDeref",1331648568,null),"null"], null), null),"Positional factory function for cljs.spec.gen.alpha/LazyVar.",(cljs.core.truth_(cljs.spec.gen.alpha.__GT_LazyVar)?cljs.spec.gen.alpha.__GT_LazyVar.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"return"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.return$;},new cljs.core.Symbol("cljs.spec.gen.alpha","return","cljs.spec.gen.alpha/return",1565518169,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"return","return",-250970578,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",51,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,70,71,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Lazy loaded version of clojure.test.check.generators/return",(cljs.core.truth_(cljs.spec.gen.alpha.return$)?cljs.spec.gen.alpha.return$.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"symbol"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.symbol;},new cljs.core.Symbol("cljs.spec.gen.alpha","symbol","cljs.spec.gen.alpha/symbol",-1884956442,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"symbol","symbol",601958831,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",49,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,74,76,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Fn returning clojure.test.check.generators/symbol",(cljs.core.truth_(cljs.spec.gen.alpha.symbol)?cljs.spec.gen.alpha.symbol.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"quick-check"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.quick_check;},new cljs.core.Symbol("cljs.spec.gen.alpha","quick-check","cljs.spec.gen.alpha/quick-check",-251918570,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"quick-check","quick-check",1555674831,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,30,30,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),null,(cljs.core.truth_(cljs.spec.gen.alpha.quick_check)?cljs.spec.gen.alpha.quick_check.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"char-alphanumeric"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.char_alphanumeric;},new cljs.core.Symbol("cljs.spec.gen.alpha","char-alphanumeric","cljs.spec.gen.alpha/char-alphanumeric",771469012,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"char-alphanumeric","char-alphanumeric",-1045995537,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",72,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,74,74,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Fn returning clojure.test.check.generators/char-alphanumeric",(cljs.core.truth_(cljs.spec.gen.alpha.char_alphanumeric)?cljs.spec.gen.alpha.char_alphanumeric.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"choose"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.choose;},new cljs.core.Symbol("cljs.spec.gen.alpha","choose","cljs.spec.gen.alpha/choose",564794681,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"choose","choose",-974232464,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",14,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,70,71,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Lazy loaded version of clojure.test.check.generators/choose",(cljs.core.truth_(cljs.spec.gen.alpha.choose)?cljs.spec.gen.alpha.choose.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"for-all*"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.for_all_STAR_;},new cljs.core.Symbol("cljs.spec.gen.alpha","for-all*","cljs.spec.gen.alpha/for-all*",-671735441,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"for-all*","for-all*",1807061392,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",15,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,37,37,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Dynamically loaded clojure.test.check.properties/for-all*.",(cljs.core.truth_(cljs.spec.gen.alpha.for_all_STAR_)?cljs.spec.gen.alpha.for_all_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"string-ascii"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.string_ascii;},new cljs.core.Symbol("cljs.spec.gen.alpha","string-ascii","cljs.spec.gen.alpha/string-ascii",-1649930935,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"string-ascii","string-ascii",963419760,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",22,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,74,76,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Fn returning clojure.test.check.generators/string-ascii",(cljs.core.truth_(cljs.spec.gen.alpha.string_ascii)?cljs.spec.gen.alpha.string_ascii.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"frequency"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.frequency;},new cljs.core.Symbol("cljs.spec.gen.alpha","frequency","cljs.spec.gen.alpha/frequency",1376926618,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"frequency","frequency",231640145,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",35,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,70,72,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Lazy loaded version of clojure.test.check.generators/frequency",(cljs.core.truth_(cljs.spec.gen.alpha.frequency)?cljs.spec.gen.alpha.frequency.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"double*"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.double_STAR_;},new cljs.core.Symbol("cljs.spec.gen.alpha","double*","cljs.spec.gen.alpha/double*",416548942,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"double*","double*",-1021838991,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",25,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,70,72,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Lazy loaded version of clojure.test.check.generators/double*",(cljs.core.truth_(cljs.spec.gen.alpha.double_STAR_)?cljs.spec.gen.alpha.double_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"generate"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.generate;},new cljs.core.Symbol("cljs.spec.gen.alpha","generate","cljs.spec.gen.alpha/generate",-1135206536,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"generate","generate",1477078705,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",17,3,51,51,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"generator","generator",1067569246,null)], null)),"Generate a single value using generator.",(cljs.core.truth_(cljs.spec.gen.alpha.generate)?cljs.spec.gen.alpha.generate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"delay-impl"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.delay_impl;},new cljs.core.Symbol("cljs.spec.gen.alpha","delay-impl","cljs.spec.gen.alpha/delay-impl",-1184837112,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"skip-wiki","skip-wiki",-2018833298),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"delay-impl","delay-impl",354722609,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",29,true,1,56,56,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"gfnd","gfnd",276534612,null)], null)),null,(cljs.core.truth_(cljs.spec.gen.alpha.delay_impl)?cljs.spec.gen.alpha.delay_impl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"tuple"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.tuple;},new cljs.core.Symbol("cljs.spec.gen.alpha","tuple","cljs.spec.gen.alpha/tuple",-505921398,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"tuple","tuple",1167864243,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",37,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,70,71,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Lazy loaded version of clojure.test.check.generators/tuple",(cljs.core.truth_(cljs.spec.gen.alpha.tuple)?cljs.spec.gen.alpha.tuple.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"string"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.string;},new cljs.core.Symbol("cljs.spec.gen.alpha","string","cljs.spec.gen.alpha/string",-1325451732,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"string","string",-349010059,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",9,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,74,76,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Fn returning clojure.test.check.generators/string",(cljs.core.truth_(cljs.spec.gen.alpha.string)?cljs.spec.gen.alpha.string.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"vector"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.vector;},new cljs.core.Symbol("cljs.spec.gen.alpha","vector","cljs.spec.gen.alpha/vector",-1359885684,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"vector","vector",-751469611,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",57,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,70,70,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Lazy loaded version of clojure.test.check.generators/vector",(cljs.core.truth_(cljs.spec.gen.alpha.vector)?cljs.spec.gen.alpha.vector.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"large-integer"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.large_integer;},new cljs.core.Symbol("cljs.spec.gen.alpha","large-integer","cljs.spec.gen.alpha/large-integer",-638140017,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"large-integer","large-integer",2100515030,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",39,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,74,75,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Fn returning clojure.test.check.generators/large-integer",(cljs.core.truth_(cljs.spec.gen.alpha.large_integer)?cljs.spec.gen.alpha.large_integer.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"keyword-ns"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.keyword_ns;},new cljs.core.Symbol("cljs.spec.gen.alpha","keyword-ns","cljs.spec.gen.alpha/keyword-ns",-1180881489,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"keyword-ns","keyword-ns",366591222,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",25,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,74,75,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Fn returning clojure.test.check.generators/keyword-ns",(cljs.core.truth_(cljs.spec.gen.alpha.keyword_ns)?cljs.spec.gen.alpha.keyword_ns.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"not-empty"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.not_empty;},new cljs.core.Symbol("cljs.spec.gen.alpha","not-empty","cljs.spec.gen.alpha/not-empty",-1540165567,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"not-empty","not-empty",2029453590,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",46,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,70,70,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Lazy loaded version of clojure.test.check.generators/not-empty",(cljs.core.truth_(cljs.spec.gen.alpha.not_empty)?cljs.spec.gen.alpha.not_empty.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"elements"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.elements;},new cljs.core.Symbol("cljs.spec.gen.alpha","elements","cljs.spec.gen.alpha/elements",749148929,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"elements","elements",-1996789034,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",87,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,70,70,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Lazy loaded version of clojure.test.check.generators/elements",(cljs.core.truth_(cljs.spec.gen.alpha.elements)?cljs.spec.gen.alpha.elements.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"sample"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.sample;},new cljs.core.Symbol("cljs.spec.gen.alpha","sample","cljs.spec.gen.alpha/sample",-2084840585,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"sample","sample",1719555128,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",44,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,70,71,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Lazy loaded version of clojure.test.check.generators/sample",(cljs.core.truth_(cljs.spec.gen.alpha.sample)?cljs.spec.gen.alpha.sample.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"list"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.list;},new cljs.core.Symbol("cljs.spec.gen.alpha","list","cljs.spec.gen.alpha/list",883582435,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"list","list",-1889078086,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",32,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,70,70,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Lazy loaded version of clojure.test.check.generators/list",(cljs.core.truth_(cljs.spec.gen.alpha.list)?cljs.spec.gen.alpha.list.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"large-integer*"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.large_integer_STAR_;},new cljs.core.Symbol("cljs.spec.gen.alpha","large-integer*","cljs.spec.gen.alpha/large-integer*",-227289663,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"large-integer*","large-integer*",1454785786,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",17,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,70,72,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Lazy loaded version of clojure.test.check.generators/large-integer*",(cljs.core.truth_(cljs.spec.gen.alpha.large_integer_STAR_)?cljs.spec.gen.alpha.large_integer_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"keyword"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.keyword;},new cljs.core.Symbol("cljs.spec.gen.alpha","keyword","cljs.spec.gen.alpha/keyword",2012817843,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"keyword","keyword",-1843046022,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",14,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,74,75,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Fn returning clojure.test.check.generators/keyword",(cljs.core.truth_(cljs.spec.gen.alpha.keyword)?cljs.spec.gen.alpha.keyword.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"hash-map"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.hash_map;},new cljs.core.Symbol("cljs.spec.gen.alpha","hash-map","cljs.spec.gen.alpha/hash-map",-1643079531,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"hash-map","hash-map",-439030950,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",27,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,70,70,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Lazy loaded version of clojure.test.check.generators/hash-map",(cljs.core.truth_(cljs.spec.gen.alpha.hash_map)?cljs.spec.gen.alpha.hash_map.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ratio"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.ratio;},new cljs.core.Symbol("cljs.spec.gen.alpha","ratio","cljs.spec.gen.alpha/ratio",1314007124,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"ratio","ratio",713971483,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",45,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,74,75,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Fn returning clojure.test.check.generators/ratio",(cljs.core.truth_(cljs.spec.gen.alpha.ratio)?cljs.spec.gen.alpha.ratio.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"such-that"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.such_that;},new cljs.core.Symbol("cljs.spec.gen.alpha","such-that","cljs.spec.gen.alpha/such-that",-2113521529,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"such-that","such-that",1715619932,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",31,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,70,71,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Lazy loaded version of clojure.test.check.generators/such-that",(cljs.core.truth_(cljs.spec.gen.alpha.such_that)?cljs.spec.gen.alpha.such_that.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"fmap"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.fmap;},new cljs.core.Symbol("cljs.spec.gen.alpha","fmap","cljs.spec.gen.alpha/fmap",1863255061,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"fmap","fmap",55293788,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",78,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,70,70,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Lazy loaded version of clojure.test.check.generators/fmap",(cljs.core.truth_(cljs.spec.gen.alpha.fmap)?cljs.spec.gen.alpha.fmap.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"char-ascii"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.char_ascii;},new cljs.core.Symbol("cljs.spec.gen.alpha","char-ascii","cljs.spec.gen.alpha/char-ascii",-14033353,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"char-ascii","char-ascii",1533897086,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",83,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,74,74,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Fn returning clojure.test.check.generators/char-ascii",(cljs.core.truth_(cljs.spec.gen.alpha.char_ascii)?cljs.spec.gen.alpha.char_ascii.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"simple-type-printable"),new cljs.core.Var(function(){return cljs.spec.gen.alpha.simple_type_printable;},new cljs.core.Symbol("cljs.spec.gen.alpha","simple-type-printable","cljs.spec.gen.alpha/simple-type-printable",-972267067,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.spec.gen.alpha","cljs.spec.gen.alpha",1337138527,null),new cljs.core.Symbol(null,"simple-type-printable","simple-type-printable",1844483742,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/spec/gen/alpha.cljs",79,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,74,75,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Fn returning clojure.test.check.generators/simple-type-printable",(cljs.core.truth_(cljs.spec.gen.alpha.simple_type_printable)?cljs.spec.gen.alpha.simple_type_printable.cljs$lang$test:null)]))], null)], true))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"cljs.spec.test.alpha","cljs.spec.test.alpha",-1221684901,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.EMPTY)),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"cljs.tools.reader","cljs.tools.reader",-831293977,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"read+string"),new cljs.core.Var(function(){return cljs.tools.reader.read_PLUS_string;},new cljs.core.Symbol("cljs.tools.reader","read+string","cljs.tools.reader/read+string",651979345,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.tools.reader","cljs.tools.reader",-831293977,null),new cljs.core.Symbol(null,"read+string","read+string",-2123353757,null),"/home/runner/.gitlibs/libs/org.clojure/tools.reader/efdbaf23247e5f7fa189f7b8691411569e7fbf8c/src/main/cljs/cljs/tools/reader.cljs",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"stream","stream",-1119494121,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"stream","stream",-1119494121,null),new cljs.core.Symbol(null,"eof-error?","eof-error?",863128689,null),new cljs.core.Symbol(null,"eof-value","eof-value",30609974,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"stream","stream",-1119494121,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"stream","stream",-1119494121,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"stream","stream",-1119494121,null),new cljs.core.Symbol(null,"eof-error?","eof-error?",863128689,null),new cljs.core.Symbol(null,"eof-value","eof-value",30609974,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"stream","stream",-1119494121,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,948,948,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"stream","stream",-1119494121,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"stream","stream",-1119494121,null),new cljs.core.Symbol(null,"eof-error?","eof-error?",863128689,null),new cljs.core.Symbol(null,"eof-value","eof-value",30609974,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"stream","stream",-1119494121,null)], null)),"Like read, and taking the same args. reader must be a SourceLoggingPushbackReader.\n  Returns a vector containing the object read and the (whitespace-trimmed) string read.",(cljs.core.truth_(cljs.tools.reader.read_PLUS_string)?cljs.tools.reader.read_PLUS_string.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"bool?"),new cljs.core.Var(function(){return cljs.tools.reader.bool_QMARK_;},new cljs.core.Symbol("cljs.tools.reader","bool?","cljs.tools.reader/bool?",1878757754,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.tools.reader","cljs.tools.reader",-831293977,null),new cljs.core.Symbol(null,"bool?","bool?",-1987282872,null),"/home/runner/.gitlibs/libs/org.clojure/tools.reader/efdbaf23247e5f7fa189f7b8691411569e7fbf8c/src/main/cljs/cljs/tools/reader.cljs",12,1,690,690,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(cljs.tools.reader.bool_QMARK_)?cljs.tools.reader.bool_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*suppress-read*"),new cljs.core.Var(function(){return cljs.tools.reader._STAR_suppress_read_STAR_;},new cljs.core.Symbol("cljs.tools.reader","*suppress-read*","cljs.tools.reader/*suppress-read*",-1929043270,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.tools.reader","cljs.tools.reader",-831293977,null),new cljs.core.Symbol(null,"*suppress-read*","*suppress-read*",1470729096,null),"/home/runner/.gitlibs/libs/org.clojure/tools.reader/efdbaf23247e5f7fa189f7b8691411569e7fbf8c/src/main/cljs/cljs/tools/reader.cljs",31,1,true,857,857,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.tools.reader._STAR_suppress_read_STAR_)?cljs.tools.reader._STAR_suppress_read_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*default-data-reader-fn*"),new cljs.core.Var(function(){return cljs.tools.reader._STAR_default_data_reader_fn_STAR_;},new cljs.core.Symbol("cljs.tools.reader","*default-data-reader-fn*","cljs.tools.reader/*default-data-reader-fn*",-2087610915,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.tools.reader","cljs.tools.reader",-831293977,null),new cljs.core.Symbol(null,"*default-data-reader-fn*","*default-data-reader-fn*",758795499,null),"/home/runner/.gitlibs/libs/org.clojure/tools.reader/efdbaf23247e5f7fa189f7b8691411569e7fbf8c/src/main/cljs/cljs/tools/reader.cljs",40,1,true,850,850,cljs.core.List.EMPTY,"When no data reader is found for a tag and *default-data-reader-fn*\n  is non-nil, it will be called with two arguments, the tag and the value.\n  If *default-data-reader-fn* is nil (the default value), an exception\n  will be thrown for the unknown tag.",(cljs.core.truth_(cljs.tools.reader._STAR_default_data_reader_fn_STAR_)?cljs.tools.reader._STAR_default_data_reader_fn_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"read"),new cljs.core.Var(function(){return cljs.tools.reader.read;},new cljs.core.Symbol("cljs.tools.reader","read","cljs.tools.reader/read",-670033474,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.tools.reader","cljs.tools.reader",-831293977,null),new cljs.core.Symbol(null,"read","read",-1514377108,null),"/home/runner/.gitlibs/libs/org.clojure/tools.reader/efdbaf23247e5f7fa189f7b8691411569e7fbf8c/src/main/cljs/cljs/tools/reader.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"reader","reader",1810192380,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(null,"eof","eof",1151468290,null),new cljs.core.Keyword(null,"eof","eof",-489063237),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,"eof","eof",1151468290,null),new cljs.core.Keyword(null,"eofthrow","eofthrow",-334166531)], null)], null),new cljs.core.Symbol(null,"reader","reader",1810192380,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"reader","reader",1810192380,null),new cljs.core.Symbol(null,"eof-error?","eof-error?",863128689,null),new cljs.core.Symbol(null,"sentinel","sentinel",-1745785176,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"reader","reader",1810192380,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(null,"eof","eof",1151468290,null),new cljs.core.Keyword(null,"eof","eof",-489063237),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,"eof","eof",1151468290,null),new cljs.core.Keyword(null,"eofthrow","eofthrow",-334166531)], null)], null),new cljs.core.Symbol(null,"reader","reader",1810192380,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"reader","reader",1810192380,null),new cljs.core.Symbol(null,"eof-error?","eof-error?",863128689,null),new cljs.core.Symbol(null,"sentinel","sentinel",-1745785176,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,913,913,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"reader","reader",1810192380,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(null,"eof","eof",1151468290,null),new cljs.core.Keyword(null,"eof","eof",-489063237),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,"eof","eof",1151468290,null),new cljs.core.Keyword(null,"eofthrow","eofthrow",-334166531)], null)], null),new cljs.core.Symbol(null,"reader","reader",1810192380,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"reader","reader",1810192380,null),new cljs.core.Symbol(null,"eof-error?","eof-error?",863128689,null),new cljs.core.Symbol(null,"sentinel","sentinel",-1745785176,null)], null)),"Reads the first object from an IPushbackReader.\n   Returns the object read. If EOF, throws if eof-error? is true.\n   Otherwise returns sentinel. If no stream is provided, *in* will be used.\n\n   Opts is a persistent map with valid keys:\n    :read-cond - :allow to process reader conditionals, or\n                 :preserve to keep all branches\n    :features - persistent set of feature keywords for reader conditionals\n    :eof - on eof, return value unless :eofthrow, then throw.\n           if not specified, will throw\n\n   To read data structures only, use cljs.tools.reader.edn/read\n\n   Note that the function signature of cljs.tools.reader/read and\n   cljs.tools.reader.edn/read is not the same for eof-handling",(cljs.core.truth_(cljs.tools.reader.read)?cljs.tools.reader.read.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"default-data-readers"),new cljs.core.Var(function(){return cljs.tools.reader.default_data_readers;},new cljs.core.Symbol("cljs.tools.reader","default-data-readers","cljs.tools.reader/default-data-readers",970322264,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.tools.reader","cljs.tools.reader",-831293977,null),new cljs.core.Symbol(null,"default-data-readers","default-data-readers",1738676398,null),"/home/runner/.gitlibs/libs/org.clojure/tools.reader/efdbaf23247e5f7fa189f7b8691411569e7fbf8c/src/main/cljs/cljs/tools/reader.cljs",26,1,859,859,cljs.core.List.EMPTY,"Default map of data reader functions provided by Clojure.\n  May be overridden by binding *data-readers*",(cljs.core.truth_(cljs.tools.reader.default_data_readers)?cljs.tools.reader.default_data_readers.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*data-readers*"),new cljs.core.Var(function(){return cljs.tools.reader._STAR_data_readers_STAR_;},new cljs.core.Symbol("cljs.tools.reader","*data-readers*","cljs.tools.reader/*data-readers*",-451836532,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.tools.reader","cljs.tools.reader",-831293977,null),new cljs.core.Symbol(null,"*data-readers*","*data-readers*",1269051058,null),"/home/runner/.gitlibs/libs/org.clojure/tools.reader/efdbaf23247e5f7fa189f7b8691411569e7fbf8c/src/main/cljs/cljs/tools/reader.cljs",30,1,true,843,843,cljs.core.List.EMPTY,"Map from reader tag symbols to data reader Vars.\n  Reader tags without namespace qualifiers are reserved for Clojure.\n  This light version of tools.reader has no implementation for default\n  reader tags such as #inst and #uuid.",(cljs.core.truth_(cljs.tools.reader._STAR_data_readers_STAR_)?cljs.tools.reader._STAR_data_readers_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*read-delim*"),new cljs.core.Var(function(){return cljs.tools.reader._STAR_read_delim_STAR_;},new cljs.core.Symbol("cljs.tools.reader","*read-delim*","cljs.tools.reader/*read-delim*",-42053887,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.tools.reader","cljs.tools.reader",-831293977,null),new cljs.core.Symbol(null,"*read-delim*","*read-delim*",-1748880301,null),"/home/runner/.gitlibs/libs/org.clojure/tools.reader/efdbaf23247e5f7fa189f7b8691411569e7fbf8c/src/main/cljs/cljs/tools/reader.cljs",28,1,true,194,194,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.tools.reader._STAR_read_delim_STAR_)?cljs.tools.reader._STAR_read_delim_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"resolve-symbol"),new cljs.core.Var(function(){return cljs.tools.reader.resolve_symbol;},new cljs.core.Symbol("cljs.tools.reader","resolve-symbol","cljs.tools.reader/resolve-symbol",-514401619,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.tools.reader","cljs.tools.reader",-831293977,null),new cljs.core.Symbol(null,"resolve-symbol","resolve-symbol",1321364563,null),"/home/runner/.gitlibs/libs/org.clojure/tools.reader/efdbaf23247e5f7fa189f7b8691411569e7fbf8c/src/main/cljs/cljs/tools/reader.cljs",31,1,true,695,695,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Resolve a symbol s into its fully qualified namespace version",(cljs.core.truth_(cljs.tools.reader.resolve_symbol)?cljs.tools.reader.resolve_symbol.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*alias-map*"),new cljs.core.Var(function(){return cljs.tools.reader._STAR_alias_map_STAR_;},new cljs.core.Symbol("cljs.tools.reader","*alias-map*","cljs.tools.reader/*alias-map*",689067642,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.tools.reader","cljs.tools.reader",-831293977,null),new cljs.core.Symbol(null,"*alias-map*","*alias-map*",-2086207564,null),"/home/runner/.gitlibs/libs/org.clojure/tools.reader/efdbaf23247e5f7fa189f7b8691411569e7fbf8c/src/main/cljs/cljs/tools/reader.cljs",27,1,true,347,347,cljs.core.List.EMPTY,"Map from ns alias to ns, if non-nil, it will be used to resolve read-time\n   ns aliases.\n\n   Defaults to nil",(cljs.core.truth_(cljs.tools.reader._STAR_alias_map_STAR_)?cljs.tools.reader._STAR_alias_map_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"read-regex"),new cljs.core.Var(function(){return cljs.tools.reader.read_regex;},new cljs.core.Symbol("cljs.tools.reader","read-regex","cljs.tools.reader/read-regex",1003901636,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.tools.reader","cljs.tools.reader",-831293977,null),new cljs.core.Symbol(null,"read-regex","read-regex",-2145253898,null),"/home/runner/.gitlibs/libs/org.clojure/tools.reader/efdbaf23247e5f7fa189f7b8691411569e7fbf8c/src/main/cljs/cljs/tools/reader.cljs",17,1,85,85,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,"rdr","rdr",190007785,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"not-native","not-native",-236392494,null)], null)),new cljs.core.Symbol(null,"ch","ch",1085813622,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"pending-forms","pending-forms",-1225172071,null)], null)),null,(cljs.core.truth_(cljs.tools.reader.read_regex)?cljs.tools.reader.read_regex.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"sb"),new cljs.core.Var(function(){return cljs.tools.reader.sb;},new cljs.core.Symbol("cljs.tools.reader","sb","cljs.tools.reader/sb",443419320,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.tools.reader","cljs.tools.reader",-831293977,null),new cljs.core.Symbol(null,"sb","sb",-1249746442,null),"/home/runner/.gitlibs/libs/org.clojure/tools.reader/efdbaf23247e5f7fa189f7b8691411569e7fbf8c/src/main/cljs/cljs/tools/reader.cljs",8,1,46,46,cljs.core.List.EMPTY,null,(cljs.core.truth_(cljs.tools.reader.sb)?cljs.tools.reader.sb.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"read-string"),new cljs.core.Var(function(){return cljs.tools.reader.read_string;},new cljs.core.Symbol("cljs.tools.reader","read-string","cljs.tools.reader/read-string",-2133130889,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.tools.reader","cljs.tools.reader",-831293977,null),new cljs.core.Symbol(null,"read-string","read-string",-558384455,null),"/home/runner/.gitlibs/libs/org.clojure/tools.reader/efdbaf23247e5f7fa189f7b8691411569e7fbf8c/src/main/cljs/cljs/tools/reader.cljs",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,934,934,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Reads one object from the string s.\n   Returns nil when s is nil or empty.\n\n   To read data structures only, use cljs.tools.reader.edn/read-string\n\n   Note that the function signature of cljs.tools.reader/read-string and\n   cljs.tools.reader.edn/read-string is not the same for eof-handling",(cljs.core.truth_(cljs.tools.reader.read_string)?cljs.tools.reader.read_string.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"map-func"),new cljs.core.Var(function(){return cljs.tools.reader.map_func;},new cljs.core.Symbol("cljs.tools.reader","map-func","cljs.tools.reader/map-func",2128448778,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.tools.reader","cljs.tools.reader",-831293977,null),new cljs.core.Symbol(null,"map-func","map-func",556164316,null),"/home/runner/.gitlibs/libs/org.clojure/tools.reader/efdbaf23247e5f7fa189f7b8691411569e7fbf8c/src/main/cljs/cljs/tools/reader.cljs",15,1,683,683,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coll","coll",-1006698606,null)], null)),"Decide which map type to use, array-map if less than 16 elements",(cljs.core.truth_(cljs.tools.reader.map_func)?cljs.tools.reader.map_func.cljs$lang$test:null)]))], null)], null))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"next-after"),new cljs.core.Var(function(){return cljs.math.next_after;},new cljs.core.Symbol("cljs.math","next-after","cljs.math/next-after",-1088675035,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"next-after","next-after",1465112353,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",25,1,742,742,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"start","start",1285322546,null),new cljs.core.Symbol(null,"direction","direction",1007172132,null)], null)),"Returns the adjacent floating point number to start in the direction of\n  the second argument. If the arguments are equal, the second is returned.\n  If either arg is #NaN => #NaN\n  If both arguments are signed zeros => direction\n  If start is +-Number/MIN_VALUE and direction would cause a smaller magnitude\n    => zero with sign matching start\n  If start is ##Inf or ##-Inf and direction would cause a smaller magnitude\n    => Number/MAX_VALUE with same sign as start\n  If start is equal to +=Number/MAX_VALUE and direction would cause a larger magnitude\n    => ##Inf or ##-Inf with sign matching start\n  See: https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#nextAfter-double-double-",(cljs.core.truth_(cljs.math.next_after)?cljs.math.next_after.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"to-radians"),new cljs.core.Var(function(){return cljs.math.to_radians;},new cljs.core.Symbol("cljs.math","to-radians","cljs.math/to-radians",1249751214,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"to-radians","to-radians",-1564562270,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",25,1,126,126,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"deg","deg",958975446,null)], null)),"Converts an angle in degrees to an approximate equivalent angle in radians.\n  See: https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#toRadians-double-",(cljs.core.truth_(cljs.math.to_radians)?cljs.math.to_radians.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"log"),new cljs.core.Var(function(){return cljs.math.log;},new cljs.core.Symbol("cljs.math","log","cljs.math/log",1835212287,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"log","log",45015523,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",18,1,149,149,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null)),"Returns the natural logarithm (base e) of a.\n  If a is ##NaN or negative => ##NaN\n  If a is ##Inf => ##Inf\n  If a is zero => ##-Inf\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/log",(cljs.core.truth_(cljs.math.log)?cljs.math.log.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"acos"),new cljs.core.Var(function(){return cljs.math.acos;},new cljs.core.Symbol("cljs.math","acos","cljs.math/acos",-840384561,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"acos","acos",353741763,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",19,1,111,111,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null)),"Returns the arc cosine of a, in the range 0.0 to pi.\n  If a is ##NaN or |a|>1 => ##NaN\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/acos",(cljs.core.truth_(cljs.math.acos)?cljs.math.acos.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"to-degrees"),new cljs.core.Var(function(){return cljs.math.to_degrees;},new cljs.core.Symbol("cljs.math","to-degrees","cljs.math/to-degrees",372097128,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"to-degrees","to-degrees",1314929764,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",25,1,133,133,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null)], null)),"Converts an angle in radians to an approximate equivalent angle in degrees.\n  See: https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#toDegrees-double-",(cljs.core.truth_(cljs.math.to_degrees)?cljs.math.to_degrees.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"floor"),new cljs.core.Var(function(){return cljs.math.floor;},new cljs.core.Symbol("cljs.math","floor","cljs.math/floor",-130732800,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"floor","floor",-772394748,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",20,1,425,425,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null)),"Returns the largest double less than or equal to a, and equal to a\n  mathematical integer.\n  If a is ##NaN or ##Inf or ##-Inf or already equal to an integer => a\n  If a is less than zero but greater than -1.0 => -0.0\n  Note that if a is `nil` then an exception will be thrown. This matches Clojure, rather than js/Math.floor\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/floor",(cljs.core.truth_(cljs.math.floor)?cljs.math.floor.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"atan2"),new cljs.core.Var(function(){return cljs.math.atan2;},new cljs.core.Symbol("cljs.math","atan2","cljs.math/atan2",-1641453312,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"atan2","atan2",-134972156,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",20,1,478,478,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"y","y",-117328249,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns the angle theta from the conversion of rectangular coordinates (x, y) to polar coordinates (r, theta).\n  Computes the phase theta by computing an arc tangent of y/x in the range of -pi to pi.\n  For more details on special cases, see:\n  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/atan",(cljs.core.truth_(cljs.math.atan2)?cljs.math.atan2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"hypot"),new cljs.core.Var(function(){return cljs.math.hypot;},new cljs.core.Symbol("cljs.math","hypot","cljs.math/hypot",-199432063,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"hypot","hypot",205644933,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",20,1,699,699,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null)], null)),"Returns sqrt(x^2 + y^2) without intermediate underflow or overflow.\n  If x or y is ##Inf or ##-Inf => ##Inf\n  If x or y is ##NaN and neither is ##Inf or ##-Inf => ##NaN\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/hypot",(cljs.core.truth_(cljs.math.hypot)?cljs.math.hypot.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"tanh"),new cljs.core.Var(function(){return cljs.math.tanh;},new cljs.core.Symbol("cljs.math","tanh","cljs.math/tanh",610311737,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"tanh","tanh",480481797,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",19,1,689,689,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns the hyperbolic tangent of x, sinh(x)/cosh(x).\n  If x is ##NaN => ##NaN\n  If x is zero => zero, with same sign\n  If x is ##Inf => +1.0\n  If x is ##-Inf => -1.0\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/tanh",(cljs.core.truth_(cljs.math.tanh)?cljs.math.tanh.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"floor-mod"),new cljs.core.Var(function(){return cljs.math.floor_mod;},new cljs.core.Symbol("cljs.math","floor-mod","cljs.math/floor-mod",-816885246,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"floor-mod","floor-mod",378160646,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",24,1,584,584,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null)], null)),"Integer modulus x - (floorDiv(x, y) * y). Sign matches y and is in the\n  range -|y| < r < |y|.\n  See: https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#floorMod-long-long-",(cljs.core.truth_(cljs.math.floor_mod)?cljs.math.floor_mod.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ceil"),new cljs.core.Var(function(){return cljs.math.ceil;},new cljs.core.Symbol("cljs.math","ceil","cljs.math/ceil",222779819,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"ceil","ceil",-184398425,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",19,1,413,413,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null)),"Returns the smallest double greater than or equal to a, and equal to a\n  mathematical integer.\n  If a is ##NaN or ##Inf or ##-Inf or already equal to an integer => a\n  Note that if a is `nil` then an exception will be thrown. This matches Clojure, rather than js/Math.ceil\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/ceil",(cljs.core.truth_(cljs.math.ceil)?cljs.math.ceil.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"atan"),new cljs.core.Var(function(){return cljs.math.atan;},new cljs.core.Symbol("cljs.math","atan","cljs.math/atan",723323533,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"atan","atan",-1026550135,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",19,1,118,118,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null)),"Returns the arc tangent of a, in the range of -pi/2 to pi/2.\n  If a is ##NaN => ##NaN\n  If a is zero => zero with the same sign as a\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/atan",(cljs.core.truth_(cljs.math.atan)?cljs.math.atan.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"multiply-exact"),new cljs.core.Var(function(){return cljs.math.multiply_exact;},new cljs.core.Symbol("cljs.math","multiply-exact","cljs.math/multiply-exact",1389141070,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"multiply-exact","multiply-exact",2055835722,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",29,1,534,534,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null)], null)),"Returns the product of x and y, throws ArithmeticException on overflow. ",(cljs.core.truth_(cljs.math.multiply_exact)?cljs.math.multiply_exact.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"expm1"),new cljs.core.Var(function(){return cljs.math.expm1;},new cljs.core.Symbol("cljs.math","expm1","cljs.math/expm1",-299913042,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"expm1","expm1",-960312150,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",20,1,707,707,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns e^x - 1. Near 0, expm1(x)+1 is more accurate to e^x than exp(x).\n  If x is ##NaN => ##NaN\n  If x is ##Inf => #Inf\n  If x is ##-Inf => -1.0\n  If x is zero => x\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/expm1",(cljs.core.truth_(cljs.math.expm1)?cljs.math.expm1.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"get-exponent"),new cljs.core.Var(function(){return cljs.math.get_exponent;},new cljs.core.Symbol("cljs.math","get-exponent","cljs.math/get-exponent",-574752394,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"get-exponent","get-exponent",100142410,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",27,1,599,599,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"d","d",-682293345,null)], null)),"Returns the exponent of d.\n  If d is ##NaN, ##Inf, ##-Inf => max_Float64_exponent + 1\n  If d is zero or subnormal => min_Float64_exponent - 1\n  See: https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#getExponent-double-",(cljs.core.truth_(cljs.math.get_exponent)?cljs.math.get_exponent.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"add-exact"),new cljs.core.Var(function(){return cljs.math.add_exact;},new cljs.core.Symbol("cljs.math","add-exact","cljs.math/add-exact",1772761702,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"add-exact","add-exact",-1310251414,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",24,1,516,516,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null)], null)),"Returns the sum of x and y, throws an exception on overflow. ",(cljs.core.truth_(cljs.math.add_exact)?cljs.math.add_exact.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"cos"),new cljs.core.Var(function(){return cljs.math.cos;},new cljs.core.Symbol("cljs.math","cos","cljs.math/cos",1361875639,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"cos","cos",-1452677493,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",18,1,88,88,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null)),"Returns the cosine of an angle.\n  If a is ##NaN, ##-Inf, ##Inf => ##NaN\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/cos",(cljs.core.truth_(cljs.math.cos)?cljs.math.cos.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"log10"),new cljs.core.Var(function(){return cljs.math.log10;},new cljs.core.Symbol("cljs.math","log10","cljs.math/log10",-581074993,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"log10","log10",891257803,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",20,1,158,158,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null)),"Returns the logarithm (base 10) of a.\n  If a is ##NaN or negative => ##NaN\n  If a is ##Inf => ##Inf\n  If a is zero => ##-Inf\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/log10",(cljs.core.truth_(cljs.math.log10)?cljs.math.log10.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"tan"),new cljs.core.Var(function(){return cljs.math.tan;},new cljs.core.Symbol("cljs.math","tan","cljs.math/tan",1971286288,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"tan","tan",-1380825876,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",18,1,95,95,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null)),"Returns the tangent of an angle.\n  If a is ##NaN, ##-Inf, ##Inf => ##NaN\n  If a is zero => zero with the same sign as a\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/tan",(cljs.core.truth_(cljs.math.tan)?cljs.math.tan.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"cbrt"),new cljs.core.Var(function(){return cljs.math.cbrt;},new cljs.core.Symbol("cljs.math","cbrt","cljs.math/cbrt",431619368,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"cbrt","cbrt",-235140820,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",19,1,176,176,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null)),"Returns the cube root of a.\n  If a is ##NaN => ##NaN\n  If a is ##Inf or ##-Inf => a\n  If a is zero => zero with sign matching a\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/cbrt",(cljs.core.truth_(cljs.math.cbrt)?cljs.math.cbrt.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"sqrt"),new cljs.core.Var(function(){return cljs.math.sqrt;},new cljs.core.Symbol("cljs.math","sqrt","cljs.math/sqrt",1876434402,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"sqrt","sqrt",370479598,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",19,1,167,167,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null)),"Returns the positive square root of a.\n  If a is ##NaN or negative => ##NaN\n  If a is ##Inf => ##Inf\n  If a is zero => a\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sqrt",(cljs.core.truth_(cljs.math.sqrt)?cljs.math.sqrt.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"decrement-exact"),new cljs.core.Var(function(){return cljs.math.decrement_exact;},new cljs.core.Symbol("cljs.math","decrement-exact","cljs.math/decrement-exact",-318594613,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"decrement-exact","decrement-exact",-2059293233,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",30,1,551,551,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null)),"Returns a decremented by 1, throws ArithmeticException on overflow. ",(cljs.core.truth_(cljs.math.decrement_exact)?cljs.math.decrement_exact.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"PI"),new cljs.core.Var(function(){return cljs.math.PI;},new cljs.core.Symbol("cljs.math","PI","cljs.math/PI",128741355,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"const","const",1709929842),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"PI","PI",-9477137,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",20,1,true,12,17,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.List.EMPTY,"Constant for pi, the ratio of the circumference of a circle to its diameter.\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/PI",(cljs.core.truth_(cljs.math.PI)?cljs.math.PI.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"next-down"),new cljs.core.Var(function(){return cljs.math.next_down;},new cljs.core.Symbol("cljs.math","next-down","cljs.math/next-down",2112444436,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"next-down","next-down",-2059951088,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",24,1,816,816,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"d","d",-682293345,null)], null)),"Returns the adjacent double of d in the direction of ##-Inf.\n  If d is ##NaN => ##NaN\n  If d is ##Inf => Number/MAX_VALUE\n  If d is zero => -Number/MIN_VALUE\n  See: https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#nextDown-double-",(cljs.core.truth_(cljs.math.next_down)?cljs.math.next_down.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"pow"),new cljs.core.Var(function(){return cljs.math.pow;},new cljs.core.Symbol("cljs.math","pow","cljs.math/pow",-210509964,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"pow","pow",196526960,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",18,1,486,486,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)),"Returns the value of a raised to the power of b.\n  For more details on special cases, see:\n  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/pow",(cljs.core.truth_(cljs.math.pow)?cljs.math.pow.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"next-up"),new cljs.core.Var(function(){return cljs.math.next_up;},new cljs.core.Symbol("cljs.math","next-up","cljs.math/next-up",-73329772,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"next-up","next-up",-1813766256,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",22,1,790,790,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"d","d",-682293345,null)], null)),"Returns the adjacent double of d in the direction of ##Inf.\n  If d is ##NaN => ##NaN\n  If d is ##Inf => ##Inf\n  If d is zero => Number/MIN_VALUE\n  See: https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#nextUp-double-",(cljs.core.truth_(cljs.math.next_up)?cljs.math.next_up.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"exp"),new cljs.core.Var(function(){return cljs.math.exp;},new cljs.core.Symbol("cljs.math","exp","cljs.math/exp",-1175705547,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"exp","exp",1378825265,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",18,1,140,140,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null)),"Returns Euler's number e raised to the power of a.\n  If a is ##NaN => ##NaN\n  If a is ##Inf => ##Inf\n  If a is ##-Inf => +0.0\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/exp",(cljs.core.truth_(cljs.math.exp)?cljs.math.exp.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"subtract-exact"),new cljs.core.Var(function(){return cljs.math.subtract_exact;},new cljs.core.Symbol("cljs.math","subtract-exact","cljs.math/subtract-exact",669336214,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"subtract-exact","subtract-exact",-811180398,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",29,1,525,525,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null)], null)),"Returns the difference of x and y, throws ArithmeticException on overflow. ",(cljs.core.truth_(cljs.math.subtract_exact)?cljs.math.subtract_exact.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"cosh"),new cljs.core.Var(function(){return cljs.math.cosh;},new cljs.core.Symbol("cljs.math","cosh","cljs.math/cosh",1657222870,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"cosh","cosh",-1962788142,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",19,1,680,680,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns the hyperbolic cosine of x, (e^x + e^-x)/2.\n  If x is ##NaN => ##NaN\n  If x is ##Inf or ##-Inf => ##Inf\n  If x is zero => 1.0\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/cosh",(cljs.core.truth_(cljs.math.cosh)?cljs.math.cosh.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"scalb"),new cljs.core.Var(function(){return cljs.math.scalb;},new cljs.core.Symbol("cljs.math","scalb","cljs.math/scalb",-1710173743,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"scalb","scalb",1918748117,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",20,1,847,847,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"d","d",-682293345,null),new cljs.core.Symbol(null,"scaleFactor","scaleFactor",-1915682314,null)], null)),"Returns d * 2^scaleFactor, scaling by a factor of 2. If the exponent\n  is between min_Float64_exponent and max_Float64_exponent.\n  scaleFactor is an integer\n  If d is ##NaN => ##NaN\n  If d is ##Inf or ##-Inf => ##Inf or ##-Inf respectively\n  If d is zero => zero of same sign as d\n  See: https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#nextDown-double-",(cljs.core.truth_(cljs.math.scalb)?cljs.math.scalb.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"log1p"),new cljs.core.Var(function(){return cljs.math.log1p;},new cljs.core.Symbol("cljs.math","log1p","cljs.math/log1p",1802109642,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"log1p","log1p",-1825632554,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",20,1,717,717,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns ln(1+x). For small values of x, log1p(x) is more accurate than\n  log(1.0+x).\n  If x is ##NaN or ##-Inf or < -1 => ##NaN\n  If x is -1 => ##-Inf\n  If x is ##Inf => ##Inf\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/log1p",(cljs.core.truth_(cljs.math.log1p)?cljs.math.log1p.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"asin"),new cljs.core.Var(function(){return cljs.math.asin;},new cljs.core.Symbol("cljs.math","asin","cljs.math/asin",576259058,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"asin","asin",-904130570,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",19,1,103,103,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null)),"Returns the arc sine of an angle, in the range -pi/2 to pi/2.\n  If a is ##NaN or |a|>1 => ##NaN\n  If a is zero => zero with the same sign as a\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/asin",(cljs.core.truth_(cljs.math.asin)?cljs.math.asin.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"copy-sign"),new cljs.core.Var(function(){return cljs.math.copy_sign;},new cljs.core.Symbol("cljs.math","copy-sign","cljs.math/copy-sign",-1502169613,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"copy-sign","copy-sign",-1907652105,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",24,1,438,438,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"magnitude","magnitude",-730161547,null),new cljs.core.Symbol(null,"sign","sign",-1392714102,null)], null)),"Returns a double with the magnitude of the first argument and the sign of\n  the second.\n  See: https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#copySign-double-double-",(cljs.core.truth_(cljs.math.copy_sign)?cljs.math.copy_sign.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"round"),new cljs.core.Var(function(){return cljs.math.round;},new cljs.core.Symbol("cljs.math","round","cljs.math/round",-1312590029,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"round","round",-645002441,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",20,1,493,493,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null)),"Returns the closest long to a. If equally close to two values, return the one\n  closer to ##Inf.\n  If a is ##NaN => 0\n  If a is ##-Inf => js/Number.MIN_SAFE_INTEGER\n  If a is ##Inf => js/Number.MAX_SAFE_INTEGER\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round",(cljs.core.truth_(cljs.math.round)?cljs.math.round.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"negate-exact"),new cljs.core.Var(function(){return cljs.math.negate_exact;},new cljs.core.Symbol("cljs.math","negate-exact","cljs.math/negate-exact",559751781,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"negate-exact","negate-exact",1226323577,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",27,1,559,559,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null)),"Returns the negation of a, throws ArithmeticException on overflow. ",(cljs.core.truth_(cljs.math.negate_exact)?cljs.math.negate_exact.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"E"),new cljs.core.Var(function(){return cljs.math.E;},new cljs.core.Symbol("cljs.math","E","cljs.math/E",-1211754635,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"const","const",1709929842),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"E","E",1871381369,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",19,1,true,5,10,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.List.EMPTY,"Constant for Euler's number e, the base for natural logarithms.\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/E",(cljs.core.truth_(cljs.math.E)?cljs.math.E.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"IEEE-remainder"),new cljs.core.Var(function(){return cljs.math.IEEE_remainder;},new cljs.core.Symbol("cljs.math","IEEE-remainder","cljs.math/IEEE-remainder",1683252566,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"IEEE-remainder","IEEE-remainder",1016551770,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",29,1,335,335,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dividend","dividend",1540160115,null),new cljs.core.Symbol(null,"divisor","divisor",1615502407,null)], null)),"Returns the remainder per IEEE 754 such that\n    remainder = dividend - divisor * n\n   where n is the integer closest to the exact value of dividend / divisor.\n   If two integers are equally close, then n is the even one.\n   If the remainder is zero, sign will match dividend.\n   If dividend or divisor is ##NaN, or dividend is ##Inf or ##-Inf, or divisor is zero => ##NaN\n   If dividend is finite and divisor is infinite => dividend\n\n   Method: based on fmod return x-[x/p]chopped*p exactlp.\n   Ported from: https://github.com/openjdk/jdk/blob/master/src/java.base/share/native/libfdlibm/e_remainder.c\n   See: https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#IEEEremainder-double-double-",(cljs.core.truth_(cljs.math.IEEE_remainder)?cljs.math.IEEE_remainder.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"sinh"),new cljs.core.Var(function(){return cljs.math.sinh;},new cljs.core.Symbol("cljs.math","sinh","cljs.math/sinh",489835238,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"sinh","sinh",-990423302,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",19,1,672,672,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns the hyperbolic sine of x, (e^x - e^-x)/2.\n  If x is ##NaN => ##NaN\n  If x is ##Inf or ##-Inf or zero => x\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sinh",(cljs.core.truth_(cljs.math.sinh)?cljs.math.sinh.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rint"),new cljs.core.Var(function(){return cljs.math.rint;},new cljs.core.Symbol("cljs.math","rint","cljs.math/rint",1939865446,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"rint","rint",-1689197702,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",19,1,465,465,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null)),"Returns the double closest to a and equal to a mathematical integer.\n  If two values are equally close, return the even one.\n  If a is ##NaN or ##Inf or ##-Inf or zero => a\n  See: https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#rint-double-",(cljs.core.truth_(cljs.math.rint)?cljs.math.rint.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ulp"),new cljs.core.Var(function(){return cljs.math.ulp;},new cljs.core.Symbol("cljs.math","ulp","cljs.math/ulp",-470666632,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"ulp","ulp",-879804804,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",18,1,636,636,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"d","d",-682293345,null)], null)),"Returns the size of an ulp (unit in last place) for d.\n  If d is ##NaN => ##NaN\n  If d is ##Inf or ##-Inf => ##Inf\n  If d is zero => Number/MIN_VALUE\n  If d is +/- Number/MAX_VALUE => 2^971\n  See: https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#ulp-double-",(cljs.core.truth_(cljs.math.ulp)?cljs.math.ulp.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"sin"),new cljs.core.Var(function(){return cljs.math.sin;},new cljs.core.Symbol("cljs.math","sin","cljs.math/sin",1046878353,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"sin","sin",1721439389,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",18,1,80,80,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null)),"Returns the sine of an angle.\n  If a is ##NaN, ##-Inf, ##Inf => ##NaN\n  If a is zero => zero with the same sign as a\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sin",(cljs.core.truth_(cljs.math.sin)?cljs.math.sin.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"increment-exact"),new cljs.core.Var(function(){return cljs.math.increment_exact;},new cljs.core.Symbol("cljs.math","increment-exact","cljs.math/increment-exact",-1629018159,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"increment-exact","increment-exact",-450618403,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",30,1,543,543,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null)),"Returns a incremented by 1, throws ArithmeticException on overflow.",(cljs.core.truth_(cljs.math.increment_exact)?cljs.math.increment_exact.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"random"),new cljs.core.Var(function(){return cljs.math.random;},new cljs.core.Symbol("cljs.math","random","cljs.math/random",952906898,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"random","random",1082720414,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",21,1,508,508,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(cljs.core.PersistentVector.EMPTY),"Returns a positive double between 0.0 and 1.0, chosen pseudorandomly with\n  approximately random distribution. Not cryptographically secure. The seed is chosen internally\n  and cannot be selected.\n  See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random",(cljs.core.truth_(cljs.math.random)?cljs.math.random.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"floor-div"),new cljs.core.Var(function(){return cljs.math.floor_div;},new cljs.core.Symbol("cljs.math","floor-div","cljs.math/floor-div",1925275106,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"floor-div","floor-div",704924158,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",24,1,571,571,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null)], null)),"Integer division that rounds to negative infinity (as opposed to zero).\n  See: https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#floorDiv-long-long-",(cljs.core.truth_(cljs.math.floor_div)?cljs.math.floor_div.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"signum"),new cljs.core.Var(function(){return cljs.math.signum;},new cljs.core.Symbol("cljs.math","signum","cljs.math/signum",-309735886,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.11.10",new cljs.core.Symbol(null,"cljs.math","cljs.math",-1774648847,null),new cljs.core.Symbol(null,"signum","signum",-2050172354,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/math.cljs",21,1,661,661,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"d","d",-682293345,null)], null)),"Returns the signum function of d - zero for zero, 1.0 if >0, -1.0 if <0.\n  If d is ##NaN => ##NaN\n  If d is ##Inf or ##-Inf => sign of d\n  See: https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#signum-double-",(cljs.core.truth_(cljs.math.signum)?cljs.math.signum.cljs$lang$test:null)]))], null)], true))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"cljs.repl","cljs.repl",1767065658,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"print-doc"),new cljs.core.Var(function(){return cljs.repl.print_doc;},new cljs.core.Symbol("cljs.repl","print-doc","cljs.repl/print-doc",-139226021,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.repl","cljs.repl",1767065658,null),new cljs.core.Symbol(null,"print-doc","print-doc",528043232,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/repl.cljs",16,1,15,15,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"nm","nm",-188384525,null),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)], null)),null,(cljs.core.truth_(cljs.repl.print_doc)?cljs.repl.print_doc.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"Error->map"),new cljs.core.Var(function(){return cljs.repl.Error__GT_map;},new cljs.core.Symbol("cljs.repl","Error->map","cljs.repl/Error->map",-769436504,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.repl","cljs.repl",1767065658,null),new cljs.core.Symbol(null,"Error->map","Error->map",-99078947,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/repl.cljs",17,1,62,62,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"o","o",290524299,null)], null)),"Constructs a data representation for a Error with keys:\n    :cause - root cause message\n    :phase - error phase\n    :via - cause chain, with cause keys:\n             :type - exception class symbol\n             :message - exception message\n             :data - ex-data\n             :at - top stack element\n    :trace - root cause stack elements",(cljs.core.truth_(cljs.repl.Error__GT_map)?cljs.repl.Error__GT_map.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ex-triage"),new cljs.core.Var(function(){return cljs.repl.ex_triage;},new cljs.core.Symbol("cljs.repl","ex-triage","cljs.repl/ex-triage",1049541888,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.repl","cljs.repl",1767065658,null),new cljs.core.Symbol(null,"ex-triage","ex-triage",382330271,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/repl.cljs",16,1,99,99,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"datafied-throwable","datafied-throwable",-1514806764,null)], null)),"Returns an analysis of the phase, error, cause, and location of an error that occurred\n  based on Throwable data, as returned by Throwable->map. All attributes other than phase\n  are optional:\n    :clojure.error/phase - keyword phase indicator, one of:\n      :read-source :compile-syntax-check :compilation :macro-syntax-check :macroexpansion\n      :execution :read-eval-result :print-eval-result\n    :clojure.error/source - file name (no path)\n    :clojure.error/line - integer line number\n    :clojure.error/column - integer column number\n    :clojure.error/symbol - symbol being expanded/compiled/invoked\n    :clojure.error/class - cause exception class symbol\n    :clojure.error/cause - cause exception message\n    :clojure.error/spec - explain-data for spec error",(cljs.core.truth_(cljs.repl.ex_triage)?cljs.repl.ex_triage.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ex-str"),new cljs.core.Var(function(){return cljs.repl.ex_str;},new cljs.core.Symbol("cljs.repl","ex-str","cljs.repl/ex-str",-202613597,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.repl","cljs.repl",1767065658,null),new cljs.core.Symbol(null,"ex-str","ex-str",-1683286980,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/repl.cljs",13,1,156,156,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword("clojure.error","keys","clojure.error/keys",-656321644),new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"phase","phase",-2078712877,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"line","line",1852876762,null),new cljs.core.Symbol(null,"column","column",-576213674,null),new cljs.core.Symbol(null,"symbol","symbol",601958831,null),new cljs.core.Symbol(null,"class","class",-390430469,null),new cljs.core.Symbol(null,"cause","cause",1872432779,null),new cljs.core.Symbol(null,"spec","spec",1988051928,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"triage-data","triage-data",1705117181,null)], null)], null)),"Returns a string from exception data, as produced by ex-triage.\n  The first line summarizes the exception phase and location.\n  The subsequent lines describe the cause.",(cljs.core.truth_(cljs.repl.ex_str)?cljs.repl.ex_str.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"error->str"),new cljs.core.Var(function(){return cljs.repl.error__GT_str;},new cljs.core.Symbol("cljs.repl","error->str","cljs.repl/error->str",-346255539,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cljs.repl","cljs.repl",1767065658,null),new cljs.core.Symbol(null,"error->str","error->str",882112464,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/cljs/repl.cljs",17,1,229,229,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"error","error",661562495,null)], null)),null,(cljs.core.truth_(cljs.repl.error__GT_str)?cljs.repl.error__GT_str.cljs$lang$test:null)]))], null)], null))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"clojure.walk","clojure.walk",1625897340,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"walk"),new cljs.core.Var(function(){return clojure.walk.walk;},new cljs.core.Symbol("clojure.walk","walk","clojure.walk/walk",-1248308991,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.1",new cljs.core.Symbol(null,"clojure.walk","clojure.walk",1625897340,null),new cljs.core.Symbol(null,"walk","walk",1673453164,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/walk.cljs",11,1,37,37,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"inner","inner",257360312,null),new cljs.core.Symbol(null,"outer","outer",1265345571,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null)),"Traverses form, an arbitrary data structure.  inner and outer are\n  functions.  Applies inner to each element of form, building up a\n  data structure of the same type, then applies outer to the result.\n  Recognizes all Clojure data structures. Consumes seqs as with doall.",(cljs.core.truth_(clojure.walk.walk)?clojure.walk.walk.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"postwalk"),new cljs.core.Var(function(){return clojure.walk.postwalk;},new cljs.core.Symbol("clojure.walk","postwalk","clojure.walk/postwalk",390418997,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.1",new cljs.core.Symbol(null,"clojure.walk","clojure.walk",1625897340,null),new cljs.core.Symbol(null,"postwalk","postwalk",967039904,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/walk.cljs",15,1,54,54,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null)),"Performs a depth-first, post-order traversal of form.  Calls f on\n  each sub-form, uses f's return value in place of the original.\n  Recognizes all Clojure data structures. Consumes seqs as with doall.",(cljs.core.truth_(clojure.walk.postwalk)?clojure.walk.postwalk.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"prewalk"),new cljs.core.Var(function(){return clojure.walk.prewalk;},new cljs.core.Symbol("clojure.walk","prewalk","clojure.walk/prewalk",2041225925,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.1",new cljs.core.Symbol(null,"clojure.walk","clojure.walk",1625897340,null),new cljs.core.Symbol(null,"prewalk","prewalk",1337993264,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/walk.cljs",14,1,62,62,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null)),"Like postwalk, but does pre-order traversal.",(cljs.core.truth_(clojure.walk.prewalk)?clojure.walk.prewalk.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"keywordize-keys"),new cljs.core.Var(function(){return clojure.walk.keywordize_keys;},new cljs.core.Symbol("clojure.walk","keywordize-keys","clojure.walk/keywordize-keys",-1055520580,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.1",new cljs.core.Symbol(null,"clojure.walk","clojure.walk",1625897340,null),new cljs.core.Symbol(null,"keywordize-keys","keywordize-keys",-1343651517,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/walk.cljs",22,1,68,68,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Recursively transforms all map keys from strings to keywords.",(cljs.core.truth_(clojure.walk.keywordize_keys)?clojure.walk.keywordize_keys.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"stringify-keys"),new cljs.core.Var(function(){return clojure.walk.stringify_keys;},new cljs.core.Symbol("clojure.walk","stringify-keys","clojure.walk/stringify-keys",826865042,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.1",new cljs.core.Symbol(null,"clojure.walk","clojure.walk",1625897340,null),new cljs.core.Symbol(null,"stringify-keys","stringify-keys",1735215919,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/walk.cljs",21,1,76,76,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Recursively transforms all map keys from keywords to strings.",(cljs.core.truth_(clojure.walk.stringify_keys)?clojure.walk.stringify_keys.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"prewalk-replace"),new cljs.core.Var(function(){return clojure.walk.prewalk_replace;},new cljs.core.Symbol("clojure.walk","prewalk-replace","clojure.walk/prewalk-replace",-1875809699,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.1",new cljs.core.Symbol(null,"clojure.walk","clojure.walk",1625897340,null),new cljs.core.Symbol(null,"prewalk-replace","prewalk-replace",2117002030,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/walk.cljs",22,1,84,84,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"smap","smap",-2041991975,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null)),"Recursively transforms form by replacing keys in smap with their\n  values.  Like clojure/replace but works on any data structure.  Does\n  replacement at the root of the tree first.",(cljs.core.truth_(clojure.walk.prewalk_replace)?clojure.walk.prewalk_replace.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"postwalk-replace"),new cljs.core.Var(function(){return clojure.walk.postwalk_replace;},new cljs.core.Symbol("clojure.walk","postwalk-replace","clojure.walk/postwalk-replace",-691552050,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"added","added",2057651688),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],["1.1",new cljs.core.Symbol(null,"clojure.walk","clojure.walk",1625897340,null),new cljs.core.Symbol(null,"postwalk-replace","postwalk-replace",77744733,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/walk.cljs",23,1,92,92,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"smap","smap",-2041991975,null),new cljs.core.Symbol(null,"form","form",16469056,null)], null)),"Recursively transforms form by replacing keys in smap with their\n  values.  Like clojure/replace but works on any data structure.  Does\n  replacement at the leaves of the tree first.",(cljs.core.truth_(clojure.walk.postwalk_replace)?clojure.walk.postwalk_replace.cljs$lang$test:null)]))], null)], null))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"clojure.string","clojure.string",-1415552165,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ends-with?"),new cljs.core.Var(function(){return clojure.string.ends_with_QMARK_;},new cljs.core.Symbol("clojure.string","ends-with?","clojure.string/ends-with?",-745964149,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.string","clojure.string",-1415552165,null),new cljs.core.Symbol(null,"ends-with?","ends-with?",-346570208,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/string.cljs",26,1,282,282,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"substr","substr",-2116301839,null)], null)),"True if s ends with substr.",((clojure.string.ends_with_QMARK_)?clojure.string.ends_with_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"capitalize"),new cljs.core.Var(function(){return clojure.string.capitalize;},new cljs.core.Symbol("clojure.string","capitalize","clojure.string/capitalize",-1457954373,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.string","clojure.string",-1415552165,null),new cljs.core.Symbol(null,"capitalize","capitalize",-2143275164,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/string.cljs",25,1,129,129,new cljs.core.Symbol(null,"string","string",-349010059,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Converts first character of the string to upper-case, all other\n  characters to lower-case.",(cljs.core.truth_(clojure.string.capitalize)?clojure.string.capitalize.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"reverse"),new cljs.core.Var(function(){return clojure.string.reverse;},new cljs.core.Symbol("clojure.string","reverse","clojure.string/reverse",872943162,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.string","clojure.string",-1415552165,null),new cljs.core.Symbol(null,"reverse","reverse",752076261,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/string.cljs",22,1,21,21,new cljs.core.Symbol(null,"string","string",-349010059,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns s with its characters reversed.",(cljs.core.truth_(clojure.string.reverse)?clojure.string.reverse.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"join"),new cljs.core.Var(function(){return clojure.string.join;},new cljs.core.Symbol("clojure.string","join","clojure.string/join",-539723360,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.string","clojure.string",-1415552165,null),new cljs.core.Symbol(null,"join","join",881669637,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/string.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coll","coll",-1006698606,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"separator","separator",11782402,null),new cljs.core.Symbol(null,"coll","coll",-1006698606,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coll","coll",-1006698606,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"separator","separator",11782402,null),new cljs.core.Symbol(null,"coll","coll",-1006698606,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,100,100,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coll","coll",-1006698606,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"separator","separator",11782402,null),new cljs.core.Symbol(null,"coll","coll",-1006698606,null)], null)),"Returns a string of all elements in coll, as returned by (seq coll),\n  separated by an optional separator.",(cljs.core.truth_(clojure.string.join)?clojure.string.join.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"replace-first"),new cljs.core.Var(function(){return clojure.string.replace_first;},new cljs.core.Symbol("clojure.string","replace-first","clojure.string/replace-first",-289687200,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.string","clojure.string",-1415552165,null),new cljs.core.Symbol(null,"replace-first","replace-first",-943534331,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/string.cljs",28,1,76,76,new cljs.core.Symbol(null,"string","string",-349010059,null),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"match","match",-1434376219,null),new cljs.core.Symbol(null,"replacement","replacement",-195707312,null)], null)),"Replaces the first instance of match with replacement in s.\n\n   match/replacement can be:\n\n   string / string\n   pattern / (string or function of match).\n\n   See also replace.\n\n   The replacement is literal (i.e. none of its characters are treated\n   specially) for all cases above except pattern / string.\n\n   For pattern / string, $1, $2, etc. in the replacement string are\n   substituted with the string that matched the corresponding\n   parenthesized group in the pattern.\n\n   Example:\n   (clojure.string/replace-first \"swap first two words\"\n                                 #\"(\\w+)(\\s+)(\\w+)\" \"$3$2$1\")\n   -> \"first swap two words\"",(cljs.core.truth_(clojure.string.replace_first)?clojure.string.replace_first.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"starts-with?"),new cljs.core.Var(function(){return clojure.string.starts_with_QMARK_;},new cljs.core.Symbol("clojure.string","starts-with?","clojure.string/starts-with?",656256322,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.string","clojure.string",-1415552165,null),new cljs.core.Symbol(null,"starts-with?","starts-with?",1014173927,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/string.cljs",28,1,277,277,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"substr","substr",-2116301839,null)], null)),"True if s starts with substr.",((clojure.string.starts_with_QMARK_)?clojure.string.starts_with_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"escape"),new cljs.core.Var(function(){return clojure.string.escape;},new cljs.core.Symbol("clojure.string","escape","clojure.string/escape",507665272,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.string","clojure.string",-1415552165,null),new cljs.core.Symbol(null,"escape","escape",648929575,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/string.cljs",21,1,230,230,new cljs.core.Symbol(null,"string","string",-349010059,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"cmap","cmap",1947829886,null)], null)),"Return a new string, using cmap to escape each character ch\n   from s as follows:\n\n   If (cmap ch) is nil, append ch to the new string.\n   If (cmap ch) is non-nil, append (str (cmap ch)) instead.",(cljs.core.truth_(clojure.string.escape)?clojure.string.escape.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"last-index-of"),new cljs.core.Var(function(){return clojure.string.last_index_of;},new cljs.core.Symbol("clojure.string","last-index-of","clojure.string/last-index-of",369054165,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.string","clojure.string",-1415552165,null),new cljs.core.Symbol(null,"last-index-of","last-index-of",215608200,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/string.cljs",20,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"value","value",1946509744,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"value","value",1946509744,null),new cljs.core.Symbol(null,"from-index","from-index",1882766240,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"value","value",1946509744,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"value","value",1946509744,null),new cljs.core.Symbol(null,"from-index","from-index",1882766240,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,263,263,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"value","value",1946509744,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"value","value",1946509744,null),new cljs.core.Symbol(null,"from-index","from-index",1882766240,null)], null)),"Return last index of value (string or char) in s, optionally\n  searching backward from from-index or nil if not found.",(cljs.core.truth_(clojure.string.last_index_of)?clojure.string.last_index_of.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"includes?"),new cljs.core.Var(function(){return clojure.string.includes_QMARK_;},new cljs.core.Symbol("clojure.string","includes?","clojure.string/includes?",-1842146260,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.string","clojure.string",-1415552165,null),new cljs.core.Symbol(null,"includes?","includes?",-2049283381,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/string.cljs",25,1,287,287,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"substr","substr",-2116301839,null)], null)),"True if s includes substr.",((clojure.string.includes_QMARK_)?clojure.string.includes_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"replace"),new cljs.core.Var(function(){return clojure.string.replace;},new cljs.core.Symbol("clojure.string","replace","clojure.string/replace",465523638,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.string","clojure.string",-1415552165,null),new cljs.core.Symbol(null,"replace","replace",853943757,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/string.cljs",22,1,44,44,new cljs.core.Symbol(null,"string","string",-349010059,null),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"match","match",-1434376219,null),new cljs.core.Symbol(null,"replacement","replacement",-195707312,null)], null)),"Replaces all instance of match with replacement in s.\n\n   match/replacement can be:\n\n   string / string\n   pattern / (string or function of match).\n\n   See also replace-first.\n\n   The replacement is literal (i.e. none of its characters are treated\n   specially) for all cases above except pattern / string.\n\n   For pattern / string, $1, $2, etc. in the replacement string are\n   substituted with the string that matched the corresponding\n   parenthesized group in the pattern.\n\n   Example:\n   (clojure.string/replace \"Almost Pig Latin\" #\"\\b(\\w)(\\w+)\\b\" \"$2$1ay\")\n   -> \"lmostAay igPay atinLay\"",(cljs.core.truth_(clojure.string.replace)?clojure.string.replace.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"split-lines"),new cljs.core.Var(function(){return clojure.string.split_lines;},new cljs.core.Symbol("clojure.string","split-lines","clojure.string/split-lines",125642090,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.string","clojure.string",-1415552165,null),new cljs.core.Symbol(null,"split-lines","split-lines",777513935,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/string.cljs",18,1,192,192,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Splits s on \\n or \\r\\n. Trailing empty lines are not returned.",(cljs.core.truth_(clojure.string.split_lines)?clojure.string.split_lines.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"lower-case"),new cljs.core.Var(function(){return clojure.string.lower_case;},new cljs.core.Symbol("clojure.string","lower-case","clojure.string/lower-case",1816618551,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.string","clojure.string",-1415552165,null),new cljs.core.Symbol(null,"lower-case","lower-case",1428172944,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/string.cljs",25,1,124,124,new cljs.core.Symbol(null,"string","string",-349010059,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Converts string to all lower-case.",(cljs.core.truth_(clojure.string.lower_case)?clojure.string.lower_case.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"trim-newline"),new cljs.core.Var(function(){return clojure.string.trim_newline;},new cljs.core.Symbol("clojure.string","trim-newline","clojure.string/trim-newline",475888463,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.string","clojure.string",-1415552165,null),new cljs.core.Symbol(null,"trim-newline","trim-newline",656815794,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/string.cljs",27,1,212,212,new cljs.core.Symbol(null,"string","string",-349010059,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Removes all trailing newline \\n or return \\r characters from\n  string.  Similar to Perl's chomp.",(cljs.core.truth_(clojure.string.trim_newline)?clojure.string.trim_newline.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"upper-case"),new cljs.core.Var(function(){return clojure.string.upper_case;},new cljs.core.Symbol("clojure.string","upper-case","clojure.string/upper-case",2084082434,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.string","clojure.string",-1415552165,null),new cljs.core.Symbol(null,"upper-case","upper-case",1427515769,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/string.cljs",25,1,119,119,new cljs.core.Symbol(null,"string","string",-349010059,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Converts string to all upper-case.",(cljs.core.truth_(clojure.string.upper_case)?clojure.string.upper_case.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"split"),new cljs.core.Var(function(){return clojure.string.split;},new cljs.core.Symbol("clojure.string","split","clojure.string/split",651388004,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.string","clojure.string",-1415552165,null),new cljs.core.Symbol(null,"split","split",1041096409,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/string.cljs",12,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"re","re",1869207729,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"re","re",1869207729,null),new cljs.core.Symbol(null,"limit","limit",284709164,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"re","re",1869207729,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"re","re",1869207729,null),new cljs.core.Symbol(null,"limit","limit",284709164,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,167,167,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"re","re",1869207729,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"re","re",1869207729,null),new cljs.core.Symbol(null,"limit","limit",284709164,null)], null)),"Splits string on a regular expression. Optional argument limit is\n  the maximum number of parts. Not lazy. Returns vector of the parts.\n  Trailing empty strings are not returned - pass limit of -1 to return all.",(cljs.core.truth_(clojure.string.split)?clojure.string.split.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"trimr"),new cljs.core.Var(function(){return clojure.string.trimr;},new cljs.core.Symbol("clojure.string","trimr","clojure.string/trimr",2003851954,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.string","clojure.string",-1415552165,null),new cljs.core.Symbol(null,"trimr","trimr",-1739157155,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/string.cljs",20,1,207,207,new cljs.core.Symbol(null,"string","string",-349010059,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Removes whitespace from the right side of string.",(cljs.core.truth_(clojure.string.trimr)?clojure.string.trimr.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"index-of"),new cljs.core.Var(function(){return clojure.string.index_of;},new cljs.core.Symbol("clojure.string","index-of","clojure.string/index-of",1428561254,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.string","clojure.string",-1415552165,null),new cljs.core.Symbol(null,"index-of","index-of",1275975485,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/string.cljs",15,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"value","value",1946509744,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"value","value",1946509744,null),new cljs.core.Symbol(null,"from-index","from-index",1882766240,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"value","value",1946509744,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"value","value",1946509744,null),new cljs.core.Symbol(null,"from-index","from-index",1882766240,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,249,249,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"value","value",1946509744,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"value","value",1946509744,null),new cljs.core.Symbol(null,"from-index","from-index",1882766240,null)], null)),"Return index of value (string or char) in s, optionally searching\n  forward from from-index or nil if not found.",(cljs.core.truth_(clojure.string.index_of)?clojure.string.index_of.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"trim"),new cljs.core.Var(function(){return clojure.string.trim;},new cljs.core.Symbol("clojure.string","trim","clojure.string/trim",-1498124613,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.string","clojure.string",-1415552165,null),new cljs.core.Symbol(null,"trim","trim",-1880116002,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/string.cljs",19,1,197,197,new cljs.core.Symbol(null,"string","string",-349010059,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Removes whitespace from both ends of string.",(cljs.core.truth_(clojure.string.trim)?clojure.string.trim.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"triml"),new cljs.core.Var(function(){return clojure.string.triml;},new cljs.core.Symbol("clojure.string","triml","clojure.string/triml",-176087643,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.string","clojure.string",-1415552165,null),new cljs.core.Symbol(null,"triml","triml",-286546306,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/string.cljs",20,1,202,202,new cljs.core.Symbol(null,"string","string",-349010059,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Removes whitespace from the left side of string.",(cljs.core.truth_(clojure.string.triml)?clojure.string.triml.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"blank?"),new cljs.core.Var(function(){return clojure.string.blank_QMARK_;},new cljs.core.Symbol("clojure.string","blank?","clojure.string/blank?",1772874244,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.string","clojure.string",-1415552165,null),new cljs.core.Symbol(null,"blank?","blank?",1891979743,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/string.cljs",22,1,225,225,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"True if s is nil, empty, or contains only whitespace.",((clojure.string.blank_QMARK_)?clojure.string.blank_QMARK_.cljs$lang$test:null)]))], null)], null))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"clojure.set","clojure.set",-630955632,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"union"),new cljs.core.Var(function(){return clojure.set.union;},new cljs.core.Symbol("clojure.set","union","clojure.set/union",-71291846,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.set","clojure.set",-630955632,null),new cljs.core.Symbol(null,"union","union",-511498270,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/set.cljs",12,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s1","s1",338671490,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s1","s1",338671490,null),new cljs.core.Symbol(null,"s2","s2",614604262,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s1","s1",338671490,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s1","s1",338671490,null),new cljs.core.Symbol(null,"s2","s2",614604262,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s1","s1",338671490,null),new cljs.core.Symbol(null,"s2","s2",614604262,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"sets","sets",2041487109,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null,null)], null),1,19,19,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s1","s1",338671490,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s1","s1",338671490,null),new cljs.core.Symbol(null,"s2","s2",614604262,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s1","s1",338671490,null),new cljs.core.Symbol(null,"s2","s2",614604262,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"sets","sets",2041487109,null)], null)),"Return a set that is the union of the input sets",(cljs.core.truth_(clojure.set.union)?clojure.set.union.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"map-invert"),new cljs.core.Var(function(){return clojure.set.map_invert;},new cljs.core.Symbol("clojure.set","map-invert","clojure.set/map-invert",1632506396,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.set","clojure.set",-630955632,null),new cljs.core.Symbol(null,"map-invert","map-invert",1258886340,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/set.cljs",17,1,97,97,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Returns the map with the vals mapped to the keys.",(cljs.core.truth_(clojure.set.map_invert)?clojure.set.map_invert.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"join"),new cljs.core.Var(function(){return clojure.set.join;},new cljs.core.Symbol("clojure.set","join","clojure.set/join",-621789763,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.set","clojure.set",-630955632,null),new cljs.core.Symbol(null,"join","join",881669637,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/set.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xrel","xrel",-735800081,null),new cljs.core.Symbol(null,"yrel","yrel",-1573821256,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xrel","xrel",-735800081,null),new cljs.core.Symbol(null,"yrel","yrel",-1573821256,null),new cljs.core.Symbol(null,"km","km",-1276648257,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xrel","xrel",-735800081,null),new cljs.core.Symbol(null,"yrel","yrel",-1573821256,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xrel","xrel",-735800081,null),new cljs.core.Symbol(null,"yrel","yrel",-1573821256,null),new cljs.core.Symbol(null,"km","km",-1276648257,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,105,105,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xrel","xrel",-735800081,null),new cljs.core.Symbol(null,"yrel","yrel",-1573821256,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xrel","xrel",-735800081,null),new cljs.core.Symbol(null,"yrel","yrel",-1573821256,null),new cljs.core.Symbol(null,"km","km",-1276648257,null)], null)),"When passed 2 rels, returns the rel corresponding to the natural\n  join. When passed an additional keymap, joins on the corresponding\n  keys.",(cljs.core.truth_(clojure.set.join)?clojure.set.join.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"select"),new cljs.core.Var(function(){return clojure.set.select;},new cljs.core.Symbol("clojure.set","select","clojure.set/select",-2081547970,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.set","clojure.set",-630955632,null),new cljs.core.Symbol(null,"select","select",-1506602266,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/set.cljs",13,1,61,61,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.Symbol(null,"xset","xset",-371743149,null)], null)),"Returns a set of the elements for which pred is true",(cljs.core.truth_(clojure.set.select)?clojure.set.select.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"intersection"),new cljs.core.Var(function(){return clojure.set.intersection;},new cljs.core.Symbol("clojure.set","intersection","clojure.set/intersection",-1478098847,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.set","clojure.set",-630955632,null),new cljs.core.Symbol(null,"intersection","intersection",-650544759,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/set.cljs",19,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s1","s1",338671490,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s1","s1",338671490,null),new cljs.core.Symbol(null,"s2","s2",614604262,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s1","s1",338671490,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s1","s1",338671490,null),new cljs.core.Symbol(null,"s2","s2",614604262,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s1","s1",338671490,null),new cljs.core.Symbol(null,"s2","s2",614604262,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"sets","sets",2041487109,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,31,31,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s1","s1",338671490,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s1","s1",338671490,null),new cljs.core.Symbol(null,"s2","s2",614604262,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s1","s1",338671490,null),new cljs.core.Symbol(null,"s2","s2",614604262,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"sets","sets",2041487109,null)], null)),"Return a set that is the intersection of the input sets",(cljs.core.truth_(clojure.set.intersection)?clojure.set.intersection.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"superset?"),new cljs.core.Var(function(){return clojure.set.superset_QMARK_;},new cljs.core.Symbol("clojure.set","superset?","clojure.set/superset?",22098740,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.set","clojure.set",-630955632,null),new cljs.core.Symbol(null,"superset?","superset?",2074872204,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/set.cljs",16,1,141,141,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"set1","set1",-1952562536,null),new cljs.core.Symbol(null,"set2","set2",1231516531,null)], null)),"Is set1 a superset of set2?",(cljs.core.truth_(clojure.set.superset_QMARK_)?clojure.set.superset_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"index"),new cljs.core.Var(function(){return clojure.set.index;},new cljs.core.Symbol("clojure.set","index","clojure.set/index",1009901700,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.set","clojure.set",-630955632,null),new cljs.core.Symbol(null,"index","index",108845612,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/set.cljs",12,1,87,87,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xrel","xrel",-735800081,null),new cljs.core.Symbol(null,"ks","ks",-754231827,null)], null)),"Returns a map of the distinct values of ks in the xrel mapped to a\n  set of the maps in xrel with the corresponding values of ks.",(cljs.core.truth_(clojure.set.index)?clojure.set.index.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"subset?"),new cljs.core.Var(function(){return clojure.set.subset_QMARK_;},new cljs.core.Symbol("clojure.set","subset?","clojure.set/subset?",909155479,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.set","clojure.set",-630955632,null),new cljs.core.Symbol(null,"subset?","subset?",1551079215,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/set.cljs",14,1,135,135,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"set1","set1",-1952562536,null),new cljs.core.Symbol(null,"set2","set2",1231516531,null)], null)),"Is set1 a subset of set2?",(cljs.core.truth_(clojure.set.subset_QMARK_)?clojure.set.subset_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rename"),new cljs.core.Var(function(){return clojure.set.rename;},new cljs.core.Symbol("clojure.set","rename","clojure.set/rename",-1779816356,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.set","clojure.set",-630955632,null),new cljs.core.Symbol(null,"rename","rename",-1146278156,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/set.cljs",13,1,82,82,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xrel","xrel",-735800081,null),new cljs.core.Symbol(null,"kmap","kmap",-2108296910,null)], null)),"Returns a rel of the maps in xrel with the keys in kmap renamed to the vals in kmap",(cljs.core.truth_(clojure.set.rename)?clojure.set.rename.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rename-keys"),new cljs.core.Var(function(){return clojure.set.rename_keys;},new cljs.core.Symbol("clojure.set","rename-keys","clojure.set/rename-keys",996223920,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.set","clojure.set",-630955632,null),new cljs.core.Symbol(null,"rename-keys","rename-keys",355340888,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/set.cljs",18,1,72,72,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"map","map",-1282745308,null),new cljs.core.Symbol(null,"kmap","kmap",-2108296910,null)], null)),"Returns the map with the keys in kmap renamed to the vals in kmap",(cljs.core.truth_(clojure.set.rename_keys)?clojure.set.rename_keys.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"project"),new cljs.core.Var(function(){return clojure.set.project;},new cljs.core.Symbol("clojure.set","project","clojure.set/project",-829527518,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.set","clojure.set",-630955632,null),new cljs.core.Symbol(null,"project","project",-1530041190,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/set.cljs",14,1,67,67,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xrel","xrel",-735800081,null),new cljs.core.Symbol(null,"ks","ks",-754231827,null)], null)),"Returns a rel of the elements of xrel with only the keys in ks",(cljs.core.truth_(clojure.set.project)?clojure.set.project.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"difference"),new cljs.core.Var(function(){return clojure.set.difference;},new cljs.core.Symbol("clojure.set","difference","clojure.set/difference",-1178931405,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.set","clojure.set",-630955632,null),new cljs.core.Symbol(null,"difference","difference",-738334373,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/set.cljs",17,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s1","s1",338671490,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s1","s1",338671490,null),new cljs.core.Symbol(null,"s2","s2",614604262,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s1","s1",338671490,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s1","s1",338671490,null),new cljs.core.Symbol(null,"s2","s2",614604262,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s1","s1",338671490,null),new cljs.core.Symbol(null,"s2","s2",614604262,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"sets","sets",2041487109,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,46,46,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s1","s1",338671490,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s1","s1",338671490,null),new cljs.core.Symbol(null,"s2","s2",614604262,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s1","s1",338671490,null),new cljs.core.Symbol(null,"s2","s2",614604262,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"sets","sets",2041487109,null)], null)),"Return a set that is the first set without elements of the remaining sets",(cljs.core.truth_(clojure.set.difference)?clojure.set.difference.cljs$lang$test:null)]))], null)], null))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"clojure.data","clojure.data",-2083828516,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"diff"),new cljs.core.Var(function(){return clojure.data.diff;},new cljs.core.Symbol("clojure.data","diff","clojure.data/diff",-683865998,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.data","clojure.data",-2083828516,null),new cljs.core.Symbol(null,"diff","diff",-518492986,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/data.cljs",11,1,144,144,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)),"Recursively compares a and b, returning a tuple of\n  [things-only-in-a things-only-in-b things-in-both].\n  Comparison rules:\n\n  * For equal a and b, return [nil nil a].\n  * Maps are subdiffed where keys match and values differ.\n  * Sets are never subdiffed.\n  * All sequential things are treated as associative collections\n    by their indexes, with results returned as vectors.\n  * Everything else (including strings!) is treated as\n    an atom and compared for equality.",(cljs.core.truth_(clojure.data.diff)?clojure.data.diff.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"equality-partition"),new cljs.core.Var(function(){return clojure.data.equality_partition;},new cljs.core.Symbol("clojure.data","equality-partition","clojure.data/equality-partition",-1501847714,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("clojure.data","EqualityPartition","clojure.data/EqualityPartition",-2099186728,null),new cljs.core.Symbol(null,"clojure.data","clojure.data",-2083828516,null),new cljs.core.Symbol(null,"equality-partition","equality-partition",1419043626,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/data.cljs",22,1,75,77,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Implementation detail. Subject to change.",(cljs.core.truth_(clojure.data.equality_partition)?clojure.data.equality_partition.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"EqualityPartition"),new cljs.core.Var(function(){return clojure.data.EqualityPartition;},new cljs.core.Symbol("clojure.data","EqualityPartition","clojure.data/EqualityPartition",-2099186728,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol-symbol","protocol-symbol",1279552198),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"protocol-info","protocol-info",1471745843),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"sigs","sigs",-1653119622),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"jsdoc","jsdoc",1745183516),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"clojure.data","clojure.data",-2083828516,null),new cljs.core.Symbol(null,"EqualityPartition","EqualityPartition",-255599508,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/data.cljs",31,1,75,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"methods","methods",453930866),new cljs.core.PersistentArrayMap(null, 1, [cljs.core.with_meta(new cljs.core.Symbol(null,"equality-partition","equality-partition",1419043626,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Implementation detail. Subject to change."], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)], null)], null)], null),75,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"equality-partition","equality-partition",-221487901),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"equality-partition","equality-partition",1419043626,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Implementation detail. Subject to change."], null)], null),cljs.core.List.EMPTY,"Implementation detail. Subject to change.",cljs.core.list("@interface"),(cljs.core.truth_(clojure.data.EqualityPartition)?clojure.data.EqualityPartition.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"diff-similar"),new cljs.core.Var(function(){return clojure.data.diff_similar;},new cljs.core.Symbol("clojure.data","diff-similar","clojure.data/diff-similar",1072499067,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("clojure.data","Diff","clojure.data/Diff",-1724958619,null),new cljs.core.Symbol(null,"clojure.data","clojure.data",-2083828516,null),new cljs.core.Symbol(null,"diff-similar","diff-similar",230692495,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/data.cljs",16,1,79,81,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)),"Implementation detail. Subject to change.",(cljs.core.truth_(clojure.data.diff_similar)?clojure.data.diff_similar.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"Diff"),new cljs.core.Var(function(){return clojure.data.Diff;},new cljs.core.Symbol("clojure.data","Diff","clojure.data/Diff",-1724958619,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol-symbol","protocol-symbol",1279552198),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"protocol-info","protocol-info",1471745843),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"sigs","sigs",-1653119622),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"jsdoc","jsdoc",1745183516),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"clojure.data","clojure.data",-2083828516,null),new cljs.core.Symbol(null,"Diff","Diff",-1425488399,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/data.cljs",18,1,79,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"methods","methods",453930866),new cljs.core.PersistentArrayMap(null, 1, [cljs.core.with_meta(new cljs.core.Symbol(null,"diff-similar","diff-similar",230692495,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Implementation detail. Subject to change."], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)], null)], null)], null),79,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"diff-similar","diff-similar",-1409839032),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"diff-similar","diff-similar",230692495,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Implementation detail. Subject to change."], null)], null),cljs.core.List.EMPTY,"Implementation detail. Subject to change.",cljs.core.list("@interface"),(cljs.core.truth_(clojure.data.Diff)?clojure.data.Diff.cljs$lang$test:null)]))], null)], null))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"clojure.edn","clojure.edn",-302325352,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"read"),new cljs.core.Var(function(){return clojure.edn.read;},new cljs.core.Symbol("clojure.edn","read","clojure.edn/read",1333732915,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.edn","clojure.edn",-302325352,null),new cljs.core.Symbol(null,"read","read",-1514377108,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/edn.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),4,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),4,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"reader","reader",1810192380,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"reader","reader",1810192380,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"reader","reader",1810192380,null),new cljs.core.Symbol(null,"eof-error?","eof-error?",863128689,null),new cljs.core.Symbol(null,"eof","eof",1151468290,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"reader","reader",1810192380,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"reader","reader",1810192380,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"reader","reader",1810192380,null),new cljs.core.Symbol(null,"eof-error?","eof-error?",863128689,null),new cljs.core.Symbol(null,"eof","eof",1151468290,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,20,20,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"reader","reader",1810192380,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"reader","reader",1810192380,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"reader","reader",1810192380,null),new cljs.core.Symbol(null,"eof-error?","eof-error?",863128689,null),new cljs.core.Symbol(null,"eof","eof",1151468290,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),"Reads the first object from an cljs.tools.reader.reader-types/IPushbackReader.\n   Returns the object read. If EOF, throws if eof-error? is true otherwise returns eof.\n   If no reader is provided, *in* will be used.\n\n   Reads data in the edn format (subset of Clojure data):\n   http://edn-format.org\n\n   cljs.tools.reader.edn/read doesn't depend on dynamic Vars, all configuration\n   is done by passing an opt map.\n\n   opts is a map that can include the following keys:\n   :eof - value to return on end-of-file. When not supplied, eof throws an exception.\n   :readers  - a map of tag symbols to data-reader functions to be considered before default-data-readers.\n              When not supplied, only the default-data-readers will be used.\n   :default - A function of two args, that will, if present and no reader is found for a tag,\n              be called with the tag and the value.",(cljs.core.truth_(clojure.edn.read)?clojure.edn.read.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"read-string"),new cljs.core.Var(function(){return clojure.edn.read_string;},new cljs.core.Symbol("clojure.edn","read-string","clojure.edn/read-string",889907396,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.edn","clojure.edn",-302325352,null),new cljs.core.Symbol(null,"read-string","read-string",-558384455,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/edn.cljs",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,44,44,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"opts","opts",1795607228,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Reads one object from the string s.\n   Returns nil when s is nil or empty.\n\n   Reads data in the edn format (subset of Clojure data):\n   http://edn-format.org\n\n   opts is a map as per cljs.tools.reader.edn/read",(cljs.core.truth_(clojure.edn.read_string)?clojure.edn.read_string.cljs$lang$test:null)]))], null)], null))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 28, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rightmost"),new cljs.core.Var(function(){return clojure.zip.rightmost;},new cljs.core.Symbol("clojure.zip","rightmost","clojure.zip/rightmost",1799140158,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),new cljs.core.Symbol(null,"rightmost","rightmost",-1854156251,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/zip.cljs",16,1,142,142,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"loc","loc",1056246626,null)], null)),"Returns the loc of the rightmost sibling of the node at this loc, or self",(cljs.core.truth_(clojure.zip.rightmost)?clojure.zip.rightmost.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"insert-child"),new cljs.core.Var(function(){return clojure.zip.insert_child;},new cljs.core.Symbol("clojure.zip","insert-child","clojure.zip/insert-child",-210602132,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),new cljs.core.Symbol(null,"insert-child","insert-child",347166277,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/zip.cljs",19,1,194,194,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"loc","loc",1056246626,null),new cljs.core.Symbol(null,"item","item",1889905329,null)], null)),"Inserts the item as the leftmost child of the node at this loc,\n  without moving",(cljs.core.truth_(clojure.zip.insert_child)?clojure.zip.insert_child.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"left"),new cljs.core.Var(function(){return clojure.zip.left;},new cljs.core.Symbol("clojure.zip","left","clojure.zip/left",1740332703,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),new cljs.core.Symbol(null,"left","left",1241415590,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/zip.cljs",11,1,150,150,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"loc","loc",1056246626,null)], null)),"Returns the loc of the left sibling of the node at this loc, or nil",(cljs.core.truth_(clojure.zip.left)?clojure.zip.left.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"path"),new cljs.core.Var(function(){return clojure.zip.path;},new cljs.core.Symbol("clojure.zip","path","clojure.zip/path",1758958974,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),new cljs.core.Symbol(null,"path","path",1452340359,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/zip.cljs",11,1,82,82,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"loc","loc",1056246626,null)], null)),"Returns a seq of nodes leading to this loc",(cljs.core.truth_(clojure.zip.path)?clojure.zip.path.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"leftmost"),new cljs.core.Var(function(){return clojure.zip.leftmost;},new cljs.core.Symbol("clojure.zip","leftmost","clojure.zip/leftmost",-1791272498,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),new cljs.core.Symbol(null,"leftmost","leftmost",-1158121305,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/zip.cljs",15,1,157,157,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"loc","loc",1056246626,null)], null)),"Returns the loc of the leftmost sibling of the node at this loc, or self",(cljs.core.truth_(clojure.zip.leftmost)?clojure.zip.leftmost.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"append-child"),new cljs.core.Var(function(){return clojure.zip.append_child;},new cljs.core.Symbol("clojure.zip","append-child","clojure.zip/append-child",-1333956306,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),new cljs.core.Symbol(null,"append-child","append-child",-1707191801,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/zip.cljs",19,1,200,200,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"loc","loc",1056246626,null),new cljs.core.Symbol(null,"item","item",1889905329,null)], null)),"Inserts the item as the rightmost child of the node at this loc,\n  without moving",(cljs.core.truth_(clojure.zip.append_child)?clojure.zip.append_child.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"branch?"),new cljs.core.Var(function(){return clojure.zip.branch_QMARK_;},new cljs.core.Symbol("clojure.zip","branch?","clojure.zip/branch?",-1006947869,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),new cljs.core.Symbol(null,"branch?","branch?",641208520,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/zip.cljs",14,1,64,64,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"loc","loc",1056246626,null)], null)),"Returns true if the node at loc is a branch",(cljs.core.truth_(clojure.zip.branch_QMARK_)?clojure.zip.branch_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"children"),new cljs.core.Var(function(){return clojure.zip.children;},new cljs.core.Symbol("clojure.zip","children","clojure.zip/children",65376544,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),new cljs.core.Symbol(null,"children","children",699969545,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/zip.cljs",15,1,69,69,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"loc","loc",1056246626,null)], null)),"Returns a seq of the children of node at loc, which must be a branch",(cljs.core.truth_(clojure.zip.children)?clojure.zip.children.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"remove"),new cljs.core.Var(function(){return clojure.zip.remove;},new cljs.core.Symbol("clojure.zip","remove","clojure.zip/remove",859584278,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),new cljs.core.Symbol(null,"remove","remove",1509103113,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/zip.cljs",13,1,237,237,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"loc","loc",1056246626,null)], null)),"Removes the node at loc, returning the loc that would have preceded\n  it in a depth-first walk.",(cljs.core.truth_(clojure.zip.remove)?clojure.zip.remove.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"down"),new cljs.core.Var(function(){return clojure.zip.down;},new cljs.core.Symbol("clojure.zip","down","clojure.zip/down",1356031458,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),new cljs.core.Symbol(null,"down","down",-1089190199,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/zip.cljs",11,1,98,98,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"loc","loc",1056246626,null)], null)),"Returns the loc of the leftmost child of the node at this loc, or\n  nil if no children",(cljs.core.truth_(clojure.zip.down)?clojure.zip.down.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"replace"),new cljs.core.Var(function(){return clojure.zip.replace;},new cljs.core.Symbol("clojure.zip","replace","clojure.zip/replace",413367034,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),new cljs.core.Symbol(null,"replace","replace",853943757,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/zip.cljs",14,1,183,183,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"loc","loc",1056246626,null),new cljs.core.Symbol(null,"node","node",-2073234571,null)], null)),"Replaces the node at this loc, without moving",(cljs.core.truth_(clojure.zip.replace)?clojure.zip.replace.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"zipper"),new cljs.core.Var(function(){return clojure.zip.zipper;},new cljs.core.Symbol("clojure.zip","zipper","clojure.zip/zipper",-571036006,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),new cljs.core.Symbol(null,"zipper","zipper",-1153741331,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/zip.cljs",13,1,18,18,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"branch?","branch?",641208520,null),new cljs.core.Symbol(null,"children","children",699969545,null),new cljs.core.Symbol(null,"make-node","make-node",-1550461835,null),new cljs.core.Symbol(null,"root","root",1191874074,null)], null)),"Creates a new zipper structure. \n\n  branch? is a fn that, given a node, returns true if can have\n  children, even if it currently doesn't.\n\n  children is a fn that, given a branch node, returns a seq of its\n  children.\n\n  make-node is a fn that, given an existing node and a seq of\n  children, returns a new branch node with the supplied children.\n  root is the root node.",(cljs.core.truth_(clojure.zip.zipper)?clojure.zip.zipper.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"end?"),new cljs.core.Var(function(){return clojure.zip.end_QMARK_;},new cljs.core.Symbol("clojure.zip","end?","clojure.zip/end?",381053413,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),new cljs.core.Symbol(null,"end?","end?",217139918,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/zip.cljs",11,1,232,232,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"loc","loc",1056246626,null)], null)),"Returns true if loc represents the end of a depth-first walk",(cljs.core.truth_(clojure.zip.end_QMARK_)?clojure.zip.end_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"edit"),new cljs.core.Var(function(){return clojure.zip.edit;},new cljs.core.Symbol("clojure.zip","edit","clojure.zip/edit",-442418038,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),new cljs.core.Symbol(null,"edit","edit",-1302639,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/zip.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"loc","loc",1056246626,null),new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"loc","loc",1056246626,null),new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,189,189,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"loc","loc",1056246626,null),new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Replaces the node at this loc with the value of (f node args)",(cljs.core.truth_(clojure.zip.edit)?clojure.zip.edit.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"make-node"),new cljs.core.Var(function(){return clojure.zip.make_node;},new cljs.core.Symbol("clojure.zip","make-node","clojure.zip/make-node",-640223892,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),new cljs.core.Symbol(null,"make-node","make-node",-1550461835,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/zip.cljs",16,1,76,76,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"loc","loc",1056246626,null),new cljs.core.Symbol(null,"node","node",-2073234571,null),new cljs.core.Symbol(null,"children","children",699969545,null)], null)),"Returns a new branch node, given an existing node and new\n  children. The loc is only used to supply the constructor.",(cljs.core.truth_(clojure.zip.make_node)?clojure.zip.make_node.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"vector-zip"),new cljs.core.Var(function(){return clojure.zip.vector_zip;},new cljs.core.Symbol("clojure.zip","vector-zip","clojure.zip/vector-zip",986730862,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),new cljs.core.Symbol(null,"vector-zip","vector-zip",1075131029,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/zip.cljs",17,1,42,42,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"root","root",1191874074,null)], null)),"Returns a zipper for nested vectors, given a root vector",(cljs.core.truth_(clojure.zip.vector_zip)?clojure.zip.vector_zip.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"node"),new cljs.core.Var(function(){return clojure.zip.node;},new cljs.core.Symbol("clojure.zip","node","clojure.zip/node",-1345203614,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),new cljs.core.Symbol(null,"node","node",-2073234571,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/zip.cljs",11,1,60,60,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"loc","loc",1056246626,null)], null)),"Returns the node at loc",(cljs.core.truth_(clojure.zip.node)?clojure.zip.node.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"up"),new cljs.core.Var(function(){return clojure.zip.up;},new cljs.core.Symbol("clojure.zip","up","clojure.zip/up",1006365229,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),new cljs.core.Symbol(null,"up","up",1370819414,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/zip.cljs",9,1,111,111,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"loc","loc",1056246626,null)], null)),"Returns the loc of the parent of the node at this loc, or nil if at\n  the top",(cljs.core.truth_(clojure.zip.up)?clojure.zip.up.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"insert-right"),new cljs.core.Var(function(){return clojure.zip.insert_right;},new cljs.core.Symbol("clojure.zip","insert-right","clojure.zip/insert-right",194316302,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),new cljs.core.Symbol(null,"insert-right","insert-right",1842751767,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/zip.cljs",19,1,174,174,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"loc","loc",1056246626,null),new cljs.core.Symbol(null,"item","item",1889905329,null)], null)),"Inserts the item as the right sibling of the node at this loc,\n  without moving",(cljs.core.truth_(clojure.zip.insert_right)?clojure.zip.insert_right.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rights"),new cljs.core.Var(function(){return clojure.zip.rights;},new cljs.core.Symbol("clojure.zip","rights","clojure.zip/rights",1361118051,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),new cljs.core.Symbol(null,"rights","rights",2003591322,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/zip.cljs",13,1,92,92,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"loc","loc",1056246626,null)], null)),"Returns a seq of the right siblings of this loc",(cljs.core.truth_(clojure.zip.rights)?clojure.zip.rights.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"root"),new cljs.core.Var(function(){return clojure.zip.root;},new cljs.core.Symbol("clojure.zip","root","clojure.zip/root",-1119588559,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),new cljs.core.Symbol(null,"root","root",1191874074,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/zip.cljs",11,1,124,124,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"loc","loc",1056246626,null)], null)),"zips all the way up and returns the root node, reflecting any\n changes.",(cljs.core.truth_(clojure.zip.root)?clojure.zip.root.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"next"),new cljs.core.Var(function(){return clojure.zip.next;},new cljs.core.Symbol("clojure.zip","next","clojure.zip/next",-1526224397,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),new cljs.core.Symbol(null,"next","next",1522830042,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/zip.cljs",11,1,206,206,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"loc","loc",1056246626,null)], null)),"Moves to the next loc in the hierarchy, depth-first. When reaching\n  the end, returns a distinguished loc detectable via end?. If already\n  at the end, stays there.",(cljs.core.truth_(clojure.zip.next)?clojure.zip.next.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"seq-zip"),new cljs.core.Var(function(){return clojure.zip.seq_zip;},new cljs.core.Symbol("clojure.zip","seq-zip","clojure.zip/seq-zip",-395973642,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),new cljs.core.Symbol(null,"seq-zip","seq-zip",-2034709283,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/zip.cljs",14,1,34,34,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"root","root",1191874074,null)], null)),"Returns a zipper for nested sequences, given a root sequence",(cljs.core.truth_(clojure.zip.seq_zip)?clojure.zip.seq_zip.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"insert-left"),new cljs.core.Var(function(){return clojure.zip.insert_left;},new cljs.core.Symbol("clojure.zip","insert-left","clojure.zip/insert-left",1476893044,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),new cljs.core.Symbol(null,"insert-left","insert-left",1917369949,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/zip.cljs",18,1,165,165,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"loc","loc",1056246626,null),new cljs.core.Symbol(null,"item","item",1889905329,null)], null)),"Inserts the item as the left sibling of the node at this loc,\n without moving",(cljs.core.truth_(clojure.zip.insert_left)?clojure.zip.insert_left.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"prev"),new cljs.core.Var(function(){return clojure.zip.prev;},new cljs.core.Symbol("clojure.zip","prev","clojure.zip/prev",-389017676,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),new cljs.core.Symbol(null,"prev","prev",43462301,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/zip.cljs",11,1,221,221,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"loc","loc",1056246626,null)], null)),"Moves to the previous loc in the hierarchy, depth-first. If already\n  at the root, returns nil.",(cljs.core.truth_(clojure.zip.prev)?clojure.zip.prev.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"right"),new cljs.core.Var(function(){return clojure.zip.right;},new cljs.core.Symbol("clojure.zip","right","clojure.zip/right",-1593586409,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),new cljs.core.Symbol(null,"right","right",1187949694,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/zip.cljs",12,1,135,135,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"loc","loc",1056246626,null)], null)),"Returns the loc of the right sibling of the node at this loc, or nil",(cljs.core.truth_(clojure.zip.right)?clojure.zip.right.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"lefts"),new cljs.core.Var(function(){return clojure.zip.lefts;},new cljs.core.Symbol("clojure.zip","lefts","clojure.zip/lefts",538689815,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),new cljs.core.Symbol(null,"lefts","lefts",1054400638,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/zip.cljs",12,1,87,87,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"loc","loc",1056246626,null)], null)),"Returns a seq of the left siblings of this loc",(cljs.core.truth_(clojure.zip.lefts)?clojure.zip.lefts.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"xml-zip"),new cljs.core.Var(function(){return clojure.zip.xml_zip;},new cljs.core.Symbol("clojure.zip","xml-zip","clojure.zip/xml-zip",-925187274,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.zip","clojure.zip",1232047716,null),new cljs.core.Symbol(null,"xml-zip","xml-zip",-1566989793,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/zip.cljs",14,1,50,50,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"root","root",1191874074,null)], null)),"Returns a zipper for xml elements (as from xml/parse),\n  given a root element",(cljs.core.truth_(clojure.zip.xml_zip)?clojure.zip.xml_zip.cljs$lang$test:null)]))], null)], null))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"clojure.reflect","clojure.reflect",-977704349,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"meta"),new cljs.core.Var(function(){return clojure.reflect.meta;},new cljs.core.Symbol("clojure.reflect","meta","clojure.reflect/meta",-957156482,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.reflect","clojure.reflect",-977704349,null),new cljs.core.Symbol(null,"meta","meta",-1154898805,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/reflect.cljs",11,1,33,33,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"cb","cb",-2064487928,null)], null)),"Queries the reflection api with a fully qualified symbol, then calls\n  callback fn cb with the evaluated cljs map containing that symbol's\n  meta information.",(cljs.core.truth_(clojure.reflect.meta)?clojure.reflect.meta.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"macroexpand"),new cljs.core.Var(function(){return clojure.reflect.macroexpand;},new cljs.core.Symbol("clojure.reflect","macroexpand","clojure.reflect/macroexpand",2060851029,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.reflect","clojure.reflect",-977704349,null),new cljs.core.Symbol(null,"macroexpand","macroexpand",1509933344,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/reflect.cljs",18,1,41,41,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null)], null)),"Queries the reflection api with a quoted macro form, then calls the\n  callback function with the macroexpanded form, as a string.",(cljs.core.truth_(clojure.reflect.macroexpand)?clojure.reflect.macroexpand.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"print-doc"),new cljs.core.Var(function(){return clojure.reflect.print_doc;},new cljs.core.Symbol("clojure.reflect","print-doc","clojure.reflect/print-doc",-128482541,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.reflect","clojure.reflect",-977704349,null),new cljs.core.Symbol(null,"print-doc","print-doc",528043232,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/reflect.cljs",16,1,47,47,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"method-params","method-params",659739348,null),new cljs.core.Symbol(null,"doc","doc",-741138878,null)], null)], null)], null)),null,(cljs.core.truth_(clojure.reflect.print_doc)?clojure.reflect.print_doc.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"doc"),new cljs.core.Var(function(){return clojure.reflect.doc;},new cljs.core.Symbol("clojure.reflect","doc","clojure.reflect/doc",-17247177,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.reflect","clojure.reflect",-977704349,null),new cljs.core.Symbol(null,"doc","doc",-741138878,null),"/home/runner/.gitlibs/libs/org.clojure/clojurescript/d0b035878683c10de31d13c92013c9d4b6fbce29/src/main/cljs/clojure/reflect.cljs",10,1,53,53,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null)], null)),"Queries the reflection api with a fully qualified symbol, then prints\n  documentation information at the repl.",(cljs.core.truth_(clojure.reflect.doc)?clojure.reflect.doc.cljs$lang$test:null)]))], null)], null))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"cdata"),new cljs.core.Var(function(){return clojure.data.xml.cdata;},new cljs.core.Symbol("clojure.data.xml","cdata","clojure.data.xml/cdata",88405792,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"cdata","cdata",1008251779,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.cdata)?clojure.data.xml.cdata.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"as-qname"),new cljs.core.Var(function(){return clojure.data.xml.as_qname;},new cljs.core.Symbol("clojure.data.xml","as-qname","clojure.data.xml/as-qname",322599212,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"as-qname","as-qname",-343491959,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.as_qname)?clojure.data.xml.as_qname.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"element"),new cljs.core.Var(function(){return clojure.data.xml.element;},new cljs.core.Symbol("clojure.data.xml","element","clojure.data.xml/element",-935472879,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"element","element",-680416020,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.element)?clojure.data.xml.element.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"extend-dom-as-data!"),new cljs.core.Var(function(){return clojure.data.xml.extend_dom_as_data_BANG_;},new cljs.core.Symbol("clojure.data.xml","extend-dom-as-data!","clojure.data.xml/extend-dom-as-data!",2101916080,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"extend-dom-as-data!","extend-dom-as-data!",1723141133,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.extend_dom_as_data_BANG_)?clojure.data.xml.extend_dom_as_data_BANG_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"element?"),new cljs.core.Var(function(){return clojure.data.xml.element_QMARK_;},new cljs.core.Symbol("clojure.data.xml","element?","clojure.data.xml/element?",-550843616,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"element?","element?",-134836339,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.element_QMARK_)?clojure.data.xml.element_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"uri-symbol"),new cljs.core.Var(function(){return clojure.data.xml.uri_symbol;},new cljs.core.Symbol("clojure.data.xml","uri-symbol","clojure.data.xml/uri-symbol",703185909,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"uri-symbol","uri-symbol",-793966768,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.uri_symbol)?clojure.data.xml.uri_symbol.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"parse-str"),new cljs.core.Var(function(){return clojure.data.xml.parse_str;},new cljs.core.Symbol("clojure.data.xml","parse-str","clojure.data.xml/parse-str",2090545269,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Symbol(null,"parse-str","parse-str",1138750352,null),"target/public/cljs-out/prod/clojure/data/xml.cljs",16,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"content-type","content-type",1132308893,null),new cljs.core.Symbol(null,"on-error","on-error",-925902239,null),new cljs.core.Symbol(null,"raw","raw",-1049784497,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,"content-type","content-type",1132308893,null),"text/xml",new cljs.core.Symbol(null,"on-error","on-error",-925902239,null),cljs.core.list(new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p1__56532#","p1__56532#",-896088117,null)], null),cljs.core.list(new cljs.core.Symbol(null,"throw","throw",595905694,null),cljs.core.list(new cljs.core.Symbol(null,"ex-info","ex-info",-539875240,null),"XML parser error",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Symbol(null,"p1__56532#","p1__56532#",-896088117,null),new cljs.core.Keyword(null,"input","input",556931961),new cljs.core.Symbol(null,"s","s",-948495851,null)], null))))], null)], null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"content-type","content-type",1132308893,null),new cljs.core.Symbol(null,"on-error","on-error",-925902239,null),new cljs.core.Symbol(null,"raw","raw",-1049784497,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,"content-type","content-type",1132308893,null),"text/xml",new cljs.core.Symbol(null,"on-error","on-error",-925902239,null),cljs.core.list(new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p1__56532#","p1__56532#",-896088117,null)], null),cljs.core.list(new cljs.core.Symbol(null,"throw","throw",595905694,null),cljs.core.list(new cljs.core.Symbol(null,"ex-info","ex-info",-539875240,null),"XML parser error",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Symbol(null,"p1__56532#","p1__56532#",-896088117,null),new cljs.core.Keyword(null,"input","input",556931961),new cljs.core.Symbol(null,"s","s",-948495851,null)], null))))], null)], null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,31,31,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"content-type","content-type",1132308893,null),new cljs.core.Symbol(null,"on-error","on-error",-925902239,null),new cljs.core.Symbol(null,"raw","raw",-1049784497,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,"content-type","content-type",1132308893,null),"text/xml",new cljs.core.Symbol(null,"on-error","on-error",-925902239,null),cljs.core.list(new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p1__56532#","p1__56532#",-896088117,null)], null),cljs.core.list(new cljs.core.Symbol(null,"throw","throw",595905694,null),cljs.core.list(new cljs.core.Symbol(null,"ex-info","ex-info",-539875240,null),"XML parser error",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Symbol(null,"p1__56532#","p1__56532#",-896088117,null),new cljs.core.Keyword(null,"input","input",556931961),new cljs.core.Symbol(null,"s","s",-948495851,null)], null))))], null)], null)], null)),"Use DOMParser to parse xml string",(cljs.core.truth_(clojure.data.xml.parse_str)?clojure.data.xml.parse_str.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"qname"),new cljs.core.Var(function(){return clojure.data.xml.qname;},new cljs.core.Symbol("clojure.data.xml","qname","clojure.data.xml/qname",-1035338605,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"qname","qname",-343080652,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.qname)?clojure.data.xml.qname.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"element-data"),new cljs.core.Var(function(){return clojure.data.xml.element_data;},new cljs.core.Symbol("clojure.data.xml","element-data","clojure.data.xml/element-data",-1187275535,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"element-data","element-data",1105680406,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.element_data)?clojure.data.xml.element_data.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"element*"),new cljs.core.Var(function(){return clojure.data.xml.element_STAR_;},new cljs.core.Symbol("clojure.data.xml","element*","clojure.data.xml/element*",-1685549580,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"element*","element*",1925988439,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.element_STAR_)?clojure.data.xml.element_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"xml-comment"),new cljs.core.Var(function(){return clojure.data.xml.xml_comment;},new cljs.core.Symbol("clojure.data.xml","xml-comment","clojure.data.xml/xml-comment",1278736895,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"xml-comment","xml-comment",-1142274982,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.xml_comment)?clojure.data.xml.xml_comment.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"element-node"),new cljs.core.Var(function(){return clojure.data.xml.element_node;},new cljs.core.Symbol("clojure.data.xml","element-node","clojure.data.xml/element-node",1133911801,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"element-node","element-node",751452826,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.element_node)?clojure.data.xml.element_node.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"parse-qname"),new cljs.core.Var(function(){return clojure.data.xml.parse_qname;},new cljs.core.Symbol("clojure.data.xml","parse-qname","clojure.data.xml/parse-qname",-114696648,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"parse-qname","parse-qname",-503996965,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.parse_qname)?clojure.data.xml.parse_qname.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"emit-str"),new cljs.core.Var(function(){return clojure.data.xml.emit_str;},new cljs.core.Symbol("clojure.data.xml","emit-str","clojure.data.xml/emit-str",620393844,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Symbol(null,"emit-str","emit-str",-868830501,null),"target/public/cljs-out/prod/clojure/data/xml.cljs",15,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"e","e",-1273166571,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keys","keys",1068423698),cljs.core.PersistentVector.EMPTY], null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"e","e",-1273166571,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keys","keys",1068423698),cljs.core.PersistentVector.EMPTY], null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,48,48,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"e","e",-1273166571,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keys","keys",1068423698),cljs.core.PersistentVector.EMPTY], null)], null)),"Use XMLSerializer to render an xml string",(cljs.core.truth_(clojure.data.xml.emit_str)?clojure.data.xml.emit_str.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"qname-uri"),new cljs.core.Var(function(){return clojure.data.xml.qname_uri;},new cljs.core.Symbol("clojure.data.xml","qname-uri","clojure.data.xml/qname-uri",-679361477,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"qname-uri","qname-uri",-288720740,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.qname_uri)?clojure.data.xml.qname_uri.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"qname-local"),new cljs.core.Var(function(){return clojure.data.xml.qname_local;},new cljs.core.Symbol("clojure.data.xml","qname-local","clojure.data.xml/qname-local",-1663929151,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"qname-local","qname-local",-1247825572,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.qname_local)?clojure.data.xml.qname_local.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"symbol-uri"),new cljs.core.Var(function(){return clojure.data.xml.symbol_uri;},new cljs.core.Symbol("clojure.data.xml","symbol-uri","clojure.data.xml/symbol-uri",695933298,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"symbol-uri","symbol-uri",12535007,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.symbol_uri)?clojure.data.xml.symbol_uri.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null)], null))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"reagent.dom","reagent.dom",-2138920962,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"render"),new cljs.core.Var(function(){return reagent.dom.render;},new cljs.core.Symbol("reagent.dom","render","reagent.dom/render",-1216356973,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.dom","reagent.dom",-2138920962,null),new cljs.core.Symbol(null,"render","render",232498073,null),"target/public/cljs-out/prod/reagent/dom.cljs",13,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"comp","comp",-1462482139,null),new cljs.core.Symbol(null,"container","container",-96406180,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"comp","comp",-1462482139,null),new cljs.core.Symbol(null,"container","container",-96406180,null),new cljs.core.Symbol(null,"callback-or-compiler","callback-or-compiler",90200066,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"comp","comp",-1462482139,null),new cljs.core.Symbol(null,"container","container",-96406180,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"comp","comp",-1462482139,null),new cljs.core.Symbol(null,"container","container",-96406180,null),new cljs.core.Symbol(null,"callback-or-compiler","callback-or-compiler",90200066,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,28,28,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"comp","comp",-1462482139,null),new cljs.core.Symbol(null,"container","container",-96406180,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"comp","comp",-1462482139,null),new cljs.core.Symbol(null,"container","container",-96406180,null),new cljs.core.Symbol(null,"callback-or-compiler","callback-or-compiler",90200066,null)], null)),"Render a Reagent component into the DOM. The first argument may be\n  either a vector (using Reagent's Hiccup syntax), or a React element.\n  The second argument should be a DOM node.\n\n  Optionally takes a callback that is called when the component is in place.\n\n  Returns the mounted component instance.",(cljs.core.truth_(reagent.dom.render)?reagent.dom.render.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"unmount-component-at-node"),new cljs.core.Var(function(){return reagent.dom.unmount_component_at_node;},new cljs.core.Symbol("reagent.dom","unmount-component-at-node","reagent.dom/unmount-component-at-node",-401354396,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.dom","reagent.dom",-2138920962,null),new cljs.core.Symbol(null,"unmount-component-at-node","unmount-component-at-node",939521902,null),"target/public/cljs-out/prod/reagent/dom.cljs",32,1,53,53,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"container","container",-96406180,null)], null)),"Remove a component from the given DOM node.",(cljs.core.truth_(reagent.dom.unmount_component_at_node)?reagent.dom.unmount_component_at_node.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dom-node"),new cljs.core.Var(function(){return reagent.dom.dom_node;},new cljs.core.Symbol("reagent.dom","dom-node","reagent.dom/dom-node",-1251855976,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"deprecated","deprecated",1498275348),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.dom","reagent.dom",-2138920962,null),new cljs.core.Symbol(null,"dom-node","dom-node",2092815254,null),"target/public/cljs-out/prod/reagent/dom.cljs",15,1,58,"1.2.0",58,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),"Returns the root DOM node of a mounted component.",(cljs.core.truth_(reagent.dom.dom_node)?reagent.dom.dom_node.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"force-update-all"),new cljs.core.Var(function(){return reagent.dom.force_update_all;},new cljs.core.Symbol("reagent.dom","force-update-all","reagent.dom/force-update-all",519296605,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"deprecated","deprecated",1498275348),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.dom","reagent.dom",-2138920962,null),new cljs.core.Symbol(null,"force-update-all","force-update-all",1197469763,null),"target/public/cljs-out/prod/reagent/dom.cljs",23,1,64,"1.2.0",64,cljs.core.list(cljs.core.PersistentVector.EMPTY),"Force re-rendering of all mounted Reagent components. This is\n  probably only useful in a development environment, when you want to\n  update components in response to some dynamic changes to code.\n\n  Note that force-update-all may not update root components. This\n  happens if a component 'foo' is mounted with `(render [foo])` (since\n  functions are passed by value, and not by reference, in\n  ClojureScript). To get around this you'll have to introduce a layer\n  of indirection, for example by using `(render [#'foo])` instead.",(cljs.core.truth_(reagent.dom.force_update_all)?reagent.dom.force_update_all.cljs$lang$test:null)]))], null)], null))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 31, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"class-names"),new cljs.core.Var(function(){return reagent.core.class_names;},new cljs.core.Symbol("reagent.core","class-names","reagent.core/class-names",-1902681251,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"class-names","class-names",-1397320704,null),"target/public/cljs-out/prod/reagent/core.cljs",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"class","class",-390430469,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"class1","class1",-1905977651,null),new cljs.core.Symbol(null,"class2","class2",-1266396392,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"class","class",-390430469,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"class1","class1",-1905977651,null),new cljs.core.Symbol(null,"class2","class2",-1266396392,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"class1","class1",-1905977651,null),new cljs.core.Symbol(null,"class2","class2",-1266396392,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"others","others",-569561186,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null,null)], null),1,179,179,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"class","class",-390430469,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"class1","class1",-1905977651,null),new cljs.core.Symbol(null,"class2","class2",-1266396392,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"class1","class1",-1905977651,null),new cljs.core.Symbol(null,"class2","class2",-1266396392,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"others","others",-569561186,null)], null)),"Function which normalizes and combines class values to a string\n\n  Reagent allows classes to be defined as:\n  - Strings\n  - Named objects (Symbols or Keywords)\n  - Collections of previous types",(cljs.core.truth_(reagent.core.class_names)?reagent.core.class_names.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"after-render"),new cljs.core.Var(function(){return reagent.core.after_render;},new cljs.core.Symbol("reagent.core","after-render","reagent.core/after-render",-164077011,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"after-render","after-render",-656902336,null),"target/public/cljs-out/prod/reagent/core.cljs",19,1,340,340,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null)),"Run f using requestAnimationFrame or equivalent.\n\n  f will be called just after any queued renders in the next animation\n  frame (and even if no renders actually occur).",(cljs.core.truth_(reagent.core.after_render)?reagent.core.after_render.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"current-component"),new cljs.core.Var(function(){return reagent.core.current_component;},new cljs.core.Symbol("reagent.core","current-component","reagent.core/current-component",-739982166,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"current-component","current-component",830794177,null),"target/public/cljs-out/prod/reagent/core.cljs",24,1,114,114,cljs.core.list(cljs.core.PersistentVector.EMPTY),"Returns the current React component (a.k.a `this`) in a component\n  function.",(cljs.core.truth_(reagent.core.current_component)?reagent.core.current_component.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"adapt-react-class"),new cljs.core.Var(function(){return reagent.core.adapt_react_class;},new cljs.core.Symbol("reagent.core","adapt-react-class","reagent.core/adapt-react-class",1789410154,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"adapt-react-class","adapt-react-class",1221068673,null),"target/public/cljs-out/prod/reagent/core.cljs",24,1,52,52,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"c","c",-122660552,null)], null)),"Returns an adapter for a native React class, that may be used\n  just like a Reagent component function or class in Hiccup forms.",(cljs.core.truth_(reagent.core.adapt_react_class)?reagent.core.adapt_react_class.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"atom"),new cljs.core.Var(function(){return reagent.core.atom;},new cljs.core.Symbol("reagent.core","atom","reagent.core/atom",1748890217,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"atom","atom",1243487874,null),"target/public/cljs-out/prod/reagent/core.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"rest","rest",398835108,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,211,211,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"rest","rest",398835108,null)], null)),"Like clojure.core/atom, except that it keeps track of derefs.\n  Reagent components that derefs one of these are automatically\n  re-rendered.",(cljs.core.truth_(reagent.core.atom)?reagent.core.atom.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"merge-props"),new cljs.core.Var(function(){return reagent.core.merge_props;},new cljs.core.Symbol("reagent.core","merge-props","reagent.core/merge-props",1807680111,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"merge-props","merge-props",-2057503102,null),"target/public/cljs-out/prod/reagent/core.cljs",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"defaults","defaults",-1678408555,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"defaults","defaults",-1678408555,null),new cljs.core.Symbol(null,"props","props",2093813254,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"defaults","defaults",-1678408555,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"defaults","defaults",-1678408555,null),new cljs.core.Symbol(null,"props","props",2093813254,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"defaults","defaults",-1678408555,null),new cljs.core.Symbol(null,"props","props",2093813254,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"others","others",-569561186,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null,null)], null),1,191,191,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"defaults","defaults",-1678408555,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"defaults","defaults",-1678408555,null),new cljs.core.Symbol(null,"props","props",2093813254,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"defaults","defaults",-1678408555,null),new cljs.core.Symbol(null,"props","props",2093813254,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"others","others",-569561186,null)], null)),"Utility function that merges some maps, handling `:class` and `:style`.\n\n  The :class value is always normalized (using `class-names`) even if no\n  merging is done.",(cljs.core.truth_(reagent.core.merge_props)?reagent.core.merge_props.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"as-element"),new cljs.core.Var(function(){return reagent.core.as_element;},new cljs.core.Symbol("reagent.core","as-element","reagent.core/as-element",-1369748434,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"as-element","as-element",-2139409597,null),"target/public/cljs-out/prod/reagent/core.cljs",17,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"compiler","compiler",1372604796,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"compiler","compiler",1372604796,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,46,46,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"compiler","compiler",1372604796,null)], null)),"Turns a vector of Hiccup syntax into a React element. Returns form\n  unchanged if it is not a vector.",(cljs.core.truth_(reagent.core.as_element)?reagent.core.as_element.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rswap!"),new cljs.core.Var(function(){return reagent.core.rswap_BANG_;},new cljs.core.Symbol("reagent.core","rswap!","reagent.core/rswap!",-1840523676,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"rswap!","rswap!",-1347695677,null),"target/public/cljs-out/prod/reagent/core.cljs",13,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.with_meta(new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"IAtom","IAtom",-1411134312,null)], null)),new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"IAtom","IAtom",-1411134312,null)], null)),new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,311,311,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"IAtom","IAtom",-1411134312,null)], null)),new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Swaps the value of a to be `(apply f current-value-of-atom args)`.\n\n  rswap! works like swap!, except that recursive calls to rswap! on\n  the same atom are allowed \u2013 and it always returns nil.",(cljs.core.truth_(reagent.core.rswap_BANG_)?reagent.core.rswap_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"next-tick"),new cljs.core.Var(function(){return reagent.core.next_tick;},new cljs.core.Symbol("reagent.core","next-tick","reagent.core/next-tick",-809292160,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"next-tick","next-tick",-500999387,null),"target/public/cljs-out/prod/reagent/core.cljs",16,1,333,333,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null)),"Run f using requestAnimationFrame or equivalent.\n\n  f will be called just before components are rendered.",(cljs.core.truth_(reagent.core.next_tick)?reagent.core.next_tick.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"track"),new cljs.core.Var(function(){return reagent.core.track;},new cljs.core.Symbol("reagent.core","track","reagent.core/track",1263921785,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"track","track",1836319014,null),"target/public/cljs-out/prod/reagent/core.cljs",12,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,218,218,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Takes a function and optional arguments, and returns a derefable\n  containing the output of that function. If the function derefs\n  Reagent atoms (or track, etc), the value will be updated whenever\n  the atom changes.\n\n  In other words, `@(track foo bar)` will produce the same result\n  as `(foo bar)`, but foo will only be called again when the atoms it\n  depends on changes, and will only trigger updates of components when\n  its result changes.\n\n  track is lazy, i.e the function is only evaluated on deref.",(cljs.core.truth_(reagent.core.track)?reagent.core.track.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"props"),new cljs.core.Var(function(){return reagent.core.props;},new cljs.core.Symbol("reagent.core","props","reagent.core/props",1659763545,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"props","props",2093813254,null),"target/public/cljs-out/prod/reagent/core.cljs",12,1,161,161,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),"Returns the props passed to a component.",(cljs.core.truth_(reagent.core.props)?reagent.core.props.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dispose!"),new cljs.core.Var(function(){return reagent.core.dispose_BANG_;},new cljs.core.Symbol("reagent.core","dispose!","reagent.core/dispose!",239740642,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"dispose!","dispose!",-395693497,null),"target/public/cljs-out/prod/reagent/core.cljs",15,1,242,242,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Stop the result of track! from updating.",(cljs.core.truth_(reagent.core.dispose_BANG_)?reagent.core.dispose_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"state-atom"),new cljs.core.Var(function(){return reagent.core.state_atom;},new cljs.core.Symbol("reagent.core","state-atom","reagent.core/state-atom",-853597457,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"state-atom","state-atom",-1350625912,null),"target/public/cljs-out/prod/reagent/core.cljs",17,1,120,120,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),"Returns an atom containing a components state.",(cljs.core.truth_(reagent.core.state_atom)?reagent.core.state_atom.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"flush"),new cljs.core.Var(function(){return reagent.core.flush;},new cljs.core.Symbol("reagent.core","flush","reagent.core/flush",59315205,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"flush","flush",501820328,null),"target/public/cljs-out/prod/reagent/core.cljs",12,1,201,201,cljs.core.list(cljs.core.PersistentVector.EMPTY),"Render dirty components immediately.\n\n  Note that this may not work in event handlers, since React.js does\n  batching of updates there.",(cljs.core.truth_(reagent.core.flush)?reagent.core.flush.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"children"),new cljs.core.Var(function(){return reagent.core.children;},new cljs.core.Symbol("reagent.core","children","reagent.core/children",257449956,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"children","children",699969545,null),"target/public/cljs-out/prod/reagent/core.cljs",15,1,167,167,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),"Returns the children passed to a component.",(cljs.core.truth_(reagent.core.children)?reagent.core.children.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"wrap"),new cljs.core.Var(function(){return reagent.core.wrap;},new cljs.core.Symbol("reagent.core","wrap","reagent.core/wrap",-1226079859,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"wrap","wrap",-1802765782,null),"target/public/cljs-out/prod/reagent/core.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"value","value",1946509744,null),new cljs.core.Symbol(null,"reset-fn","reset-fn",949643977,null),new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"value","value",1946509744,null),new cljs.core.Symbol(null,"reset-fn","reset-fn",949643977,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,247,247,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"value","value",1946509744,null),new cljs.core.Symbol(null,"reset-fn","reset-fn",949643977,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Provide a combination of value and callback, that looks like an atom.\n\n  The first argument can be any value, that will be returned when the\n  result is deref'ed.\n\n  The second argument should be a function, that is called with the\n  optional extra arguments provided to wrap, and the new value of the\n  resulting 'atom'.\n\n  Use for example like this:\n\n  ```cljs\n  (wrap (:foo @state)\n        swap! state assoc :foo)\n  ```\n\n  Probably useful only for passing to child components.",(cljs.core.truth_(reagent.core.wrap)?reagent.core.wrap.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"reactify-component"),new cljs.core.Var(function(){return reagent.core.reactify_component;},new cljs.core.Symbol("reagent.core","reactify-component","reagent.core/reactify-component",-385504376,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"reactify-component","reactify-component",-882526483,null),"target/public/cljs-out/prod/reagent/core.cljs",25,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"c","c",-122660552,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"compiler","compiler",1372604796,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"c","c",-122660552,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"compiler","compiler",1372604796,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,59,59,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"c","c",-122660552,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"compiler","compiler",1372604796,null)], null)),"Returns an adapter for a Reagent component, that may be used from\n  React, for example in JSX. A single argument, props, is passed to\n  the component, converted to a map.",(cljs.core.truth_(reagent.core.reactify_component)?reagent.core.reactify_component.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"set-default-compiler!"),new cljs.core.Var(function(){return reagent.core.set_default_compiler_BANG_;},new cljs.core.Symbol("reagent.core","set-default-compiler!","reagent.core/set-default-compiler!",-945538805,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"set-default-compiler!","set-default-compiler!",-444322194,null),"target/public/cljs-out/prod/reagent/core.cljs",28,1,360,360,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"compiler","compiler",1372604796,null)], null)),"Globally sets the Compiler object used by `render`, `as-element` and other\n  calls by default, when no `compiler` parameter is provided.\n\n  Use `nil` value to restore the original default compiler.",(cljs.core.truth_(reagent.core.set_default_compiler_BANG_)?reagent.core.set_default_compiler_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"cursor"),new cljs.core.Var(function(){return reagent.core.cursor;},new cljs.core.Symbol("reagent.core","cursor","reagent.core/cursor",-1137097804,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"cursor","cursor",-1642498285,null),"target/public/cljs-out/prod/reagent/core.cljs",13,1,272,272,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"src","src",-10544524,null),new cljs.core.Symbol(null,"path","path",1452340359,null)], null)),"Provide a cursor into a Reagent atom.\n\n  Behaves like a Reagent atom but focuses updates and derefs to\n  the specified path within the wrapped Reagent atom. e.g.,\n\n  ```cljs\n  (let [c (cursor ra [:nested :content])]\n    ... @c ;; equivalent to (get-in @ra [:nested :content])\n    ... (reset! c 42) ;; equivalent to (swap! ra assoc-in [:nested :content] 42)\n    ... (swap! c inc) ;; equivalence to (swap! ra update-in [:nested :content] inc)\n    )\n  ```\n\n  The first parameter can also be a function, that should look\n  something like this:\n\n  ```cljs\n  (defn set-get\n    ([k] (get-in @state k))\n    ([k v] (swap! state assoc-in k v)))\n  ```\n\n  The function will be called with one argument \u2013 the path passed to\n  cursor \u2013 when the cursor is deref'ed, and two arguments (path and\n  new value) when the cursor is modified.\n\n  Given that set-get function, (and that state is a Reagent atom, or\n  another cursor) these cursors are equivalent:\n  `(cursor state [:foo])` and `(cursor set-get [:foo])`.\n\n  Note that a cursor is lazy: its value will not change until it is\n  used. This may be noticed with add-watch.",(cljs.core.truth_(reagent.core.cursor)?reagent.core.cursor.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"state"),new cljs.core.Var(function(){return reagent.core.state;},new cljs.core.Symbol("reagent.core","state","reagent.core/state",-920165519,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"state","state",-348086572,null),"target/public/cljs-out/prod/reagent/core.cljs",12,1,126,126,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),"Returns the state of a component, as set with replace-state or set-state.\n  Equivalent to `(deref (r/state-atom this))`",(cljs.core.truth_(reagent.core.state)?reagent.core.state.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"create-compiler"),new cljs.core.Var(function(){return reagent.core.create_compiler;},new cljs.core.Symbol("reagent.core","create-compiler","reagent.core/create-compiler",491047088,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"create-compiler","create-compiler",1059333141,null),"target/public/cljs-out/prod/reagent/core.cljs",22,1,353,353,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),"Creates Compiler object with given `opts`,\n  this can be passed to `render`, `as-element` and other functions to control\n  how they turn the Reagent-style Hiccup into React components and elements.",(cljs.core.truth_(reagent.core.create_compiler)?reagent.core.create_compiler.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"track!"),new cljs.core.Var(function(){return reagent.core.track_BANG_;},new cljs.core.Symbol("reagent.core","track!","reagent.core/track!",-954652078,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"track!","track!",-516308489,null),"target/public/cljs-out/prod/reagent/core.cljs",13,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,234,234,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"An eager version of track. The function passed is called\n  immediately, and continues to be called when needed, until stopped\n  with dispose!.",(cljs.core.truth_(reagent.core.track_BANG_)?reagent.core.track_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"is-client"),new cljs.core.Var(function(){return reagent.core.is_client;},new cljs.core.Symbol("reagent.core","is-client","reagent.core/is-client",1057846450,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"is-client","is-client",-580030505,null),"target/public/cljs-out/prod/reagent/core.cljs",15,1,15,15,cljs.core.List.EMPTY,null,((reagent.core.is_client)?reagent.core.is_client.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"replace-state"),new cljs.core.Var(function(){return reagent.core.replace_state;},new cljs.core.Symbol("reagent.core","replace-state","reagent.core/replace-state",2038045877,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"replace-state","replace-state",391776344,null),"target/public/cljs-out/prod/reagent/core.cljs",20,1,133,133,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"new-state","new-state",1150182315,null)], null)),"Set state of a component.\n  Equivalent to `(reset! (state-atom this) new-state)`",(cljs.core.truth_(reagent.core.replace_state)?reagent.core.replace_state.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"partial"),new cljs.core.Var(function(){return reagent.core.partial;},new cljs.core.Symbol("reagent.core","partial","reagent.core/partial",1376271301,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"partial","partial",1881673272,null),"target/public/cljs-out/prod/reagent/core.cljs",14,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,348,348,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Works just like clojure.core/partial, but the result can be compared with =",(cljs.core.truth_(reagent.core.partial)?reagent.core.partial.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"set-state"),new cljs.core.Var(function(){return reagent.core.set_state;},new cljs.core.Symbol("reagent.core","set-state","reagent.core/set-state",-1819933857,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"set-state","set-state",-1310318856,null),"target/public/cljs-out/prod/reagent/core.cljs",16,1,141,141,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"new-state","new-state",1150182315,null)], null)),"Merge component state with new-state.\n  Equivalent to `(swap! (state-atom this) merge new-state)`",(cljs.core.truth_(reagent.core.set_state)?reagent.core.set_state.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"argv"),new cljs.core.Var(function(){return reagent.core.argv;},new cljs.core.Symbol("reagent.core","argv","reagent.core/argv",1756901347,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"argv","argv",177740632,null),"target/public/cljs-out/prod/reagent/core.cljs",11,1,173,173,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),"Returns the entire Hiccup form passed to the component.",(cljs.core.truth_(reagent.core.argv)?reagent.core.argv.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"render"),new cljs.core.Var(function(){return reagent.core.render;},new cljs.core.Symbol("reagent.core","render","reagent.core/render",800839204,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"deprecated","deprecated",1498275348),new cljs.core.Keyword(null,"superseded-by","superseded-by",1956475860),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"render","render",232498073,null),"target/public/cljs-out/prod/reagent/core.cljs",13,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"_","_",-1201019570,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,370,"0.10.0","reagent.dom/render",370,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)),null,(cljs.core.truth_(reagent.core.render)?reagent.core.render.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"force-update"),new cljs.core.Var(function(){return reagent.core.force_update;},new cljs.core.Symbol("reagent.core","force-update","reagent.core/force-update",-1356231299,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"force-update","force-update",-1928742502,null),"target/public/cljs-out/prod/reagent/core.cljs",19,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"deep","deep",-563568894,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"deep","deep",-563568894,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,149,149,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"deep","deep",-563568894,null)], null)),"Force a component to re-render immediately.\n\n  If the second argument is true, child components will also be\n  re-rendered, even is their arguments have not changed.",(cljs.core.truth_(reagent.core.force_update)?reagent.core.force_update.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"create-class"),new cljs.core.Var(function(){return reagent.core.create_class;},new cljs.core.Symbol("reagent.core","create-class","reagent.core/create-class",-1100017147,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"create-class","create-class",-665911586,null),"target/public/cljs-out/prod/reagent/core.cljs",19,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"compiler","compiler",1372604796,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"compiler","compiler",1372604796,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,68,68,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"compiler","compiler",1372604796,null)], null)),"Creates JS class based on provided Clojure map, for example:\n\n  ```cljs\n  {;; Constructor\n   :constructor (fn [this props])\n   :get-initial-state (fn [this])\n   ;; Static methods\n   :get-derived-state-from-props (fn [props state] partial-state)\n   :get-derived-state-from-error (fn [error] partial-state)\n   ;; Methods\n   :get-snapshot-before-update (fn [this old-argv new-argv] snapshot)\n   :should-component-update (fn [this old-argv new-argv])\n   :component-did-mount (fn [this])\n   :component-did-update (fn [this old-argv old-state snapshot])\n   :component-will-unmount (fn [this])\n   :component-did-catch (fn [this error info])\n   :reagent-render (fn [args....])\n   ;; Or alternatively:\n   :render (fn [this])\n   ;; Deprecated methods:\n   :UNSAFE_component-will-receive-props (fn [this new-argv])\n   :UNSAFE_component-will-update (fn [this new-argv new-state])\n   :UNSAFE_component-will-mount (fn [this])}\n  ```\n\n  Everything is optional, except either :reagent-render or :render.\n\n  Map keys should use `React.Component` method names (https://reactjs.org/docs/react-component.html),\n  and can be provided in snake-case or camelCase.\n\n  State can be initialized using constructor, which matches React.Component class,\n  or using getInitialState which matches old React createClass function and is\n  now implemented by Reagent for compatibility.\n\n  State can usually be anything, e.g. Cljs object. But if using getDerivedState\n  methods, the state has to be plain JS object as React implementation uses\n  Object.assign to merge partial state into the current state.\n\n  React built-in static methods or properties are automatically defined as statics.",(cljs.core.truth_(reagent.core.create_class)?reagent.core.create_class.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"create-element"),new cljs.core.Var(function(){return reagent.core.create_element;},new cljs.core.Symbol("reagent.core","create-element","reagent.core/create-element",-1888667366,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"reagent.core","reagent.core",1841519592,null),new cljs.core.Symbol(null,"create-element","create-element",1833774591,null),"target/public/cljs-out/prod/reagent/core.cljs",21,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(3),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(3),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type","type",-1480165421,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type","type",-1480165421,null),new cljs.core.Symbol(null,"props","props",2093813254,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type","type",-1480165421,null),new cljs.core.Symbol(null,"props","props",2093813254,null),new cljs.core.Symbol(null,"child","child",-2030468224,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type","type",-1480165421,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type","type",-1480165421,null),new cljs.core.Symbol(null,"props","props",2093813254,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type","type",-1480165421,null),new cljs.core.Symbol(null,"props","props",2093813254,null),new cljs.core.Symbol(null,"child","child",-2030468224,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type","type",-1480165421,null),new cljs.core.Symbol(null,"props","props",2093813254,null),new cljs.core.Symbol(null,"child","child",-2030468224,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"children","children",699969545,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null,null)], null),1,17,17,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type","type",-1480165421,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type","type",-1480165421,null),new cljs.core.Symbol(null,"props","props",2093813254,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type","type",-1480165421,null),new cljs.core.Symbol(null,"props","props",2093813254,null),new cljs.core.Symbol(null,"child","child",-2030468224,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type","type",-1480165421,null),new cljs.core.Symbol(null,"props","props",2093813254,null),new cljs.core.Symbol(null,"child","child",-2030468224,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"children","children",699969545,null)], null)),"Create a native React element, by calling React.createElement directly.\n\n  That means the second argument must be a javascript object (or nil), and\n  that any Reagent hiccup forms must be processed with as-element. For example\n  like this:\n\n  ```cljs\n  (r/create-element \"div\" #js{:className \"foo\"}\n    \"Hi \" (r/as-element [:strong \"world!\"])\n  ```\n\n  which is equivalent to\n\n  ```cljs\n  [:div.foo \"Hi\" [:strong \"world!\"]]\n  ```",(cljs.core.truth_(reagent.core.create_element)?reagent.core.create_element.cljs$lang$test:null)]))], null)], null))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"oops.core","oops.core",466106448,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"set-key-dynamically"),new cljs.core.Var(function(){return oops.core.set_key_dynamically;},new cljs.core.Symbol("oops.core","set-key-dynamically","oops.core/set-key-dynamically",89113782,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"oops.core","oops.core",466106448,null),new cljs.core.Symbol(null,"set-key-dynamically","set-key-dynamically",-985491072,null),"target/public/cljs-out/prod/oops/core.cljs",26,1,56,56,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"obj","obj",-1672671807,null),new cljs.core.Symbol(null,"key","key",124488940,null),new cljs.core.Symbol(null,"val","val",1769233139,null),new cljs.core.Symbol(null,"mode","mode",-2000032078,null)], null)),null,(cljs.core.truth_(oops.core.set_key_dynamically)?oops.core.set_key_dynamically.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"report-warning-dynamically"),new cljs.core.Var(function(){return oops.core.report_warning_dynamically;},new cljs.core.Symbol("oops.core","report-warning-dynamically","oops.core/report-warning-dynamically",-1908141285,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"oops.core","oops.core",466106448,null),new cljs.core.Symbol(null,"report-warning-dynamically","report-warning-dynamically",-833889087,null),"target/public/cljs-out/prod/oops/core.cljs",43,1,true,30,30,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"msg","msg",254428083,null),new cljs.core.Symbol(null,"data","data",1407862150,null)], null)),null,(cljs.core.truth_(oops.core.report_warning_dynamically)?oops.core.report_warning_dynamically.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"validate-fn-call-dynamically"),new cljs.core.Var(function(){return oops.core.validate_fn_call_dynamically;},new cljs.core.Symbol("oops.core","validate-fn-call-dynamically","oops.core/validate-fn-call-dynamically",-111438116,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"oops.core","oops.core",466106448,null),new cljs.core.Symbol(null,"validate-fn-call-dynamically","validate-fn-call-dynamically",962513282,null),"target/public/cljs-out/prod/oops/core.cljs",44,1,41,41,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"fn","fn",465265323,null),new cljs.core.Symbol(null,"mode","mode",-2000032078,null)], null)),null,((oops.core.validate_fn_call_dynamically)?oops.core.validate_fn_call_dynamically.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"report-error-dynamically"),new cljs.core.Var(function(){return oops.core.report_error_dynamically;},new cljs.core.Symbol("oops.core","report-error-dynamically","oops.core/report-error-dynamically",146979257,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"oops.core","oops.core",466106448,null),new cljs.core.Symbol(null,"report-error-dynamically","report-error-dynamically",1221060195,null),"target/public/cljs-out/prod/oops/core.cljs",41,1,true,27,27,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"msg","msg",254428083,null),new cljs.core.Symbol(null,"data","data",1407862150,null)], null)),null,(cljs.core.truth_(oops.core.report_error_dynamically)?oops.core.report_error_dynamically.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"punch-key-dynamically!"),new cljs.core.Var(function(){return oops.core.punch_key_dynamically_BANG_;},new cljs.core.Symbol("oops.core","punch-key-dynamically!","oops.core/punch-key-dynamically!",-154780830,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"oops.core","oops.core",466106448,null),new cljs.core.Symbol(null,"punch-key-dynamically!","punch-key-dynamically!",920387240,null),"target/public/cljs-out/prod/oops/core.cljs",39,1,true,44,44,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"obj","obj",-1672671807,null),new cljs.core.Symbol(null,"key","key",124488940,null)], null)),null,(cljs.core.truth_(oops.core.punch_key_dynamically_BANG_)?oops.core.punch_key_dynamically_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"get-selector-dynamically"),new cljs.core.Var(function(){return oops.core.get_selector_dynamically;},new cljs.core.Symbol("oops.core","get-selector-dynamically","oops.core/get-selector-dynamically",-1428685502,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"oops.core","oops.core",466106448,null),new cljs.core.Symbol(null,"get-selector-dynamically","get-selector-dynamically",1792588680,null),"target/public/cljs-out/prod/oops/core.cljs",31,1,59,59,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"obj","obj",-1672671807,null),new cljs.core.Symbol(null,"selector","selector",-1891906903,null)], null)),null,(cljs.core.truth_(oops.core.get_selector_dynamically)?oops.core.get_selector_dynamically.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"check-path-dynamically"),new cljs.core.Var(function(){return oops.core.check_path_dynamically;},new cljs.core.Symbol("oops.core","check-path-dynamically","oops.core/check-path-dynamically",-118405931,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"oops.core","oops.core",466106448,null),new cljs.core.Symbol(null,"check-path-dynamically","check-path-dynamically",940425199,null),"target/public/cljs-out/prod/oops/core.cljs",29,1,50,50,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"path","path",1452340359,null),new cljs.core.Symbol(null,"op","op",-242456428,null)], null)),null,(cljs.core.truth_(oops.core.check_path_dynamically)?oops.core.check_path_dynamically.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"get-key-dynamically"),new cljs.core.Var(function(){return oops.core.get_key_dynamically;},new cljs.core.Symbol("oops.core","get-key-dynamically","oops.core/get-key-dynamically",501143386,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"oops.core","oops.core",466106448,null),new cljs.core.Symbol(null,"get-key-dynamically","get-key-dynamically",-572911088,null),"target/public/cljs-out/prod/oops/core.cljs",26,1,53,53,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"obj","obj",-1672671807,null),new cljs.core.Symbol(null,"key","key",124488940,null),new cljs.core.Symbol(null,"mode","mode",-2000032078,null)], null)),null,(cljs.core.truth_(oops.core.get_key_dynamically)?oops.core.get_key_dynamically.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"set-selector-dynamically"),new cljs.core.Var(function(){return oops.core.set_selector_dynamically;},new cljs.core.Symbol("oops.core","set-selector-dynamically","oops.core/set-selector-dynamically",-755895633,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"oops.core","oops.core",466106448,null),new cljs.core.Symbol(null,"set-selector-dynamically","set-selector-dynamically",317894609,null),"target/public/cljs-out/prod/oops/core.cljs",31,1,65,65,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"obj","obj",-1672671807,null),new cljs.core.Symbol(null,"selector","selector",-1891906903,null),new cljs.core.Symbol(null,"val","val",1769233139,null)], null)),null,(cljs.core.truth_(oops.core.set_selector_dynamically)?oops.core.set_selector_dynamically.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"report-if-needed-dynamically"),new cljs.core.Var(function(){return oops.core.report_if_needed_dynamically;},new cljs.core.Symbol("oops.core","report-if-needed-dynamically","oops.core/report-if-needed-dynamically",-763219902,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"oops.core","oops.core",466106448,null),new cljs.core.Symbol(null,"report-if-needed-dynamically","report-if-needed-dynamically",311331604,null),"target/public/cljs-out/prod/oops/core.cljs",45,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"msg-id","msg-id",-325240342,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"info","info",1323462525,null)], null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"msg-id","msg-id",-325240342,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"info","info",1323462525,null)], null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,true,33,33,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"msg-id","msg-id",-325240342,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"info","info",1323462525,null)], null)], null)),null,(cljs.core.truth_(oops.core.report_if_needed_dynamically)?oops.core.report_if_needed_dynamically.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"validate-object-access-dynamically"),new cljs.core.Var(function(){return oops.core.validate_object_access_dynamically;},new cljs.core.Symbol("oops.core","validate-object-access-dynamically","oops.core/validate-object-access-dynamically",207765475,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"oops.core","oops.core",466106448,null),new cljs.core.Symbol(null,"validate-object-access-dynamically","validate-object-access-dynamically",-865639243,null),"target/public/cljs-out/prod/oops/core.cljs",50,1,38,38,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"obj","obj",-1672671807,null),new cljs.core.Symbol(null,"mode","mode",-2000032078,null),new cljs.core.Symbol(null,"key","key",124488940,null),new cljs.core.Symbol(null,"push?","push?",951925465,null),new cljs.core.Symbol(null,"check-key-read?","check-key-read?",417109199,null),new cljs.core.Symbol(null,"check-key-write?","check-key-write?",1770430739,null)], null)),null,((oops.core.validate_object_access_dynamically)?oops.core.validate_object_access_dynamically.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"get-selector-call-info-dynamically"),new cljs.core.Var(function(){return oops.core.get_selector_call_info_dynamically;},new cljs.core.Symbol("oops.core","get-selector-call-info-dynamically","oops.core/get-selector-call-info-dynamically",1275068300,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"oops.core","oops.core",466106448,null),new cljs.core.Symbol(null,"get-selector-call-info-dynamically","get-selector-call-info-dynamically",200951130,null),"target/public/cljs-out/prod/oops/core.cljs",41,1,62,62,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"obj","obj",-1672671807,null),new cljs.core.Symbol(null,"selector","selector",-1891906903,null)], null)),null,(cljs.core.truth_(oops.core.get_selector_call_info_dynamically)?oops.core.get_selector_call_info_dynamically.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"build-path-dynamically"),new cljs.core.Var(function(){return oops.core.build_path_dynamically;},new cljs.core.Symbol("oops.core","build-path-dynamically","oops.core/build-path-dynamically",1111233974,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"oops.core","oops.core",466106448,null),new cljs.core.Symbol(null,"build-path-dynamically","build-path-dynamically",37310204,null),"target/public/cljs-out/prod/oops/core.cljs",29,1,47,47,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"selector","selector",-1891906903,null)], null)),null,(cljs.core.truth_(oops.core.build_path_dynamically)?oops.core.build_path_dynamically.cljs$lang$test:null)]))], null)], null))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"garden.core","garden.core",1471255263,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"css"),new cljs.core.Var(function(){return garden.core.css;},new cljs.core.Symbol("garden.core","css","garden.core/css",1972885418,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.core","garden.core",1471255263,null),new cljs.core.Symbol(null,"css","css",-1519390606,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/core.cljc",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"rules","rules",-1455523403,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"rules","rules",-1455523403,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,5,5,new cljs.core.Symbol(null,"String","String",-2070057435,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"rules","rules",-1455523403,null)], null)),"Convert a variable number of Clojure data structure to a string of\n  CSS. The first argument may be a list of flags for the compiler.",(cljs.core.truth_(garden.core.css)?garden.core.css.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"style"),new cljs.core.Var(function(){return garden.core.style;},new cljs.core.Symbol("garden.core","style","garden.core/style",-189384737,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.core","garden.core",1471255263,null),new cljs.core.Symbol(null,"style","style",1143888791,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/core.cljc",20,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"maps","maps",-71029607,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"maps","maps",-71029607,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,12,12,new cljs.core.Symbol(null,"String","String",-2070057435,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"maps","maps",-71029607,null)], null)),"Convert a variable number of maps into a string of CSS for use with\n  the HTML `style` attribute.",(cljs.core.truth_(garden.core.style)?garden.core.style.cljs$lang$test:null)]))], null)], null))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"color+"),new cljs.core.Var(function(){return garden.color.color_PLUS_;},new cljs.core.Symbol("garden.color","color+","garden.color/color+",-1967161156,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"color+","color+",1275281090,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",9,1,280,283,cljs.core.List.EMPTY,"Add the RGB components of two or more colors.",(cljs.core.truth_(garden.color.color_PLUS_)?garden.color.color_PLUS_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"as-hsla"),new cljs.core.Var(function(){return garden.color.as_hsla;},new cljs.core.Symbol("garden.color","as-hsla","garden.color/as-hsla",-1396291948,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"as-hsla","as-hsla",1836752642,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",14,1,251,251,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null)], null)),"Converts a color to HSLA. Assumes an alpha value of 1.00 unless one is\n  currently set on color.",(cljs.core.truth_(garden.color.as_hsla)?garden.color.as_hsla.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"opacify"),new cljs.core.Var(function(){return garden.color.opacify;},new cljs.core.Symbol("garden.color","opacify","garden.color/opacify",167750664,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"opacify","opacify",-679811102,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",14,1,335,335,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null),new cljs.core.Symbol(null,"amount","amount",2005021031,null)], null)),"Increases the alpha value of a given color by amount.",(cljs.core.truth_(garden.color.opacify)?garden.color.opacify.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"mix"),new cljs.core.Var(function(){return garden.color.mix;},new cljs.core.Symbol("garden.color","mix","garden.color/mix",838673385,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"mix","mix",2121373763,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",10,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color-1","color-1",-1531884134,null),new cljs.core.Symbol(null,"color-2","color-2",-973471495,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color-1","color-1",-1531884134,null),new cljs.core.Symbol(null,"color-2","color-2",-973471495,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color-1","color-1",-1531884134,null),new cljs.core.Symbol(null,"color-2","color-2",-973471495,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,345,345,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color-1","color-1",-1531884134,null),new cljs.core.Symbol(null,"color-2","color-2",-973471495,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color-1","color-1",-1531884134,null),new cljs.core.Symbol(null,"color-2","color-2",-973471495,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),"Mix two or more colors by averaging their RGB channels.",(cljs.core.truth_(garden.color.mix)?garden.color.mix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"hsla?"),new cljs.core.Var(function(){return garden.color.hsla_QMARK_;},new cljs.core.Symbol("garden.color","hsla?","garden.color/hsla?",973333053,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"hsla?","hsla?",-2054773693,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",12,1,101,101,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null)], null)),"Return true if color is an HSLA color.",(cljs.core.truth_(garden.color.hsla_QMARK_)?garden.color.hsla_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"invert"),new cljs.core.Var(function(){return garden.color.invert;},new cljs.core.Symbol("garden.color","invert","garden.color/invert",2145842824,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"invert","invert",-1100858266,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",13,1,340,340,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null)], null)),"Return the inversion of a color.",(cljs.core.truth_(garden.color.invert)?garden.color.invert.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rotate-hue"),new cljs.core.Var(function(){return garden.color.rotate_hue;},new cljs.core.Symbol("garden.color","rotate-hue","garden.color/rotate-hue",-1404584728,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"rotate-hue","rotate-hue",1657455942,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",17,1,305,305,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null),new cljs.core.Symbol(null,"amount","amount",2005021031,null)], null)),"Rotates the hue value of a given color by amount.",(cljs.core.truth_(garden.color.rotate_hue)?garden.color.rotate_hue.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"color*"),new cljs.core.Var(function(){return garden.color.color_STAR_;},new cljs.core.Symbol("garden.color","color*","garden.color/color*",952091948,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"color*","color*",2033851270,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",9,1,290,293,cljs.core.List.EMPTY,"Multiply the RGB components of two or more colors.",(cljs.core.truth_(garden.color.color_STAR_)?garden.color.color_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"hsl->hex"),new cljs.core.Var(function(){return garden.color.hsl__GT_hex;},new cljs.core.Symbol("garden.color","hsl->hex","garden.color/hsl->hex",-1117006263,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"hsl->hex","hsl->hex",-751577,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",15,1,201,201,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null)], null)),"Convert an HSL color map to a hexadecimal string.",(cljs.core.truth_(garden.color.hsl__GT_hex)?garden.color.hsl__GT_hex.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rgb->hex"),new cljs.core.Var(function(){return garden.color.rgb__GT_hex;},new cljs.core.Symbol("garden.color","rgb->hex","garden.color/rgb->hex",1167958845,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"rgb->hex","rgb->hex",69298855,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",15,1,135,135,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Keyword(null,"red","red",-969428204),new cljs.core.Symbol(null,"g","g",-916345864,null),new cljs.core.Keyword(null,"green","green",-945526839),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Keyword(null,"blue","blue",-622100620)], null)], null)),"Convert an RGB color map to a hexadecimal color.",(cljs.core.truth_(garden.color.rgb__GT_hex)?garden.color.rgb__GT_hex.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"as-hex"),new cljs.core.Var(function(){return garden.color.as_hex;},new cljs.core.Symbol("garden.color","as-hex","garden.color/as-hex",-1212093790,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"as-hex","as-hex",-162553592,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",13,1,222,222,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Convert a color to a hexadecimal string.",(cljs.core.truth_(garden.color.as_hex)?garden.color.as_hex.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"analogous"),new cljs.core.Var(function(){return garden.color.analogous;},new cljs.core.Symbol("garden.color","analogous","garden.color/analogous",-2052447742,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"analogous","analogous",1193667560,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",16,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null),new cljs.core.Symbol(null,"clockwise?","clockwise?",1923170292,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null),new cljs.core.Symbol(null,"clockwise?","clockwise?",1923170292,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,365,365,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null),new cljs.core.Symbol(null,"clockwise?","clockwise?",1923170292,null)], null)),"Given a color return a triple of colors which are 0, 30, and 60\n  degrees clockwise from it. If a second falsy argument is passed the\n  returned values will be in a counter-clockwise direction.",(cljs.core.truth_(garden.color.analogous)?garden.color.analogous.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rgba"),new cljs.core.Var(function(){return garden.color.rgba;},new cljs.core.Symbol("garden.color","rgba","garden.color/rgba",-1424771361,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"rgba","rgba",-392427191,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",11,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),4,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),4,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"g","g",-916345864,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"a","a",-482876059,null)], null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"g","g",-916345864,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"a","a",-482876059,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"g","g",-916345864,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"a","a",-482876059,null)], null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"g","g",-916345864,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"a","a",-482876059,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,56,56,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"g","g",-916345864,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"a","a",-482876059,null)], null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"g","g",-916345864,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"a","a",-482876059,null)], null)),"Create an RGBA color.",(cljs.core.truth_(garden.color.rgba)?garden.color.rgba.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"color-name->hex"),new cljs.core.Var(function(){return garden.color.color_name__GT_hex;},new cljs.core.Symbol("garden.color","color-name->hex","garden.color/color-name->hex",-210694428,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"color-name->hex","color-name->hex",-1292470966,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",21,1,423,423,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.color.color_name__GT_hex)?garden.color.color_name__GT_hex.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"scale-lightness"),new cljs.core.Var(function(){return garden.color.scale_lightness;},new cljs.core.Symbol("garden.color","scale-lightness","garden.color/scale-lightness",-1612533411,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"scale-lightness","scale-lightness",1550285771,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",22,1,600,600,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null),new cljs.core.Symbol(null,"amount","amount",2005021031,null)], null)),"Scales the lightness of a color by amount, which is treated as a percentage.\n  Supply positive values to scale upwards and negative values to scale downwards.",(cljs.core.truth_(garden.color.scale_lightness)?garden.color.scale_lightness.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"darken"),new cljs.core.Var(function(){return garden.color.darken;},new cljs.core.Symbol("garden.color","darken","garden.color/darken",-1916760234,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"darken","darken",-884192820,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",13,1,325,325,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null),new cljs.core.Symbol(null,"amount","amount",2005021031,null)], null)),"Decrease the lightness value a given color by amount.",(cljs.core.truth_(garden.color.darken)?garden.color.darken.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"hsl?"),new cljs.core.Var(function(){return garden.color.hsl_QMARK_;},new cljs.core.Symbol("garden.color","hsl?","garden.color/hsl?",1893684920,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"hsl?","hsl?",861464622,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",11,1,95,95,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null)], null)),"Return true if color is an HSL color.",(cljs.core.truth_(garden.color.hsl_QMARK_)?garden.color.hsl_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"hex->hsl"),new cljs.core.Var(function(){return garden.color.hex__GT_hsl;},new cljs.core.Symbol("garden.color","hex->hsl","garden.color/hex->hsl",428533524,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"hex->hsl","hex->hsl",-686318194,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",15,1,206,206,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null)], null)),"Convert a hexadecimal color to an HSL color.",(cljs.core.truth_(garden.color.hex__GT_hsl)?garden.color.hex__GT_hsl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"as-rgb"),new cljs.core.Var(function(){return garden.color.as_rgb;},new cljs.core.Symbol("garden.color","as-rgb","garden.color/as-rgb",1160694032,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"as-rgb","as-rgb",-2069137490,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",13,1,231,231,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Convert a color to a RGB.",(cljs.core.truth_(garden.color.as_rgb)?garden.color.as_rgb.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"from-name"),new cljs.core.Var(function(){return garden.color.from_name;},new cljs.core.Symbol("garden.color","from-name","garden.color/from-name",1614963338,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"from-name","from-name",-1077602032,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",16,1,586,586,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Given a CSS color name n return an instance of CSSColor.",(cljs.core.truth_(garden.color.from_name)?garden.color.from_name.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"as-color"),new cljs.core.Var(function(){return garden.color.as_color;},new cljs.core.Symbol("garden.color","as-color","garden.color/as-color",-1454305074,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"as-color","as-color",1877793616,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",14,1,44,44,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.color.as_color)?garden.color.as_color.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rgb->hsl"),new cljs.core.Var(function(){return garden.color.rgb__GT_hsl;},new cljs.core.Symbol("garden.color","rgb->hsl","garden.color/rgb->hsl",22173643,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"rgb->hsl","rgb->hsl",1121816145,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",15,1,146,146,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"red","red",671103323,null),new cljs.core.Symbol(null,"green","green",695004688,null),new cljs.core.Symbol(null,"blue","blue",1018430907,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"color","color",-1642760596,null)], null)], null)),"Convert an RGB color map to an HSL color map.",(cljs.core.truth_(garden.color.rgb__GT_hsl)?garden.color.rgb__GT_hsl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rgb"),new cljs.core.Var(function(){return garden.color.rgb;},new cljs.core.Symbol("garden.color","rgb","garden.color/rgb",1906423816,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"rgb","rgb",-1222312302,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",10,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"g","g",-916345864,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"vs","vs",-381565563,null)], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"g","g",-916345864,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"g","g",-916345864,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"vs","vs",-381565563,null)], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"g","g",-916345864,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,46,46,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"g","g",-916345864,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"vs","vs",-381565563,null)], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"g","g",-916345864,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)),"Create an RGB color.",(cljs.core.truth_(garden.color.rgb)?garden.color.rgb.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"tetrad"),new cljs.core.Var(function(){return garden.color.tetrad;},new cljs.core.Symbol("garden.color","tetrad","garden.color/tetrad",512020568,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"tetrad","tetrad",-805237838,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",13,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null),new cljs.core.Symbol(null,"angle","angle",-1032341515,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null),new cljs.core.Symbol(null,"angle","angle",-1032341515,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,394,394,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null),new cljs.core.Symbol(null,"angle","angle",-1032341515,null)], null)),"Given a color return a quadruple of four colors which are\n  equidistance on the color wheel (ie. a pair of complements). An\n  optional angle may be given for color of the second complement in the\n  pair (this defaults to 90 when only color is passed).",(cljs.core.truth_(garden.color.tetrad)?garden.color.tetrad.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"hsl"),new cljs.core.Var(function(){return garden.color.hsl;},new cljs.core.Symbol("garden.color","hsl","garden.color/hsl",-607452679,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"hsl","hsl",357582931,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",10,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"h","h",-1544777029,null),new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"l","l",-1258542346,null)], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"h","h",-1544777029,null),new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"l","l",-1258542346,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"h","h",-1544777029,null),new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"l","l",-1258542346,null)], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"h","h",-1544777029,null),new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"l","l",-1258542346,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,66,66,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"h","h",-1544777029,null),new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"l","l",-1258542346,null)], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"h","h",-1544777029,null),new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"l","l",-1258542346,null)], null)),"Create an HSL color.",(cljs.core.truth_(garden.color.hsl)?garden.color.hsl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"hex-re"),new cljs.core.Var(function(){return garden.color.hex_re;},new cljs.core.Symbol("garden.color","hex-re","garden.color/hex-re",-972769755,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"hex-re","hex-re",159631507,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",9,1,112,117,cljs.core.List.EMPTY,"Regular expression for matching a hexadecimal color.\n             Matches hexadecimal colors of length three or six possibly\n             lead by a \"#\". The color portion is captured.",(cljs.core.truth_(garden.color.hex_re)?garden.color.hex_re.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rgb?"),new cljs.core.Var(function(){return garden.color.rgb_QMARK_;},new cljs.core.Symbol("garden.color","rgb?","garden.color/rgb?",1407687845,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"rgb?","rgb?",-1872046829,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",11,1,89,89,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null)], null)),"Return true if color is an RGB color.",(cljs.core.truth_(garden.color.rgb_QMARK_)?garden.color.rgb_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"color?"),new cljs.core.Var(function(){return garden.color.color_QMARK_;},new cljs.core.Symbol("garden.color","color?","garden.color/color?",-1325527063,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"color?","color?",-251442829,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",13,1,107,107,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Return true if x is a color.",(cljs.core.truth_(garden.color.color_QMARK_)?garden.color.color_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"lighten"),new cljs.core.Var(function(){return garden.color.lighten;},new cljs.core.Symbol("garden.color","lighten","garden.color/lighten",-1790369299,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"lighten","lighten",1406066547,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",14,1,320,320,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null),new cljs.core.Symbol(null,"amount","amount",2005021031,null)], null)),"Increase the lightness value a given color by amount.",(cljs.core.truth_(garden.color.lighten)?garden.color.lighten.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"transparentize"),new cljs.core.Var(function(){return garden.color.transparentize;},new cljs.core.Symbol("garden.color","transparentize","garden.color/transparentize",-860971009,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"transparentize","transparentize",-1909907371,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",21,1,330,330,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null),new cljs.core.Symbol(null,"amount","amount",2005021031,null)], null)),"Decreases the alpha value of a given color by amount.",(cljs.core.truth_(garden.color.transparentize)?garden.color.transparentize.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"hex?"),new cljs.core.Var(function(){return garden.color.hex_QMARK_;},new cljs.core.Symbol("garden.color","hex?","garden.color/hex?",1415510011,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"hex?","hex?",-1763497899,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",11,1,119,119,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if x is a hexadecimal color.",(cljs.core.truth_(garden.color.hex_QMARK_)?garden.color.hex_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rgb-clip"),new cljs.core.Var(function(){return garden.color.rgb_clip;},new cljs.core.Symbol("garden.color","rgb-clip","garden.color/rgb-clip",1904026973,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"rgb-clip","rgb-clip",821754679,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",14,1,219,219,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.color.rgb_clip)?garden.color.rgb_clip.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"triad"),new cljs.core.Var(function(){return garden.color.triad;},new cljs.core.Symbol("garden.color","triad","garden.color/triad",1501634301,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"triad","triad",-1707161769,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",12,1,375,375,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null)], null)),"Given a color return a triple of colors which are equidistance apart\n  on the color wheel.",(cljs.core.truth_(garden.color.triad)?garden.color.triad.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"as-hsl"),new cljs.core.Var(function(){return garden.color.as_hsl;},new cljs.core.Symbol("garden.color","as-hsl","garden.color/as-hsl",1489352210,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"as-hsl","as-hsl",-2026278792,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",13,1,241,241,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Convert a color to a HSL.",(cljs.core.truth_(garden.color.as_hsl)?garden.color.as_hsl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"scale-alpha"),new cljs.core.Var(function(){return garden.color.scale_alpha;},new cljs.core.Symbol("garden.color","scale-alpha","garden.color/scale-alpha",263363426,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"scale-alpha","scale-alpha",-867345160,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",18,1,612,612,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null),new cljs.core.Symbol(null,"amount","amount",2005021031,null)], null)),"Scales the alpha of a color by amount, which is treated as a percentage.\n  Supply positive values to scale upwards and negative values to scale downwards.",(cljs.core.truth_(garden.color.scale_alpha)?garden.color.scale_alpha.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"split-complement"),new cljs.core.Var(function(){return garden.color.split_complement;},new cljs.core.Symbol("garden.color","split-complement","garden.color/split-complement",-359306666,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"split-complement","split-complement",904504760,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",23,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null),new cljs.core.Symbol(null,"distance-from-complement","distance-from-complement",170597933,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null),new cljs.core.Symbol(null,"distance-from-complement","distance-from-complement",170597933,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,381,381,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null),new cljs.core.Symbol(null,"distance-from-complement","distance-from-complement",170597933,null)], null)),"Given a color return a triple of the color and the two colors on\n  either side of it's complement.",(cljs.core.truth_(garden.color.split_complement)?garden.color.split_complement.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"weighted-mix"),new cljs.core.Var(function(){return garden.color.weighted_mix;},new cljs.core.Symbol("garden.color","weighted-mix","garden.color/weighted-mix",-1085189054,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"weighted-mix","weighted-mix",-53178664,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",19,1,651,651,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color-1","color-1",-1531884134,null),new cljs.core.Symbol(null,"color-2","color-2",-973471495,null),new cljs.core.Symbol(null,"weight","weight",377735322,null)], null)),"`weight` is number 0 to 100 (%).\n   At 0, it weighs color-1 at 100%.\n   At 100, it weighs color-2 at 100%.\n   Returns hex string.",(cljs.core.truth_(garden.color.weighted_mix)?garden.color.weighted_mix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"percent-clip"),new cljs.core.Var(function(){return garden.color.percent_clip;},new cljs.core.Symbol("garden.color","percent-clip","garden.color/percent-clip",-2112844430,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"percent-clip","percent-clip",1033226200,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",18,1,211,211,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.color.percent_clip)?garden.color.percent_clip.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"hsl->rgb"),new cljs.core.Var(function(){return garden.color.hsl__GT_rgb;},new cljs.core.Symbol("garden.color","hsl->rgb","garden.color/hsl->rgb",-747520285,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"hsl->rgb","hsl->rgb",-1846217607,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",15,1,171,171,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"hue","hue",1132452679,null),new cljs.core.Symbol(null,"saturation","saturation",1626283598,null),new cljs.core.Symbol(null,"lightness","lightness",-400370403,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"color","color",-1642760596,null)], null)], null)),"Convert an HSL color map to an RGB color map.",(cljs.core.truth_(garden.color.hsl__GT_rgb)?garden.color.hsl__GT_rgb.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"shades"),new cljs.core.Var(function(){return garden.color.shades;},new cljs.core.Symbol("garden.color","shades","garden.color/shades",1040684215,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"shades","shades",-124035815,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",13,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null),new cljs.core.Symbol(null,"step","step",-1365547645,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null),new cljs.core.Symbol(null,"step","step",-1365547645,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,409,409,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null),new cljs.core.Symbol(null,"step","step",-1365547645,null)], null)),"Given a color return a list of shades from lightest to darkest by\n  a step. By default the step is 10. White and black are excluded from\n  the returned list.",(cljs.core.truth_(garden.color.shades)?garden.color.shades.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"hex->rgb"),new cljs.core.Var(function(){return garden.color.hex__GT_rgb;},new cljs.core.Symbol("garden.color","hex->rgb","garden.color/hex->rgb",814263087,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"hex->rgb","hex->rgb",-233574055,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",15,1,124,124,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Convert a hexadecimal color to an RGB color map.",(cljs.core.truth_(garden.color.hex__GT_rgb)?garden.color.hex__GT_rgb.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"map->CSSColor"),new cljs.core.Var(function(){return garden.color.map__GT_CSSColor;},new cljs.core.Symbol("garden.color","map->CSSColor","garden.color/map->CSSColor",-2017270569,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"internal-ctor","internal-ctor",937392560),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"map->CSSColor","map->CSSColor",-918213063,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",20,1,true,new cljs.core.Keyword(null,"map","map",1371690461),22,22,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"G__56760","G__56760",-692395345,null)], null)),"Factory function for garden.color/CSSColor, taking a map of keywords to field values.",(cljs.core.truth_(garden.color.map__GT_CSSColor)?garden.color.map__GT_CSSColor.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"scale-saturation"),new cljs.core.Var(function(){return garden.color.scale_saturation;},new cljs.core.Symbol("garden.color","scale-saturation","garden.color/scale-saturation",-638313035,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"scale-saturation","scale-saturation",512271899,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",23,1,606,606,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null),new cljs.core.Symbol(null,"amount","amount",2005021031,null)], null)),"Scales the saturation of a color by amount, which is treated as a percentage.\n  Supply positive values to scale upwards and negative values to scale downwards.",(cljs.core.truth_(garden.color.scale_saturation)?garden.color.scale_saturation.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"desaturate"),new cljs.core.Var(function(){return garden.color.desaturate;},new cljs.core.Symbol("garden.color","desaturate","garden.color/desaturate",1796567041,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"desaturate","desaturate",630767259,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",17,1,315,315,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null),new cljs.core.Symbol(null,"amount","amount",2005021031,null)], null)),"Decrease the saturation value of a given color by amount.",(cljs.core.truth_(garden.color.desaturate)?garden.color.desaturate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"hsla"),new cljs.core.Var(function(){return garden.color.hsla;},new cljs.core.Symbol("garden.color","hsla","garden.color/hsla",207973717,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"hsla","hsla",-839272773,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",11,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),4,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),4,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"h","h",-1544777029,null),new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"l","l",-1258542346,null),new cljs.core.Symbol(null,"a","a",-482876059,null)], null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"h","h",-1544777029,null),new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"l","l",-1258542346,null),new cljs.core.Symbol(null,"a","a",-482876059,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"h","h",-1544777029,null),new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"l","l",-1258542346,null),new cljs.core.Symbol(null,"a","a",-482876059,null)], null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"h","h",-1544777029,null),new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"l","l",-1258542346,null),new cljs.core.Symbol(null,"a","a",-482876059,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,79,79,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"h","h",-1544777029,null),new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"l","l",-1258542346,null),new cljs.core.Symbol(null,"a","a",-482876059,null)], null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"h","h",-1544777029,null),new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"l","l",-1258542346,null),new cljs.core.Symbol(null,"a","a",-482876059,null)], null)),"Create an HSLA color.",(cljs.core.truth_(garden.color.hsla)?garden.color.hsla.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->CSSColor"),new cljs.core.Var(function(){return garden.color.__GT_CSSColor;},new cljs.core.Symbol("garden.color","->CSSColor","garden.color/->CSSColor",-905783678,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"internal-ctor","internal-ctor",937392560),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"->CSSColor","->CSSColor",-1937372900,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",20,1,true,new cljs.core.Keyword(null,"positional","positional",-203580463),22,22,cljs.core.list(new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"red","red",671103323,null),new cljs.core.Symbol(null,"green","green",695004688,null),new cljs.core.Symbol(null,"blue","blue",1018430907,null),new cljs.core.Symbol(null,"hue","hue",1132452679,null),new cljs.core.Symbol(null,"saturation","saturation",1626283598,null),new cljs.core.Symbol(null,"lightness","lightness",-400370403,null),new cljs.core.Symbol(null,"alpha","alpha",65549086,null)], null)),"Positional factory function for garden.color/CSSColor.",(cljs.core.truth_(garden.color.__GT_CSSColor)?garden.color.__GT_CSSColor.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"CSSColor"),new cljs.core.Var(function(){return garden.color.CSSColor;},new cljs.core.Symbol("garden.color","CSSColor","garden.color/CSSColor",1487737223,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",new cljs.core.Keyword(null,"line","line",212345235),22,new cljs.core.Keyword(null,"column","column",2078222095),12,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"CSSColor","CSSColor",438749757,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.color.CSSColor)?garden.color.CSSColor.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"complement"),new cljs.core.Var(function(){return garden.color.complement;},new cljs.core.Symbol("garden.color","complement","garden.color/complement",135151083,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"complement","complement",-913606051,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",17,1,356,356,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null)], null)),"Return the complement of a color.",(cljs.core.truth_(garden.color.complement)?garden.color.complement.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"saturate"),new cljs.core.Var(function(){return garden.color.saturate;},new cljs.core.Symbol("garden.color","saturate","garden.color/saturate",-338877109,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"saturate","saturate",709520189,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",15,1,310,310,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"color","color",-1642760596,null),new cljs.core.Symbol(null,"amount","amount",2005021031,null)], null)),"Increase the saturation value of a given color by amount.",(cljs.core.truth_(garden.color.saturate)?garden.color.saturate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"color-div"),new cljs.core.Var(function(){return garden.color.color_div;},new cljs.core.Symbol("garden.color","color-div","garden.color/color-div",-1993911948,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"color-div","color-div",1319345950,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",12,1,295,298,cljs.core.List.EMPTY,"Divide the RGB components of two or more colors.",(cljs.core.truth_(garden.color.color_div)?garden.color.color_div.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"color-"),new cljs.core.Var(function(){return garden.color.color_;},new cljs.core.Symbol("garden.color","color-","garden.color/color-",1618540872,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"color-","color-",568525630,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",9,1,285,288,cljs.core.List.EMPTY,"Subtract the RGB components of two or more colors.",(cljs.core.truth_(garden.color.color_)?garden.color.color_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"trim-one"),new cljs.core.Var(function(){return garden.color.trim_one;},new cljs.core.Symbol("garden.color","trim-one","garden.color/trim-one",-1736379863,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.color","garden.color",1504496887,null),new cljs.core.Symbol(null,"trim-one","trim-one",1577432223,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/color.cljc",15,1,143,143,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(garden.color.trim_one)?garden.color.trim_one.cljs$lang$test:null)]))], null)], true))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"garden.compiler","garden.compiler",-2001058951,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"expand-declaration-1"),new cljs.core.Var(function(){return garden.compiler.expand_declaration_1;},new cljs.core.Symbol("garden.compiler","expand-declaration-1","garden.compiler/expand-declaration-1",1902334824,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.compiler","garden.compiler",-2001058951,null),new cljs.core.Symbol(null,"expand-declaration-1","expand-declaration-1",513519520,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/compiler.cljc",27,1,151,151,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"declaration","declaration",-179402241,null)], null)),null,(cljs.core.truth_(garden.compiler.expand_declaration_1)?garden.compiler.expand_declaration_1.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"expand"),new cljs.core.Var(function(){return garden.compiler.expand;},new cljs.core.Symbol("garden.compiler","expand","garden.compiler/expand",-1327173972,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("garden.compiler","IExpandable","garden.compiler/IExpandable",-171320451,null),new cljs.core.Symbol(null,"garden.compiler","garden.compiler",-2001058951,null),new cljs.core.Symbol(null,"expand","expand",-2059187612,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/compiler.cljc",10,1,131,132,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),"Return a list containing the expanded form of `this`.",(cljs.core.truth_(garden.compiler.expand)?garden.compiler.expand.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"compile-css"),new cljs.core.Var(function(){return garden.compiler.compile_css;},new cljs.core.Symbol("garden.compiler","compile-css","garden.compiler/compile-css",1462578621,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.compiler","garden.compiler",-2001058951,null),new cljs.core.Symbol(null,"compile-css","compile-css",1640269381,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/compiler.cljc",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"flags","flags",-879017694,null),new cljs.core.Symbol(null,"rules","rules",-1455523403,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"flags","flags",-879017694,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"rules","rules",-1455523403,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,799,799,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"flags","flags",-879017694,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"rules","rules",-1455523403,null)], null)),"Convert any number of Clojure data structures to CSS.",(cljs.core.truth_(garden.compiler.compile_css)?garden.compiler.compile_css.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"IExpandable"),new cljs.core.Var(function(){return garden.compiler.IExpandable;},new cljs.core.Symbol("garden.compiler","IExpandable","garden.compiler/IExpandable",-171320451,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol-symbol","protocol-symbol",1279552198),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"protocol-info","protocol-info",1471745843),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"sigs","sigs",-1653119622),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"jsdoc","jsdoc",1745183516),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"garden.compiler","garden.compiler",-2001058951,null),new cljs.core.Symbol(null,"IExpandable","IExpandable",-811190523,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/compiler.cljc",25,1,131,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"methods","methods",453930866),new cljs.core.PersistentArrayMap(null, 1, [cljs.core.with_meta(new cljs.core.Symbol(null,"expand","expand",-2059187612,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Return a list containing the expanded form of `this`."], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)], null)], null)], null),131,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"expand","expand",595248157),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"expand","expand",-2059187612,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Return a list containing the expanded form of `this`."], null)], null),cljs.core.List.EMPTY,null,cljs.core.list("@interface"),(cljs.core.truth_(garden.compiler.IExpandable)?garden.compiler.IExpandable.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"with-media-query-context"),new cljs.core.Var(function(){return garden.compiler.with_media_query_context;},new cljs.core.Symbol("garden.compiler","with-media-query-context","garden.compiler/with-media-query-context",-667877646,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"macro","macro",-867863404),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.compiler","garden.compiler",-2001058951,null),new cljs.core.Symbol(null,"with-media-query-context","with-media-query-context",866687626,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/compiler.cljc",35,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),cljs.core.list(cljs.core.list(new cljs.core.Symbol(null,"selector-context","selector-context",206030851,null),new cljs.core.Symbol(null,"body","body",-408674142,null))),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"selector-context","selector-context",206030851,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"body","body",-408674142,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,82,true,82,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"selector-context","selector-context",206030851,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"body","body",-408674142,null)], null)),null,(cljs.core.truth_(garden.compiler.with_media_query_context)?garden.compiler.with_media_query_context.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"compile-style"),new cljs.core.Var(function(){return garden.compiler.compile_style;},new cljs.core.Symbol("garden.compiler","compile-style","garden.compiler/compile-style",415428140,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.compiler","garden.compiler",-2001058951,null),new cljs.core.Symbol(null,"compile-style","compile-style",1182417524,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/compiler.cljc",20,1,753,753,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ms","ms",487821794,null)], null)),"Convert a sequence of maps into CSS for use with the HTML style\n   attribute.",(cljs.core.truth_(garden.compiler.compile_style)?garden.compiler.compile_style.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"render-css"),new cljs.core.Var(function(){return garden.compiler.render_css;},new cljs.core.Symbol("garden.compiler","render-css","garden.compiler/render-css",1369755213,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("garden.compiler","CSSRenderer","garden.compiler/CSSRenderer",1411982370,null),new cljs.core.Symbol(null,"garden.compiler","garden.compiler",-2001058951,null),new cljs.core.Symbol(null,"render-css","render-css",-1911788939,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/compiler.cljc",14,1,364,365,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),"Convert a Clojure data type in to a string of CSS.",(cljs.core.truth_(garden.compiler.render_css)?garden.compiler.render_css.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"with-selector-context"),new cljs.core.Var(function(){return garden.compiler.with_selector_context;},new cljs.core.Symbol("garden.compiler","with-selector-context","garden.compiler/with-selector-context",-2031490448,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"macro","macro",-867863404),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.compiler","garden.compiler",-2001058951,null),new cljs.core.Symbol(null,"with-selector-context","with-selector-context",-800043336,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/compiler.cljc",32,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),cljs.core.list(cljs.core.list(new cljs.core.Symbol(null,"selector-context","selector-context",206030851,null),new cljs.core.Symbol(null,"body","body",-408674142,null))),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"selector-context","selector-context",206030851,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"body","body",-408674142,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,77,true,77,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"selector-context","selector-context",206030851,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"body","body",-408674142,null)], null)),null,(cljs.core.truth_(garden.compiler.with_selector_context)?garden.compiler.with_selector_context.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"CSSRenderer"),new cljs.core.Var(function(){return garden.compiler.CSSRenderer;},new cljs.core.Symbol("garden.compiler","CSSRenderer","garden.compiler/CSSRenderer",1411982370,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol-symbol","protocol-symbol",1279552198),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"protocol-info","protocol-info",1471745843),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"sigs","sigs",-1653119622),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"jsdoc","jsdoc",1745183516),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"garden.compiler","garden.compiler",-2001058951,null),new cljs.core.Symbol(null,"CSSRenderer","CSSRenderer",2052178042,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/compiler.cljc",25,1,364,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"methods","methods",453930866),new cljs.core.PersistentArrayMap(null, 1, [cljs.core.with_meta(new cljs.core.Symbol(null,"render-css","render-css",-1911788939,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Convert a Clojure data type in to a string of CSS."], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)], null)], null)], null),364,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"render-css","render-css",742646830),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"render-css","render-css",-1911788939,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Convert a Clojure data type in to a string of CSS."], null)], null),cljs.core.List.EMPTY,null,cljs.core.list("@interface"),(cljs.core.truth_(garden.compiler.CSSRenderer)?garden.compiler.CSSRenderer.cljs$lang$test:null)]))], null)], null))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"garden.compression","garden.compression",-1197231970,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"compress-stylesheet"),new cljs.core.Var(function(){return garden.compression.compress_stylesheet;},new cljs.core.Symbol("garden.compression","compress-stylesheet","garden.compression/compress-stylesheet",1122932504,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.compression","garden.compression",-1197231970,null),new cljs.core.Symbol(null,"compress-stylesheet","compress-stylesheet",1050519083,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/compression.cljc",29,4,85,85,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"stylesheet","stylesheet",-152080899,null)], null)),"Compress a string of CSS using a basic compressor.",(cljs.core.truth_(garden.compression.compress_stylesheet)?garden.compression.compress_stylesheet.cljs$lang$test:null)]))], null)], null))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->CSSSelector"),new cljs.core.Var(function(){return garden.selectors.__GT_CSSSelector;},new cljs.core.Symbol("garden.selectors","->CSSSelector","garden.selectors/->CSSSelector",-990670787,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"internal-ctor","internal-ctor",937392560),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"->CSSSelector","->CSSSelector",-723031040,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",26,4,true,new cljs.core.Keyword(null,"positional","positional",-203580463),306,306,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"selector","selector",-1891906903,null)], null)),"Positional factory function for garden.selectors/CSSSelector.",(cljs.core.truth_(garden.selectors.__GT_CSSSelector)?garden.selectors.__GT_CSSSelector.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"form"),new cljs.core.Var(function(){return garden.selectors.form;},new cljs.core.Symbol("garden.selectors","form","garden.selectors/form",-252770227,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS form type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.form)?garden.selectors.form.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"audio"),new cljs.core.Var(function(){return garden.selectors.audio;},new cljs.core.Symbol("garden.selectors","audio","garden.selectors/audio",-568135577,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS audio type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"audio","audio",-835308448,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.audio)?garden.selectors.audio.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"&"),new cljs.core.Var(function(){return garden.selectors._AMPERSAND_;},new cljs.core.Symbol("garden.selectors","&","garden.selectors/&",-1876664917,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",4,1,999,1001,cljs.core.List.EMPTY,"Parent selector.",(cljs.core.truth_(garden.selectors._AMPERSAND_)?garden.selectors._AMPERSAND_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"input"),new cljs.core.Var(function(){return garden.selectors.input;},new cljs.core.Symbol("garden.selectors","input","garden.selectors/input",-1299257859,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS input type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"input","input",-2097503808,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.input)?garden.selectors.input.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"target"),new cljs.core.Var(function(){return garden.selectors.target;},new cljs.core.Symbol("garden.selectors","target","garden.selectors/target",-2134818227,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :target pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"target","target",1893533248,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.target)?garden.selectors.target.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"hgroup"),new cljs.core.Var(function(){return garden.selectors.hgroup;},new cljs.core.Symbol("garden.selectors","hgroup","garden.selectors/hgroup",-1793415545,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS hgroup type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"hgroup","hgroup",-1525585280,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.hgroup)?garden.selectors.hgroup.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"base"),new cljs.core.Var(function(){return garden.selectors.base;},new cljs.core.Symbol("garden.selectors","base","garden.selectors/base",2091357606,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS base type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"base","base",1825810849,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.base)?garden.selectors.base.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"h1"),new cljs.core.Var(function(){return garden.selectors.h1;},new cljs.core.Symbol("garden.selectors","h1","garden.selectors/h1",-525562454,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS h1 type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"h1","h1",-256355935,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.h1)?garden.selectors.h1.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"attr-contains"),new cljs.core.Var(function(){return garden.selectors.attr_contains;},new cljs.core.Symbol("garden.selectors","attr-contains","garden.selectors/attr-contains",-2016851482,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"attr-contains","attr-contains",-1757604383,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",20,1,943,943,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"attr-name","attr-name",-132109252,null),new cljs.core.Symbol(null,"attr-value","attr-value",-561203417,null)], null)),null,(cljs.core.truth_(garden.selectors.attr_contains)?garden.selectors.attr_contains.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"first"),new cljs.core.Var(function(){return garden.selectors.first;},new cljs.core.Symbol("garden.selectors","first","garden.selectors/first",729288444,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :first pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"first","first",996428481,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.first)?garden.selectors.first.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"read-only"),new cljs.core.Var(function(){return garden.selectors.read_only;},new cljs.core.Symbol("garden.selectors","read-only","garden.selectors/read-only",1180140412,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :read-only pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"read-only","read-only",1448824641,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.read_only)?garden.selectors.read_only.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"embed"),new cljs.core.Var(function(){return garden.selectors.embed;},new cljs.core.Symbol("garden.selectors","embed","garden.selectors/embed",1629352965,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS embed type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"embed","embed",285618178,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.embed)?garden.selectors.embed.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"specificity"),new cljs.core.Var(function(){return garden.selectors.specificity;},new cljs.core.Symbol("garden.selectors","specificity","garden.selectors/specificity",-1112322999,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"specificity","specificity",-1404633022,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",18,1,1040,1040,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"selector","selector",-1891906903,null)], null)),"Calculate a CSS3 selector's specificity.\n  \n  Example:\n\n    (specificity \"#s12:not(FOO)\")\n    ;; => 101\n    (specificity (a hover))\n    ;; => 10\n  ",(cljs.core.truth_(garden.selectors.specificity)?garden.selectors.specificity.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"h3"),new cljs.core.Var(function(){return garden.selectors.h3;},new cljs.core.Symbol("garden.selectors","h3","garden.selectors/h3",-855111575,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS h3 type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"h3","h3",-586824606,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.h3)?garden.selectors.h3.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"body"),new cljs.core.Var(function(){return garden.selectors.body;},new cljs.core.Symbol("garden.selectors","body","garden.selectors/body",-676275031,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS body type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"body","body",-408674142,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.body)?garden.selectors.body.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"keygen"),new cljs.core.Var(function(){return garden.selectors.keygen;},new cljs.core.Symbol("garden.selectors","keygen","garden.selectors/keygen",-813604465,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS keygen type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"keygen","keygen",1068838274,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.keygen)?garden.selectors.keygen.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"progress"),new cljs.core.Var(function(){return garden.selectors.progress;},new cljs.core.Symbol("garden.selectors","progress","garden.selectors/progress",1079303983,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS progress type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"progress","progress",1884855074,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.progress)?garden.selectors.progress.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"first-of-type"),new cljs.core.Var(function(){return garden.selectors.first_of_type;},new cljs.core.Symbol("garden.selectors","first-of-type","garden.selectors/first-of-type",626913097,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :first-of-type pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"first-of-type","first-of-type",900311874,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.first_of_type)?garden.selectors.first_of_type.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"cite"),new cljs.core.Var(function(){return garden.selectors.cite;},new cljs.core.Symbol("garden.selectors","cite","garden.selectors/cite",-1008498616,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS cite type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"cite","cite",-744995773,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.cite)?garden.selectors.cite.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"enabled"),new cljs.core.Var(function(){return garden.selectors.enabled;},new cljs.core.Symbol("garden.selectors","enabled","garden.selectors/enabled",-1184570162,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :enabled pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"enabled","enabled",-1458526013,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.enabled)?garden.selectors.enabled.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"before"),new cljs.core.Var(function(){return garden.selectors.before;},new cljs.core.Symbol("garden.selectors","before","garden.selectors/before",1887176478,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"before","before",6839139,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",9,1,911,913,cljs.core.List.EMPTY,"CSS ::before pseudo element selector.",(cljs.core.truth_(garden.selectors.before)?garden.selectors.before.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"nth-child-re"),new cljs.core.Var(function(){return garden.selectors.nth_child_re;},new cljs.core.Symbol("garden.selectors","nth-child-re","garden.selectors/nth-child-re",-480159804,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"nth-child-re","nth-child-re",-209939517,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",18,1,864,864,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.selectors.nth_child_re)?garden.selectors.nth_child_re.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"map"),new cljs.core.Var(function(){return garden.selectors.map;},new cljs.core.Symbol("garden.selectors","map","garden.selectors/map",-1550411729,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS map type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"map","map",-1282745308,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.map)?garden.selectors.map.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"object"),new cljs.core.Var(function(){return garden.selectors.object;},new cljs.core.Symbol("garden.selectors","object","garden.selectors/object",-912169669,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS object type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"object","object",-1179821820,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.object)?garden.selectors.object.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"i"),new cljs.core.Var(function(){return garden.selectors.i;},new cljs.core.Symbol("garden.selectors","i","garden.selectors/i",520832283,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS i type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.i)?garden.selectors.i.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"math"),new cljs.core.Var(function(){return garden.selectors.math;},new cljs.core.Symbol("garden.selectors","math","garden.selectors/math",-655096273,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS math type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"math","math",-386381276,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.math)?garden.selectors.math.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"p"),new cljs.core.Var(function(){return garden.selectors.p;},new cljs.core.Symbol("garden.selectors","p","garden.selectors/p",2058688161,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS p type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.p)?garden.selectors.p.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"nav"),new cljs.core.Var(function(){return garden.selectors.nav;},new cljs.core.Symbol("garden.selectors","nav","garden.selectors/nav",-1665690815,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS nav type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"nav","nav",-1934895292,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.nav)?garden.selectors.nav.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ruby"),new cljs.core.Var(function(){return garden.selectors.ruby;},new cljs.core.Symbol("garden.selectors","ruby","garden.selectors/ruby",-915109937,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS ruby type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"ruby","ruby",-653698108,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.ruby)?garden.selectors.ruby.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"out-of-range"),new cljs.core.Var(function(){return garden.selectors.out_of_range;},new cljs.core.Symbol("garden.selectors","out-of-range","garden.selectors/out-of-range",-1157123121,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :out-of-range pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"out-of-range","out-of-range",-1962117180,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.out_of_range)?garden.selectors.out_of_range.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"links"),new cljs.core.Var(function(){return garden.selectors.links;},new cljs.core.Symbol("garden.selectors","links","garden.selectors/links",716262592,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :links pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"links","links",986024133,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.links)?garden.selectors.links.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"a"),new cljs.core.Var(function(){return garden.selectors.a;},new cljs.core.Symbol("garden.selectors","a","garden.selectors/a",-205510304,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS a type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.a)?garden.selectors.a.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"attr="),new cljs.core.Var(function(){return garden.selectors.attr_EQ_;},new cljs.core.Symbol("garden.selectors","attr=","garden.selectors/attr=",551595726,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"attr=","attr=",285172421,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",12,1,940,940,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"attr-name","attr-name",-132109252,null),new cljs.core.Symbol(null,"attr-value","attr-value",-561203417,null)], null)),null,(cljs.core.truth_(garden.selectors.attr_EQ_)?garden.selectors.attr_EQ_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"menu"),new cljs.core.Var(function(){return garden.selectors.menu;},new cljs.core.Symbol("garden.selectors","menu","garden.selectors/menu",-2035056864,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS menu type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"menu","menu",1992786725,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.menu)?garden.selectors.menu.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"blockquote"),new cljs.core.Var(function(){return garden.selectors.blockquote;},new cljs.core.Symbol("garden.selectors","blockquote","garden.selectors/blockquote",132947776,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS blockquote type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"blockquote","blockquote",2012795717,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.blockquote)?garden.selectors.blockquote.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"required"),new cljs.core.Var(function(){return garden.selectors.required;},new cljs.core.Symbol("garden.selectors","required","garden.selectors/required",-42153190,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :required pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"required","required",-846788763,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.required)?garden.selectors.required.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"img"),new cljs.core.Var(function(){return garden.selectors.img;},new cljs.core.Symbol("garden.selectors","img","garden.selectors/img",-1477286962,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS img type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"img","img",-1211748411,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.img)?garden.selectors.img.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"span"),new cljs.core.Var(function(){return garden.selectors.span;},new cljs.core.Symbol("garden.selectors","span","garden.selectors/span",-1533852445,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS span type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"span","span",-1259562778,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.span)?garden.selectors.span.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"track"),new cljs.core.Var(function(){return garden.selectors.track;},new cljs.core.Symbol("garden.selectors","track","garden.selectors/track",-1654537511,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS track type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"track","track",1836319014,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.track)?garden.selectors.track.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"u"),new cljs.core.Var(function(){return garden.selectors.u;},new cljs.core.Symbol("garden.selectors","u","garden.selectors/u",753131939,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS u type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"u","u",483896742,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.u)?garden.selectors.u.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"attr"),new cljs.core.Var(function(){return garden.selectors.attr;},new cljs.core.Symbol("garden.selectors","attr","garden.selectors/attr",232521283,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"attr","attr",1036399174,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",11,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"attr-name","attr-name",-132109252,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"attr-name","attr-name",-132109252,null),new cljs.core.Symbol(null,"op","op",-242456428,null),new cljs.core.Symbol(null,"attr-value","attr-value",-561203417,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"attr-name","attr-name",-132109252,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"attr-name","attr-name",-132109252,null),new cljs.core.Symbol(null,"op","op",-242456428,null),new cljs.core.Symbol(null,"attr-value","attr-value",-561203417,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,928,928,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"attr-name","attr-name",-132109252,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"attr-name","attr-name",-132109252,null),new cljs.core.Symbol(null,"op","op",-242456428,null),new cljs.core.Symbol(null,"attr-value","attr-value",-561203417,null)], null)),null,(cljs.core.truth_(garden.selectors.attr)?garden.selectors.attr.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dl"),new cljs.core.Var(function(){return garden.selectors.dl;},new cljs.core.Symbol("garden.selectors","dl","garden.selectors/dl",-231431507,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS dl type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"dl","dl",-499620186,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.dl)?garden.selectors.dl.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"select"),new cljs.core.Var(function(){return garden.selectors.select;},new cljs.core.Symbol("garden.selectors","select","garden.selectors/select",-1237363047,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS select type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"select","select",-1506602266,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.select)?garden.selectors.select.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"left"),new cljs.core.Var(function(){return garden.selectors.left;},new cljs.core.Symbol("garden.selectors","left","garden.selectors/left",1508508579,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :left pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"left","left",1241415590,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.left)?garden.selectors.left.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"html"),new cljs.core.Var(function(){return garden.selectors.html;},new cljs.core.Symbol("garden.selectors","html","garden.selectors/html",913593325,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS html type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"html","html",641734630,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.html)?garden.selectors.html.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"thead"),new cljs.core.Var(function(){return garden.selectors.thead;},new cljs.core.Symbol("garden.selectors","thead","garden.selectors/thead",1081016428,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS thead type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"thead","thead",1348656231,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.thead)?garden.selectors.thead.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"del"),new cljs.core.Var(function(){return garden.selectors.del;},new cljs.core.Symbol("garden.selectors","del","garden.selectors/del",-1810253652,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS del type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"del","del",-2079460185,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.del)?garden.selectors.del.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"attr-starts-with*"),new cljs.core.Var(function(){return garden.selectors.attr_starts_with_STAR_;},new cljs.core.Symbol("garden.selectors","attr-starts-with*","garden.selectors/attr-starts-with*",-1415185918,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"attr-starts-with*","attr-starts-with*",-1146550777,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",24,1,950,950,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"attr-name","attr-name",-132109252,null),new cljs.core.Symbol(null,"attr-value","attr-value",-561203417,null)], null)),null,(cljs.core.truth_(garden.selectors.attr_starts_with_STAR_)?garden.selectors.attr_starts_with_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"fieldset"),new cljs.core.Var(function(){return garden.selectors.fieldset;},new cljs.core.Symbol("garden.selectors","fieldset","garden.selectors/fieldset",-41048574,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS fieldset type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"fieldset","fieldset",-309239289,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.fieldset)?garden.selectors.fieldset.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"valid"),new cljs.core.Var(function(){return garden.selectors.valid;},new cljs.core.Symbol("garden.selectors","valid","garden.selectors/valid",452511256,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :valid pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"valid","valid",1796145767,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.valid)?garden.selectors.valid.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"nth-child"),new cljs.core.Var(function(){return garden.selectors.nth_child;},new cljs.core.Symbol("garden.selectors","nth-child","garden.selectors/nth-child",459861784,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"nth-child","nth-child",1801245543,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",12,1,882,884,cljs.core.List.EMPTY,"CSS :nth-child pseudo class selector.",(cljs.core.truth_(garden.selectors.nth_child)?garden.selectors.nth_child.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"only-child"),new cljs.core.Var(function(){return garden.selectors.only_child;},new cljs.core.Symbol("garden.selectors","only-child","garden.selectors/only-child",493003877,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :only-child pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"only-child","only-child",220029032,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.only_child)?garden.selectors.only_child.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"aside"),new cljs.core.Var(function(){return garden.selectors.aside;},new cljs.core.Symbol("garden.selectors","aside","garden.selectors/aside",-1509801819,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS aside type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"aside","aside",-1240038232,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.aside)?garden.selectors.aside.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"figure"),new cljs.core.Var(function(){return garden.selectors.figure;},new cljs.core.Symbol("garden.selectors","figure","garden.selectors/figure",1346791507,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS figure type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"figure","figure",1079137448,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.figure)?garden.selectors.figure.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"nth-of-type"),new cljs.core.Var(function(){return garden.selectors.nth_of_type;},new cljs.core.Symbol("garden.selectors","nth-of-type","garden.selectors/nth-of-type",2022896997,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"nth-of-type","nth-of-type",1219397992,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",14,1,894,896,cljs.core.List.EMPTY,"CSS :nth-of-type pseudo class selector.",(cljs.core.truth_(garden.selectors.nth_of_type)?garden.selectors.nth_of_type.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"first-line"),new cljs.core.Var(function(){return garden.selectors.first_line;},new cljs.core.Symbol("garden.selectors","first-line","garden.selectors/first-line",1120599605,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"first-line","first-line",1925626376,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",13,1,919,921,cljs.core.List.EMPTY,"CSS ::first-line pseudo element selector.",(cljs.core.truth_(garden.selectors.first_line)?garden.selectors.first_line.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"figcaption"),new cljs.core.Var(function(){return garden.selectors.figcaption;},new cljs.core.Symbol("garden.selectors","figcaption","garden.selectors/figcaption",-417418737,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS figcaption type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"figcaption","figcaption",-149590520,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.figcaption)?garden.selectors.figcaption.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"q"),new cljs.core.Var(function(){return garden.selectors.q;},new cljs.core.Symbol("garden.selectors","q","garden.selectors/q",-85072685,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS q type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.q)?garden.selectors.q.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"selector?"),new cljs.core.Var(function(){return garden.selectors.selector_QMARK_;},new cljs.core.Symbol("garden.selectors","selector?","garden.selectors/selector?",-1425479691,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"selector?","selector?",-1157354552,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",16,1,26,26,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(garden.selectors.selector_QMARK_)?garden.selectors.selector_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"bdi"),new cljs.core.Var(function(){return garden.selectors.bdi;},new cljs.core.Symbol("garden.selectors","bdi","garden.selectors/bdi",48268308,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS bdi type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"bdi","bdi",317505641,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.bdi)?garden.selectors.bdi.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"first-child"),new cljs.core.Var(function(){return garden.selectors.first_child;},new cljs.core.Symbol("garden.selectors","first-child","garden.selectors/first-child",-1344281358,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :first-child pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"first-child","first-child",-540335927,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.first_child)?garden.selectors.first_child.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"video"),new cljs.core.Var(function(){return garden.selectors.video;},new cljs.core.Symbol("garden.selectors","video","garden.selectors/video",2069477044,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS video type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"video","video",1797419657,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.video)?garden.selectors.video.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"selector"),new cljs.core.Var(function(){return garden.selectors.selector;},new cljs.core.Symbol("garden.selectors","selector","garden.selectors/selector",-1624275372,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"selector","selector",-1891906903,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",15,1,566,566,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(garden.selectors.selector)?garden.selectors.selector.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"address"),new cljs.core.Var(function(){return garden.selectors.address;},new cljs.core.Symbol("garden.selectors","address","garden.selectors/address",-1814719854,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS address type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"address","address",-2094936343,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.address)?garden.selectors.address.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"caption"),new cljs.core.Var(function(){return garden.selectors.caption;},new cljs.core.Symbol("garden.selectors","caption","garden.selectors/caption",1053270756,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS caption type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"caption","caption",785147625,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.caption)?garden.selectors.caption.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"read-write"),new cljs.core.Var(function(){return garden.selectors.read_write;},new cljs.core.Symbol("garden.selectors","read-write","garden.selectors/read-write",2085669927,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :read-write pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"read-write","read-write",1818554410,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.read_write)?garden.selectors.read_write.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dd"),new cljs.core.Var(function(){return garden.selectors.dd;},new cljs.core.Symbol("garden.selectors","dd","garden.selectors/dd",-504408585,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS dd type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"dd","dd",300093898,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.dd)?garden.selectors.dd.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rp"),new cljs.core.Var(function(){return garden.selectors.rp;},new cljs.core.Symbol("garden.selectors","rp","garden.selectors/rp",-1452244313,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS rp type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"rp","rp",-647737686,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.rp)?garden.selectors.rp.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"attr-matches"),new cljs.core.Var(function(){return garden.selectors.attr_matches;},new cljs.core.Symbol("garden.selectors","attr-matches","garden.selectors/attr-matches",-1898873199,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"attr-matches","attr-matches",-1093860630,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",19,1,956,956,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"attr-name","attr-name",-132109252,null),new cljs.core.Symbol(null,"attr-value","attr-value",-561203417,null)], null)),null,(cljs.core.truth_(garden.selectors.attr_matches)?garden.selectors.attr_matches.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"attr-ends-with"),new cljs.core.Var(function(){return garden.selectors.attr_ends_with;},new cljs.core.Symbol("garden.selectors","attr-ends-with","garden.selectors/attr-ends-with",1569807111,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"attr-ends-with","attr-ends-with",1300569866,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",21,1,953,953,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"attr-name","attr-name",-132109252,null),new cljs.core.Symbol(null,"attr-value","attr-value",-561203417,null)], null)),null,(cljs.core.truth_(garden.selectors.attr_ends_with)?garden.selectors.attr_ends_with.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"hr"),new cljs.core.Var(function(){return garden.selectors.hr;},new cljs.core.Symbol("garden.selectors","hr","garden.selectors/hr",-2081204371,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS hr type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"hr","hr",-1276695702,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.hr)?garden.selectors.hr.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"meta"),new cljs.core.Var(function(){return garden.selectors.meta;},new cljs.core.Symbol("garden.selectors","meta","garden.selectors/meta",-1412144970,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS meta type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"meta","meta",-1154898805,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.meta)?garden.selectors.meta.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"tbody"),new cljs.core.Var(function(){return garden.selectors.tbody;},new cljs.core.Symbol("garden.selectors","tbody","garden.selectors/tbody",1288518828,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS tbody type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"tbody","tbody",1559853227,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.tbody)?garden.selectors.tbody.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"table"),new cljs.core.Var(function(){return garden.selectors.table;},new cljs.core.Symbol("garden.selectors","table","garden.selectors/table",1342763446,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS table type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"table","table",1075588491,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.table)?garden.selectors.table.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"pre"),new cljs.core.Var(function(){return garden.selectors.pre;},new cljs.core.Symbol("garden.selectors","pre","garden.selectors/pre",-267362199,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS pre type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"pre","pre",-535978900,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.pre)?garden.selectors.pre.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ul"),new cljs.core.Var(function(){return garden.selectors.ul;},new cljs.core.Symbol("garden.selectors","ul","garden.selectors/ul",560769609,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS ul type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"ul","ul",291010124,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.ul)?garden.selectors.ul.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"nth-last-child"),new cljs.core.Var(function(){return garden.selectors.nth_last_child;},new cljs.core.Symbol("garden.selectors","nth-last-child","garden.selectors/nth-last-child",-2099105175,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"nth-last-child","nth-last-child",-1292992916,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",17,1,889,891,cljs.core.List.EMPTY,"CSS :nth-last-child pseudo class selector.",(cljs.core.truth_(garden.selectors.nth_last_child)?garden.selectors.nth_last_child.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,">"),new cljs.core.Var(function(){return garden.selectors._GT_;},new cljs.core.Symbol("garden.selectors",">","garden.selectors/>",-1329871518,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,">",">",1085014381,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",8,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,984,984,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),"Child combinator.",(cljs.core.truth_(garden.selectors._GT_)?garden.selectors._GT_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"disabled"),new cljs.core.Var(function(){return garden.selectors.disabled;},new cljs.core.Symbol("garden.selectors","disabled","garden.selectors/disabled",1991115432,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :disabled pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"disabled","disabled",110747309,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.disabled)?garden.selectors.disabled.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"sup"),new cljs.core.Var(function(){return garden.selectors.sup;},new cljs.core.Symbol("garden.selectors","sup","garden.selectors/sup",-131626154,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS sup type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"sup","sup",-398960819,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.sup)?garden.selectors.sup.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dfn"),new cljs.core.Var(function(){return garden.selectors.dfn;},new cljs.core.Symbol("garden.selectors","dfn","garden.selectors/dfn",1077918731,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS dfn type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"dfn","dfn",1882439694,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.dfn)?garden.selectors.dfn.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"sub"),new cljs.core.Var(function(){return garden.selectors.sub;},new cljs.core.Symbol("garden.selectors","sub","garden.selectors/sub",351276065,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS sub type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"sub","sub",-453228498,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.sub)?garden.selectors.sub.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"mark"),new cljs.core.Var(function(){return garden.selectors.mark;},new cljs.core.Symbol("garden.selectors","mark","garden.selectors/mark",1537001003,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS mark type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"mark","mark",1266715182,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.mark)?garden.selectors.mark.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"only-of-type"),new cljs.core.Var(function(){return garden.selectors.only_of_type;},new cljs.core.Symbol("garden.selectors","only-of-type","garden.selectors/only-of-type",-1691223391,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :only-of-type pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"only-of-type","only-of-type",-1960460626,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.only_of_type)?garden.selectors.only_of_type.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"script"),new cljs.core.Var(function(){return garden.selectors.script;},new cljs.core.Symbol("garden.selectors","script","garden.selectors/script",607925931,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS script type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"script","script",336087726,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.script)?garden.selectors.script.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"button"),new cljs.core.Var(function(){return garden.selectors.button;},new cljs.core.Symbol("garden.selectors","button","garden.selectors/button",-1467584597,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS button type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"button","button",-1197855826,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.button)?garden.selectors.button.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"CSSSelector"),new cljs.core.Var(function(){return garden.selectors.CSSSelector;},new cljs.core.Symbol("garden.selectors","CSSSelector","garden.selectors/CSSSelector",-1115655189,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"line","line",212345235),306,new cljs.core.Keyword(null,"column","column",2078222095),15,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"CSSSelector","CSSSelector",-1380698130,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.CSSSelector)?garden.selectors.CSSSelector.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"wbr"),new cljs.core.Var(function(){return garden.selectors.wbr;},new cljs.core.Symbol("garden.selectors","wbr","garden.selectors/wbr",2138405984,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS wbr type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"wbr","wbr",1869193327,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.wbr)?garden.selectors.wbr.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"attr-starts-with"),new cljs.core.Var(function(){return garden.selectors.attr_starts_with;},new cljs.core.Symbol("garden.selectors","attr-starts-with","garden.selectors/attr-starts-with",1546238122,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"attr-starts-with","attr-starts-with",1279161519,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",23,1,946,946,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"attr-name","attr-name",-132109252,null),new cljs.core.Symbol(null,"attr-value","attr-value",-561203417,null)], null)),null,(cljs.core.truth_(garden.selectors.attr_starts_with)?garden.selectors.attr_starts_with.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"strong"),new cljs.core.Var(function(){return garden.selectors.strong;},new cljs.core.Symbol("garden.selectors","strong","garden.selectors/strong",1103985130,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS strong type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"strong","strong",1910060527,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.strong)?garden.selectors.strong.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"default"),new cljs.core.Var(function(){return garden.selectors.default$;},new cljs.core.Symbol("garden.selectors","default","garden.selectors/default",-75987126,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :default pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"default","default",-347290801,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.default)?garden.selectors.default.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"li"),new cljs.core.Var(function(){return garden.selectors.li;},new cljs.core.Symbol("garden.selectors","li","garden.selectors/li",-1662686117,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS li type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"li","li",-1930876848,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.li)?garden.selectors.li.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dt"),new cljs.core.Var(function(){return garden.selectors.dt;},new cljs.core.Symbol("garden.selectors","dt","garden.selectors/dt",1001344251,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS dt type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"dt","dt",1272086768,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.dt)?garden.selectors.dt.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"-"),new cljs.core.Var(function(){return garden.selectors._;},new cljs.core.Symbol("garden.selectors","-","garden.selectors/-",-738920147,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"-","-",-471816912,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",8,1,979,979,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)),"General sibling combinator.",(cljs.core.truth_(garden.selectors._)?garden.selectors._.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"td"),new cljs.core.Var(function(){return garden.selectors.td;},new cljs.core.Symbol("garden.selectors","td","garden.selectors/td",-1446361097,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS td type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"td","td",-1174502416,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.td)?garden.selectors.td.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"tr"),new cljs.core.Var(function(){return garden.selectors.tr;},new cljs.core.Symbol("garden.selectors","tr","garden.selectors/tr",-53939110,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS tr type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"tr","tr",215756881,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.tr)?garden.selectors.tr.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"section"),new cljs.core.Var(function(){return garden.selectors.section;},new cljs.core.Symbol("garden.selectors","section","garden.selectors/section",2146498172,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS section type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"section","section",1340390001,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.section)?garden.selectors.section.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"th"),new cljs.core.Var(function(){return garden.selectors.th;},new cljs.core.Symbol("garden.selectors","th","garden.selectors/th",1365212886,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS th type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"th","th",1094922961,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.th)?garden.selectors.th.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"time"),new cljs.core.Var(function(){return garden.selectors.time;},new cljs.core.Symbol("garden.selectors","time","garden.selectors/time",-1535690036,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS time type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"time","time",-1268547887,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.time)?garden.selectors.time.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"optgroup"),new cljs.core.Var(function(){return garden.selectors.optgroup;},new cljs.core.Symbol("garden.selectors","optgroup","garden.selectors/optgroup",-1184348362,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS optgroup type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"optgroup","optgroup",-916153551,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.optgroup)?garden.selectors.optgroup.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"descendant"),new cljs.core.Var(function(){return garden.selectors.descendant;},new cljs.core.Symbol("garden.selectors","descendant","garden.selectors/descendant",2101169114,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"descendant","descendant",1828786129,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",17,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,964,964,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),"Descendant combinator.",(cljs.core.truth_(garden.selectors.descendant)?garden.selectors.descendant.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"iframe"),new cljs.core.Var(function(){return garden.selectors.iframe;},new cljs.core.Symbol("garden.selectors","iframe","garden.selectors/iframe",-2037647396,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS iframe type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"iframe","iframe",-1770013743,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.iframe)?garden.selectors.iframe.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"legend"),new cljs.core.Var(function(){return garden.selectors.legend;},new cljs.core.Symbol("garden.selectors","legend","garden.selectors/legend",345674911,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS legend type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"legend","legend",613339282,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.legend)?garden.selectors.legend.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"em"),new cljs.core.Var(function(){return garden.selectors.em;},new cljs.core.Symbol("garden.selectors","em","garden.selectors/em",-1685118721,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS em type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"em","em",-1946622734,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.em)?garden.selectors.em.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"map->CSSSelector"),new cljs.core.Var(function(){return garden.selectors.map__GT_CSSSelector;},new cljs.core.Symbol("garden.selectors","map->CSSSelector","garden.selectors/map->CSSSelector",-2017228497,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"internal-ctor","internal-ctor",937392560),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"map->CSSSelector","map->CSSSelector",-1212265166,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",26,4,true,new cljs.core.Keyword(null,"map","map",1371690461),306,306,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"G__56209","G__56209",942292132,null)], null)),"Factory function for garden.selectors/CSSSelector, taking a map of keywords to field values.",(cljs.core.truth_(garden.selectors.map__GT_CSSSelector)?garden.selectors.map__GT_CSSSelector.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"kbd"),new cljs.core.Var(function(){return garden.selectors.kbd;},new cljs.core.Symbol("garden.selectors","kbd","garden.selectors/kbd",1152187919,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS kbd type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"kbd","kbd",1956688402,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.kbd)?garden.selectors.kbd.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ICSSSelector"),new cljs.core.Var(function(){return garden.selectors.ICSSSelector;},new cljs.core.Symbol("garden.selectors","ICSSSelector","garden.selectors/ICSSSelector",116562553,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol-symbol","protocol-symbol",1279552198),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"protocol-info","protocol-info",1471745843),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"sigs","sigs",-1653119622),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"jsdoc","jsdoc",1745183516),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"ICSSSelector","ICSSSelector",922306162,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",26,1,23,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"methods","methods",453930866),new cljs.core.PersistentArrayMap(null, 1, [cljs.core.with_meta(new cljs.core.Symbol(null,"css-selector","css-selector",-1935036520,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),null], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)], null)], null)], null),23,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"css-selector","css-selector",719399249),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"css-selector","css-selector",-1935036520,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),null], null)], null),cljs.core.List.EMPTY,null,cljs.core.list("@interface"),(cljs.core.truth_(garden.selectors.ICSSSelector)?garden.selectors.ICSSSelector.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"article"),new cljs.core.Var(function(){return garden.selectors.article;},new cljs.core.Symbol("garden.selectors","article","garden.selectors/article",274755349,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS article type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"article","article",1618846482,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.article)?garden.selectors.article.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"abbr"),new cljs.core.Var(function(){return garden.selectors.abbr;},new cljs.core.Symbol("garden.selectors","abbr","garden.selectors/abbr",-297192354,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS abbr type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"abbr","abbr",-565843885,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.abbr)?garden.selectors.abbr.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"last-of-type"),new cljs.core.Var(function(){return garden.selectors.last_of_type;},new cljs.core.Symbol("garden.selectors","last-of-type","garden.selectors/last-of-type",184281438,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :last-of-type pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"last-of-type","last-of-type",986453331,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.last_of_type)?garden.selectors.last_of_type.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"invalid"),new cljs.core.Var(function(){return garden.selectors.invalid;},new cljs.core.Symbol("garden.selectors","invalid","garden.selectors/invalid",1248875988,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :invalid pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"invalid","invalid",2053401043,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.invalid)?garden.selectors.invalid.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"command"),new cljs.core.Var(function(){return garden.selectors.command;},new cljs.core.Symbol("garden.selectors","command","garden.selectors/command",1013624472,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS command type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"command","command",745990803,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.command)?garden.selectors.command.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"not"),new cljs.core.Var(function(){return garden.selectors.not;},new cljs.core.Symbol("garden.selectors","not","garden.selectors/not",-831070312,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"not","not",1044554643,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",20,1,860,860,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.selectors.not)?garden.selectors.not.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"visited"),new cljs.core.Var(function(){return garden.selectors.visited;},new cljs.core.Symbol("garden.selectors","visited","garden.selectors/visited",837870673,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :visited pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"visited","visited",29677652,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.visited)?garden.selectors.visited.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"source"),new cljs.core.Var(function(){return garden.selectors.source;},new cljs.core.Symbol("garden.selectors","source","garden.selectors/source",937893183,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS source type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.source)?garden.selectors.source.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"output"),new cljs.core.Var(function(){return garden.selectors.output;},new cljs.core.Symbol("garden.selectors","output","garden.selectors/output",-269874869,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS output type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"output","output",534662484,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.output)?garden.selectors.output.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"nth-x"),new cljs.core.Var(function(){return garden.selectors.nth_x;},new cljs.core.Symbol("garden.selectors","nth-x","garden.selectors/nth-x",-226806710,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"nth-x","nth-x",-498603947,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",12,1,871,871,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"nth-child helper.",(cljs.core.truth_(garden.selectors.nth_x)?garden.selectors.nth_x.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"header"),new cljs.core.Var(function(){return garden.selectors.header;},new cljs.core.Symbol("garden.selectors","header","garden.selectors/header",1492349246,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS header type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"header","header",1759972661,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.header)?garden.selectors.header.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"datalist"),new cljs.core.Var(function(){return garden.selectors.datalist;},new cljs.core.Symbol("garden.selectors","datalist","garden.selectors/datalist",1748962736,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS datalist type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"datalist","datalist",405488053,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.datalist)?garden.selectors.datalist.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"tfoot"),new cljs.core.Var(function(){return garden.selectors.tfoot;},new cljs.core.Symbol("garden.selectors","tfoot","garden.selectors/tfoot",669202864,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS tfoot type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"tfoot","tfoot",938931637,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.tfoot)?garden.selectors.tfoot.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"s"),new cljs.core.Var(function(){return garden.selectors.s;},new cljs.core.Symbol("garden.selectors","s","garden.selectors/s",-680862192,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS s type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.s)?garden.selectors.s.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"empty"),new cljs.core.Var(function(){return garden.selectors.empty;},new cljs.core.Symbol("garden.selectors","empty","garden.selectors/empty",-6720976,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :empty pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"empty","empty",-1886564811,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.empty)?garden.selectors.empty.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"scope"),new cljs.core.Var(function(){return garden.selectors.scope;},new cljs.core.Symbol("garden.selectors","scope","garden.selectors/scope",1468247664,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :scope pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"scope","scope",1201173109,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.scope)?garden.selectors.scope.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ins"),new cljs.core.Var(function(){return garden.selectors.ins;},new cljs.core.Symbol("garden.selectors","ins","garden.selectors/ins",-886405398,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS ins type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"ins","ins",618547957,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.ins)?garden.selectors.ins.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"footer"),new cljs.core.Var(function(){return garden.selectors.footer;},new cljs.core.Symbol("garden.selectors","footer","garden.selectors/footer",-776690786,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS footer type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"footer","footer",-1047990379,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.footer)?garden.selectors.footer.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"nth-last-of-type"),new cljs.core.Var(function(){return garden.selectors.nth_last_of_type;},new cljs.core.Symbol("garden.selectors","nth-last-of-type","garden.selectors/nth-last-of-type",1110610858,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"nth-last-of-type","nth-last-of-type",1378768821,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",19,1,899,901,cljs.core.List.EMPTY,"CSS :nth-last-of-type pseudo class selector.",(cljs.core.truth_(garden.selectors.nth_last_of_type)?garden.selectors.nth_last_of_type.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"title"),new cljs.core.Var(function(){return garden.selectors.title;},new cljs.core.Symbol("garden.selectors","title","garden.selectors/title",2007830569,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS title type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"title","title",-2017930186,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.title)?garden.selectors.title.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"h5"),new cljs.core.Var(function(){return garden.selectors.h5;},new cljs.core.Symbol("garden.selectors","h5","garden.selectors/h5",-2065857741,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS h5 type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"h5","h5",-188625098,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.h5)?garden.selectors.h5.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"canvas"),new cljs.core.Var(function(){return garden.selectors.canvas;},new cljs.core.Symbol("garden.selectors","canvas","garden.selectors/canvas",-425395341,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS canvas type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"canvas","canvas",-158285962,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.canvas)?garden.selectors.canvas.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"param"),new cljs.core.Var(function(){return garden.selectors.param;},new cljs.core.Symbol("garden.selectors","param","garden.selectors/param",-906829943,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS param type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"param","param",-640803946,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.param)?garden.selectors.param.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"lang"),new cljs.core.Var(function(){return garden.selectors.lang;},new cljs.core.Symbol("garden.selectors","lang","garden.selectors/lang",88486034,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"lang","lang",-179145577,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",21,1,857,857,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.selectors.lang)?garden.selectors.lang.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"div"),new cljs.core.Var(function(){return garden.selectors.div;},new cljs.core.Symbol("garden.selectors","div","garden.selectors/div",-1864392420,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS div type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"div","div",-1597244137,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.div)?garden.selectors.div.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"option"),new cljs.core.Var(function(){return garden.selectors.option;},new cljs.core.Symbol("garden.selectors","option","garden.selectors/option",1977522472,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS option type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"option","option",1705663799,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.option)?garden.selectors.option.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"summary"),new cljs.core.Var(function(){return garden.selectors.summary;},new cljs.core.Symbol("garden.selectors","summary","garden.selectors/summary",1749944722,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS summary type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"summary","summary",2021379479,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.summary)?garden.selectors.summary.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"samp"),new cljs.core.Var(function(){return garden.selectors.samp;},new cljs.core.Symbol("garden.selectors","samp","garden.selectors/samp",-880628206,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS samp type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"samp","samp",-1148294633,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.samp)?garden.selectors.samp.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"small"),new cljs.core.Var(function(){return garden.selectors.small;},new cljs.core.Symbol("garden.selectors","small","garden.selectors/small",-804907140,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS small type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"small","small",-520957065,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.small)?garden.selectors.small.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"style"),new cljs.core.Var(function(){return garden.selectors.style;},new cljs.core.Symbol("garden.selectors","style","garden.selectors/style",1412800402,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS style type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"style","style",1143888791,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.style)?garden.selectors.style.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"textarea"),new cljs.core.Var(function(){return garden.selectors.textarea;},new cljs.core.Symbol("garden.selectors","textarea","garden.selectors/textarea",728815548,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS textarea type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"textarea","textarea",990155703,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.textarea)?garden.selectors.textarea.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"indeterminate"),new cljs.core.Var(function(){return garden.selectors.indeterminate;},new cljs.core.Symbol("garden.selectors","indeterminate","garden.selectors/indeterminate",1929388018,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :indeterminate pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"indeterminate","indeterminate",1127490551,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.indeterminate)?garden.selectors.indeterminate.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"hover"),new cljs.core.Var(function(){return garden.selectors.hover;},new cljs.core.Symbol("garden.selectors","hover","garden.selectors/hover",1567578467,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :hover pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"hover","hover",1299389816,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.hover)?garden.selectors.hover.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"h4"),new cljs.core.Var(function(){return garden.selectors.h4;},new cljs.core.Symbol("garden.selectors","h4","garden.selectors/h4",-917204413,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS h4 type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"h4","h4",-649572776,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.h4)?garden.selectors.h4.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"in-range"),new cljs.core.Var(function(){return garden.selectors.in_range;},new cljs.core.Symbol("garden.selectors","in-range","garden.selectors/in-range",-2101842203,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :in-range pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"in-range","in-range",-1297863944,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.in_range)?garden.selectors.in_range.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"css-selector"),new cljs.core.Var(function(){return garden.selectors.css_selector;},new cljs.core.Symbol("garden.selectors","css-selector","garden.selectors/css-selector",-1118018657,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("garden.selectors","ICSSSelector","garden.selectors/ICSSSelector",116562553,null),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"css-selector","css-selector",-1935036520,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",16,1,23,24,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),null,(cljs.core.truth_(garden.selectors.css_selector)?garden.selectors.css_selector.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"head"),new cljs.core.Var(function(){return garden.selectors.head;},new cljs.core.Symbol("garden.selectors","head","garden.selectors/head",603615171,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS head type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"head","head",869147608,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.head)?garden.selectors.head.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"after"),new cljs.core.Var(function(){return garden.selectors.after;},new cljs.core.Symbol("garden.selectors","after","garden.selectors/after",-1790662402,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"after","after",-2059438855,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",8,1,907,909,cljs.core.List.EMPTY,"CSS ::after pseudo element selector.",(cljs.core.truth_(garden.selectors.after)?garden.selectors.after.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"fullscreen"),new cljs.core.Var(function(){return garden.selectors.fullscreen;},new cljs.core.Symbol("garden.selectors","fullscreen","garden.selectors/fullscreen",1911623620,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :fullscreen pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"fullscreen","fullscreen",1636160473,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.fullscreen)?garden.selectors.fullscreen.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"+"),new cljs.core.Var(function(){return garden.selectors._PLUS_;},new cljs.core.Symbol("garden.selectors","+","garden.selectors/+",-1545413411,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"+","+",-740910886,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",8,1,974,974,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)),"Adjacent sibling combinator.",(cljs.core.truth_(garden.selectors._PLUS_)?garden.selectors._PLUS_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"var"),new cljs.core.Var(function(){return garden.selectors.var$;},new cljs.core.Symbol("garden.selectors","var","garden.selectors/var",588537053,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS var type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"var","var",870848730,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.var$)?garden.selectors.var$.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"root"),new cljs.core.Var(function(){return garden.selectors.root;},new cljs.core.Symbol("garden.selectors","root","garden.selectors/root",1461111325,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :root pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"root","root",1191874074,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.root)?garden.selectors.root.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ol"),new cljs.core.Var(function(){return garden.selectors.ol;},new cljs.core.Symbol("garden.selectors","ol","garden.selectors/ol",-1991118249,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS ol type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"ol","ol",-1721911718,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.ol)?garden.selectors.ol.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"details"),new cljs.core.Var(function(){return garden.selectors.details;},new cljs.core.Symbol("garden.selectors","details","garden.selectors/details",-1501755817,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS details type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"details","details",-697640358,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.details)?garden.selectors.details.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"active"),new cljs.core.Var(function(){return garden.selectors.active;},new cljs.core.Symbol("garden.selectors","active","garden.selectors/active",-1027694592,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :active pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"active","active",-758473701,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.active)?garden.selectors.active.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"col"),new cljs.core.Var(function(){return garden.selectors.col;},new cljs.core.Symbol("garden.selectors","col","garden.selectors/col",-51689412,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS col type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"col","col",-318831557,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.col)?garden.selectors.col.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"label"),new cljs.core.Var(function(){return garden.selectors.label;},new cljs.core.Symbol("garden.selectors","label","garden.selectors/label",-130113418,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS label type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"label","label",-936024965,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.label)?garden.selectors.label.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rt"),new cljs.core.Var(function(){return garden.selectors.rt;},new cljs.core.Symbol("garden.selectors","rt","garden.selectors/rt",-1777937988,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS rt type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"rt","rt",-2030955077,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.rt)?garden.selectors.rt.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"h6"),new cljs.core.Var(function(){return garden.selectors.h6;},new cljs.core.Symbol("garden.selectors","h6","garden.selectors/h6",-1827378410,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS h6 type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"h6","h6",-2097141989,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.h6)?garden.selectors.h6.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"link"),new cljs.core.Var(function(){return garden.selectors.link;},new cljs.core.Symbol("garden.selectors","link","garden.selectors/link",-396757152,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS link type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"link","link",-128631941,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.link)?garden.selectors.link.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"checked"),new cljs.core.Var(function(){return garden.selectors.checked;},new cljs.core.Symbol("garden.selectors","checked","garden.selectors/checked",-1388102631,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :checked pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"checked","checked",1589575708,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.checked)?garden.selectors.checked.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"last-child"),new cljs.core.Var(function(){return garden.selectors.last_child;},new cljs.core.Symbol("garden.selectors","last-child","garden.selectors/last-child",-2127612615,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :last-child pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"last-child","last-child",-1323765444,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.last_child)?garden.selectors.last_child.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"optional"),new cljs.core.Var(function(){return garden.selectors.optional;},new cljs.core.Symbol("garden.selectors","optional","garden.selectors/optional",-868675033,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :optional pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"optional","optional",-600484260,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.optional)?garden.selectors.optional.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"colgroup"),new cljs.core.Var(function(){return garden.selectors.colgroup;},new cljs.core.Symbol("garden.selectors","colgroup","garden.selectors/colgroup",-1197755789,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS colgroup type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"colgroup","colgroup",-2003317124,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.colgroup)?garden.selectors.colgroup.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"meter"),new cljs.core.Var(function(){return garden.selectors.meter;},new cljs.core.Symbol("garden.selectors","meter","garden.selectors/meter",1768758067,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS meter type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"meter","meter",1452889916,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.meter)?garden.selectors.meter.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"bdo"),new cljs.core.Var(function(){return garden.selectors.bdo;},new cljs.core.Symbol("garden.selectors","bdo","garden.selectors/bdo",-221383578,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS bdo type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"bdo","bdo",-490616675,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.bdo)?garden.selectors.bdo.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"b"),new cljs.core.Var(function(){return garden.selectors.b;},new cljs.core.Symbol("garden.selectors","b","garden.selectors/b",-1439320686,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS b type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.b)?garden.selectors.b.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"svg"),new cljs.core.Var(function(){return garden.selectors.svg;},new cljs.core.Symbol("garden.selectors","svg","garden.selectors/svg",-2069441832,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS svg type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"svg","svg",-1797646627,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.svg)?garden.selectors.svg.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"code"),new cljs.core.Var(function(){return garden.selectors.code;},new cljs.core.Symbol("garden.selectors","code","garden.selectors/code",-262491182,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS code type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"code","code",-1068142627,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.code)?garden.selectors.code.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"right"),new cljs.core.Var(function(){return garden.selectors.right;},new cljs.core.Symbol("garden.selectors","right","garden.selectors/right",1991401595,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :right pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"right","right",1187949694,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.right)?garden.selectors.right.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"focus"),new cljs.core.Var(function(){return garden.selectors.focus;},new cljs.core.Symbol("garden.selectors","focus","garden.selectors/focus",2146511067,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS :focus pseudo-class selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),852,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"focus","focus",1875209438,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.focus)?garden.selectors.focus.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"noscript"),new cljs.core.Var(function(){return garden.selectors.noscript;},new cljs.core.Symbol("garden.selectors","noscript","garden.selectors/noscript",670187003,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS noscript type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"noscript","noscript",935754238,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.noscript)?garden.selectors.noscript.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"first-letter"),new cljs.core.Var(function(){return garden.selectors.first_letter;},new cljs.core.Symbol("garden.selectors","first-letter","garden.selectors/first-letter",-1536484475,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Symbol(null,"first-letter","first-letter",-731428930,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",15,1,915,917,cljs.core.List.EMPTY,"CSS ::first-letter pseudo element selector.",(cljs.core.truth_(garden.selectors.first_letter)?garden.selectors.first_letter.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"h2"),new cljs.core.Var(function(){return garden.selectors.h2;},new cljs.core.Symbol("garden.selectors","h2","garden.selectors/h2",2073976944,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS h2 type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"h2","h2",1267868799,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.h2)?garden.selectors.h2.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"area"),new cljs.core.Var(function(){return garden.selectors.area;},new cljs.core.Symbol("garden.selectors","area","garden.selectors/area",-1912785766,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS area type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"area","area",2112538783,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.area)?garden.selectors.area.cljs$lang$test:null)], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"br"),new cljs.core.Var(function(){return garden.selectors.br;},new cljs.core.Symbol("garden.selectors","br","garden.selectors/br",-1991669478,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"doc","doc",1913296891),"CSS br type selector.",new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/selectors.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.selectors","garden.selectors",739453676,null),new cljs.core.Keyword(null,"line","line",212345235),802,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"br","br",-1720330977,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.selectors.br)?garden.selectors.br.cljs$lang$test:null)], null))], null)], true))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"garden.types","garden.types",-631486263,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->CSSUnit"),new cljs.core.Var(function(){return garden.types.__GT_CSSUnit;},new cljs.core.Symbol("garden.types","->CSSUnit","garden.types/->CSSUnit",-372423165,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"internal-ctor","internal-ctor",937392560),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.types","garden.types",-631486263,null),new cljs.core.Symbol(null,"->CSSUnit","->CSSUnit",-1434798461,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/types.cljc",19,1,true,new cljs.core.Keyword(null,"positional","positional",-203580463),4,4,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"unit","unit",2015706702,null),new cljs.core.Symbol(null,"magnitude","magnitude",-730161547,null)], null)),"Positional factory function for garden.types/CSSUnit.",(cljs.core.truth_(garden.types.__GT_CSSUnit)?garden.types.__GT_CSSUnit.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"CSSUnit"),new cljs.core.Var(function(){return garden.types.CSSUnit;},new cljs.core.Symbol("garden.types","CSSUnit","garden.types/CSSUnit",1865009670,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.types","garden.types",-631486263,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/types.cljc",new cljs.core.Keyword(null,"line","line",212345235),4,new cljs.core.Keyword(null,"column","column",2078222095),12,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"CSSUnit","CSSUnit",700097926,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.types.CSSUnit)?garden.types.CSSUnit.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"CSSFunction"),new cljs.core.Var(function(){return garden.types.CSSFunction;},new cljs.core.Symbol("garden.types","CSSFunction","garden.types/CSSFunction",-388770354,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.types","garden.types",-631486263,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/types.cljc",new cljs.core.Keyword(null,"line","line",212345235),6,new cljs.core.Keyword(null,"column","column",2078222095),12,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"CSSFunction","CSSFunction",-1419615154,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.types.CSSFunction)?garden.types.CSSFunction.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"map->CSSAtRule"),new cljs.core.Var(function(){return garden.types.map__GT_CSSAtRule;},new cljs.core.Symbol("garden.types","map->CSSAtRule","garden.types/map->CSSAtRule",60574352,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"internal-ctor","internal-ctor",937392560),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.types","garden.types",-631486263,null),new cljs.core.Symbol(null,"map->CSSAtRule","map->CSSAtRule",1093917200,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/types.cljc",21,1,true,new cljs.core.Keyword(null,"map","map",1371690461),8,8,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"G__47495","G__47495",-1853568612,null)], null)),"Factory function for garden.types/CSSAtRule, taking a map of keywords to field values.",(cljs.core.truth_(garden.types.map__GT_CSSAtRule)?garden.types.map__GT_CSSAtRule.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"map->CSSUnit"),new cljs.core.Var(function(){return garden.types.map__GT_CSSUnit;},new cljs.core.Symbol("garden.types","map->CSSUnit","garden.types/map->CSSUnit",1043485521,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"internal-ctor","internal-ctor",937392560),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.types","garden.types",-631486263,null),new cljs.core.Symbol(null,"map->CSSUnit","map->CSSUnit",2072061137,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/types.cljc",19,1,true,new cljs.core.Keyword(null,"map","map",1371690461),4,4,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"G__47461","G__47461",870284823,null)], null)),"Factory function for garden.types/CSSUnit, taking a map of keywords to field values.",(cljs.core.truth_(garden.types.map__GT_CSSUnit)?garden.types.map__GT_CSSUnit.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"CSSAtRule"),new cljs.core.Var(function(){return garden.types.CSSAtRule;},new cljs.core.Symbol("garden.types","CSSAtRule","garden.types/CSSAtRule",-316103020,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.types","garden.types",-631486263,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/types.cljc",new cljs.core.Keyword(null,"line","line",212345235),8,new cljs.core.Keyword(null,"column","column",2078222095),12,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"CSSAtRule","CSSAtRule",-1344793068,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.types.CSSAtRule)?garden.types.CSSAtRule.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->CSSAtRule"),new cljs.core.Var(function(){return garden.types.__GT_CSSAtRule;},new cljs.core.Symbol("garden.types","->CSSAtRule","garden.types/->CSSAtRule",-1003928008,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"internal-ctor","internal-ctor",937392560),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.types","garden.types",-631486263,null),new cljs.core.Symbol(null,"->CSSAtRule","->CSSAtRule",110745528,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/types.cljc",21,1,true,new cljs.core.Keyword(null,"positional","positional",-203580463),8,8,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"identifier","identifier",835028029,null),new cljs.core.Symbol(null,"value","value",1946509744,null)], null)),"Positional factory function for garden.types/CSSAtRule.",(cljs.core.truth_(garden.types.__GT_CSSAtRule)?garden.types.__GT_CSSAtRule.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"map->CSSFunction"),new cljs.core.Var(function(){return garden.types.map__GT_CSSFunction;},new cljs.core.Symbol("garden.types","map->CSSFunction","garden.types/map->CSSFunction",-1456510695,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"internal-ctor","internal-ctor",937392560),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.types","garden.types",-631486263,null),new cljs.core.Symbol(null,"map->CSSFunction","map->CSSFunction",-340199271,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/types.cljc",23,1,true,new cljs.core.Keyword(null,"map","map",1371690461),6,6,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"G__47478","G__47478",2013867811,null)], null)),"Factory function for garden.types/CSSFunction, taking a map of keywords to field values.",(cljs.core.truth_(garden.types.map__GT_CSSFunction)?garden.types.map__GT_CSSFunction.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->CSSFunction"),new cljs.core.Var(function(){return garden.types.__GT_CSSFunction;},new cljs.core.Symbol("garden.types","->CSSFunction","garden.types/->CSSFunction",-585999265,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"internal-ctor","internal-ctor",937392560),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.types","garden.types",-631486263,null),new cljs.core.Symbol(null,"->CSSFunction","->CSSFunction",461565151,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/types.cljc",23,1,true,new cljs.core.Keyword(null,"positional","positional",-203580463),6,6,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Positional factory function for garden.types/CSSFunction.",(cljs.core.truth_(garden.types.__GT_CSSFunction)?garden.types.__GT_CSSFunction.cljs$lang$test:null)]))], null)], null))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"percent"),new cljs.core.Var(function(){return garden.units.percent;},new cljs.core.Symbol("garden.units","percent","garden.units/percent",525761354,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"percent","percent",-622981952,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",17,1,297,297,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.percent)?garden.units.percent.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"make-unit-divider"),new cljs.core.Var(function(){return garden.units.make_unit_divider;},new cljs.core.Symbol("garden.units","make-unit-divider","garden.units/make-unit-divider",-1935464114,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"make-unit-divider","make-unit-divider",1311463616,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",24,1,241,241,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"unit","unit",2015706702,null)], null)),"Create a division function for dividing Units.",(cljs.core.truth_(garden.units.make_unit_divider)?garden.units.make_unit_divider.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"mm?"),new cljs.core.Var(function(){return garden.units.mm_QMARK_;},new cljs.core.Symbol("garden.units","mm?","garden.units/mm?",263548138,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),292,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"mm?","mm?",-1307714208,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.mm_QMARK_)?garden.units.mm_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rad-div"),new cljs.core.Var(function(){return garden.units.rad_div;},new cljs.core.Symbol("garden.units","rad-div","garden.units/rad-div",1500284538,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),321,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"rad-div","rad-div",466973152,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.rad_div)?garden.units.rad_div.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"fr+"),new cljs.core.Var(function(){return garden.units.fr_PLUS_;},new cljs.core.Symbol("garden.units","fr+","garden.units/fr+",-222738610,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),315,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"fr+","fr+",-1339959616,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.fr_PLUS_)?garden.units.fr_PLUS_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ch+"),new cljs.core.Var(function(){return garden.units.ch_PLUS_;},new cljs.core.Symbol("garden.units","ch+","garden.units/ch+",-581300358,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),303,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"ch+","ch+",416456416,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.ch_PLUS_)?garden.units.ch_PLUS_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"vmax?"),new cljs.core.Var(function(){return garden.units.vmax_QMARK_;},new cljs.core.Symbol("garden.units","vmax?","garden.units/vmax?",423948911,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),311,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"vmax?","vmax?",-1495491359,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.vmax_QMARK_)?garden.units.vmax_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"percent*"),new cljs.core.Var(function(){return garden.units.percent_STAR_;},new cljs.core.Symbol("garden.units","percent*","garden.units/percent*",636314391,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),297,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"percent*","percent*",-479867679,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.percent_STAR_)?garden.units.percent_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"fr-"),new cljs.core.Var(function(){return garden.units.fr_;},new cljs.core.Symbol("garden.units","fr-","garden.units/fr-",-2212693,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),315,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"fr-","fr-",1027714337,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.fr_)?garden.units.fr_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dpi-div"),new cljs.core.Var(function(){return garden.units.dpi_div;},new cljs.core.Symbol("garden.units","dpi-div","garden.units/dpi-div",1119911023,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),336,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"dpi-div","dpi-div",206106337,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.dpi_div)?garden.units.dpi_div.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"s*"),new cljs.core.Var(function(){return garden.units.s_STAR_;},new cljs.core.Symbol("garden.units","s*","garden.units/s*",676994220,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),326,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"s*","s*",1792175394,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.s_STAR_)?garden.units.s_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ms"),new cljs.core.Var(function(){return garden.units.ms;},new cljs.core.Symbol("garden.units","ms","garden.units/ms",1586759528,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"ms","ms",487821794,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",12,1,327,327,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.ms)?garden.units.ms.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ms*"),new cljs.core.Var(function(){return garden.units.ms_STAR_;},new cljs.core.Symbol("garden.units","ms*","garden.units/ms*",1658835372,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),327,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"ms*","ms*",559382050,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.ms_STAR_)?garden.units.ms_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dpcm+"),new cljs.core.Var(function(){return garden.units.dpcm_PLUS_;},new cljs.core.Symbol("garden.units","dpcm+","garden.units/dpcm+",-1128641292,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),337,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"dpcm+","dpcm+",-115196094,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.dpcm_PLUS_)?garden.units.dpcm_PLUS_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dppx*"),new cljs.core.Var(function(){return garden.units.dppx_STAR_;},new cljs.core.Symbol("garden.units","dppx*","garden.units/dppx*",-2112867032,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),338,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"dppx*","dppx*",1558759330,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.dppx_STAR_)?garden.units.dppx_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ch*"),new cljs.core.Var(function(){return garden.units.ch_STAR_;},new cljs.core.Symbol("garden.units","ch*","garden.units/ch*",2023136600,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),303,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"ch*","ch*",-1122078782,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.ch_STAR_)?garden.units.ch_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"mm+"),new cljs.core.Var(function(){return garden.units.mm_PLUS_;},new cljs.core.Symbol("garden.units","mm+","garden.units/mm+",-1132198548,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),292,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"mm+","mm+",2030873570,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.mm_PLUS_)?garden.units.mm_PLUS_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rad"),new cljs.core.Var(function(){return garden.units.rad;},new cljs.core.Symbol("garden.units","rad","garden.units/rad",1922646713,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"rad","rad",806548515,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",13,1,321,321,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.rad)?garden.units.rad.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"px-"),new cljs.core.Var(function(){return garden.units.px_;},new cljs.core.Symbol("garden.units","px-","garden.units/px-",1263524009,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),294,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"px-","px-",217467171,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.px_)?garden.units.px_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"cm-div"),new cljs.core.Var(function(){return garden.units.cm_div;},new cljs.core.Symbol("garden.units","cm-div","garden.units/cm-div",50918293,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),291,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"cm-div","cm-div",-964666013,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.cm_div)?garden.units.cm_div.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"turn+"),new cljs.core.Var(function(){return garden.units.turn_PLUS_;},new cljs.core.Symbol("garden.units","turn+","garden.units/turn+",-1558512427,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),322,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"turn+","turn+",-310292829,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.turn_PLUS_)?garden.units.turn_PLUS_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"length?"),new cljs.core.Var(function(){return garden.units.length_QMARK_;},new cljs.core.Symbol("garden.units","length?","garden.units/length?",-560900663,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"length?","length?",-1726355645,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",14,1,42,42,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(garden.units.length_QMARK_)?garden.units.length_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"fr*"),new cljs.core.Var(function(){return garden.units.fr_STAR_;},new cljs.core.Symbol("garden.units","fr*","garden.units/fr*",100293933,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),315,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"fr*","fr*",-1039948893,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.fr_STAR_)?garden.units.fr_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"grad"),new cljs.core.Var(function(){return garden.units.grad;},new cljs.core.Symbol("garden.units","grad","garden.units/grad",1649506170,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"grad","grad",-1529248540,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",14,1,320,320,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.grad)?garden.units.grad.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dppx-"),new cljs.core.Var(function(){return garden.units.dppx_;},new cljs.core.Symbol("garden.units","dppx-","garden.units/dppx-",-731825378,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),338,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"dppx-","dppx-",-1977956124,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.dppx_)?garden.units.dppx_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"percent+"),new cljs.core.Var(function(){return garden.units.percent_PLUS_;},new cljs.core.Symbol("garden.units","percent+","garden.units/percent+",-2052104418,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),297,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"percent+","percent+",-953692956,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.percent_PLUS_)?garden.units.percent_PLUS_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"em*"),new cljs.core.Var(function(){return garden.units.em_STAR_;},new cljs.core.Symbol("garden.units","em*","garden.units/em*",1101060026,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),301,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"em*","em*",1059666212,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.em_STAR_)?garden.units.em_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ms-"),new cljs.core.Var(function(){return garden.units.ms_;},new cljs.core.Symbol("garden.units","ms-","garden.units/ms-",-821045282,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),327,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"ms-","ms-",847667620,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.ms_)?garden.units.ms_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"fr-div"),new cljs.core.Var(function(){return garden.units.fr_div;},new cljs.core.Symbol("garden.units","fr-div","garden.units/fr-div",548060466,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),315,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"fr-div","fr-div",-451858780,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.fr_div)?garden.units.fr_div.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dpi+"),new cljs.core.Var(function(){return garden.units.dpi_PLUS_;},new cljs.core.Symbol("garden.units","dpi+","garden.units/dpi+",1449926782,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),336,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"dpi+","dpi+",333755076,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.dpi_PLUS_)?garden.units.dpi_PLUS_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"vh+"),new cljs.core.Var(function(){return garden.units.vh_PLUS_;},new cljs.core.Symbol("garden.units","vh+","garden.units/vh+",1871755534,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),309,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"vh+","vh+",-1390727292,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.vh_PLUS_)?garden.units.vh_PLUS_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rad*"),new cljs.core.Var(function(){return garden.units.rad_STAR_;},new cljs.core.Symbol("garden.units","rad*","garden.units/rad*",-949746065,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),321,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"rad*","rad*",-2063600155,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.rad_STAR_)?garden.units.rad_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"kHz-div"),new cljs.core.Var(function(){return garden.units.kHz_div;},new cljs.core.Symbol("garden.units","kHz-div","garden.units/kHz-div",-687994148,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),332,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"kHz-div","kHz-div",141990054,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.kHz_div)?garden.units.kHz_div.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"vmax+"),new cljs.core.Var(function(){return garden.units.vmax_PLUS_;},new cljs.core.Symbol("garden.units","vmax+","garden.units/vmax+",1341928664,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),311,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"vmax+","vmax+",208946502,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.vmax_PLUS_)?garden.units.vmax_PLUS_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"vw-div"),new cljs.core.Var(function(){return garden.units.vw_div;},new cljs.core.Symbol("garden.units","vw-div","garden.units/vw-div",986230904,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),308,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"vw-div","vw-div",2021073382,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.vw_div)?garden.units.vw_div.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"mm-"),new cljs.core.Var(function(){return garden.units.mm_;},new cljs.core.Symbol("garden.units","mm-","garden.units/mm-",301578416,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),292,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"mm-","mm-",-748672474,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.mm_)?garden.units.mm_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"in"),new cljs.core.Var(function(){return garden.units.in$;},new cljs.core.Symbol("garden.units","in","garden.units/in",1090357752,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"in","in",109346662,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",12,1,293,293,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.in$)?garden.units.in$.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"pt*"),new cljs.core.Var(function(){return garden.units.pt_STAR_;},new cljs.core.Symbol("garden.units","pt*","garden.units/pt*",1106330668,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),295,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"pt*","pt*",-2089165914,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.pt_STAR_)?garden.units.pt_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"make-unit-subtractor"),new cljs.core.Var(function(){return garden.units.make_unit_subtractor;},new cljs.core.Symbol("garden.units","make-unit-subtractor","garden.units/make-unit-subtractor",-486702543,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"make-unit-subtractor","make-unit-subtractor",541404583,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",27,1,209,209,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"unit","unit",2015706702,null)], null)),"Create a subtraction function for subtracting Units.",(cljs.core.truth_(garden.units.make_unit_subtractor)?garden.units.make_unit_subtractor.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"mm-div"),new cljs.core.Var(function(){return garden.units.mm_div;},new cljs.core.Symbol("garden.units","mm-div","garden.units/mm-div",-1641831599,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),292,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"mm-div","mm-div",1571295687,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.mm_div)?garden.units.mm_div.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"vmin"),new cljs.core.Var(function(){return garden.units.vmin;},new cljs.core.Symbol("garden.units","vmin","garden.units/vmin",-1074799783,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"vmin","vmin",2087078343,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",14,1,310,310,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.vmin)?garden.units.vmin.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"mm"),new cljs.core.Var(function(){return garden.units.mm;},new cljs.core.Symbol("garden.units","mm","garden.units/mm",-1177751471,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"mm","mm",-12319033,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",12,1,292,292,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.mm)?garden.units.mm.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"em?"),new cljs.core.Var(function(){return garden.units.em_QMARK_;},new cljs.core.Symbol("garden.units","em?","garden.units/em?",-3359663,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),301,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"em?","em?",-1119608121,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.em_QMARK_)?garden.units.em_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"fr"),new cljs.core.Var(function(){return garden.units.fr;},new cljs.core.Symbol("garden.units","fr","garden.units/fr",-44404303,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"fr","fr",-1076721881,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",12,1,315,315,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.fr)?garden.units.fr.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"cm?"),new cljs.core.Var(function(){return garden.units.cm_QMARK_;},new cljs.core.Symbol("garden.units","cm?","garden.units/cm?",66122326,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),291,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"cm?","cm?",1097368616,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.cm_QMARK_)?garden.units.cm_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"time?"),new cljs.core.Var(function(){return garden.units.time_QMARK_;},new cljs.core.Symbol("garden.units","time?","garden.units/time?",-1007971498,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"time?","time?",-1100776152,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",12,1,52,52,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(garden.units.time_QMARK_)?garden.units.time_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dpi?"),new cljs.core.Var(function(){return garden.units.dpi_QMARK_;},new cljs.core.Symbol("garden.units","dpi?","garden.units/dpi?",179822722,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),336,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"dpi?","dpi?",-936422648,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.dpi_QMARK_)?garden.units.dpi_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"make-unit-multiplier"),new cljs.core.Var(function(){return garden.units.make_unit_multiplier;},new cljs.core.Symbol("garden.units","make-unit-multiplier","garden.units/make-unit-multiplier",-1608964430,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"make-unit-multiplier","make-unit-multiplier",-25045240,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",27,1,222,222,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"unit","unit",2015706702,null)], null)),"Create a multiplication function for multiplying Units.",(cljs.core.truth_(garden.units.make_unit_multiplier)?garden.units.make_unit_multiplier.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"vmin-"),new cljs.core.Var(function(){return garden.units.vmin_;},new cljs.core.Symbol("garden.units","vmin-","garden.units/vmin-",-1442896414,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),310,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"vmin-","vmin-",1785116520,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.vmin_)?garden.units.vmin_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"unit?"),new cljs.core.Var(function(){return garden.units.unit_QMARK_;},new cljs.core.Symbol("garden.units","unit?","garden.units/unit?",1235882579,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"unit?","unit?",-1881833431,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",12,1,37,37,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"True if x is of type CSSUnit.",(cljs.core.truth_(garden.units.unit_QMARK_)?garden.units.unit_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"deg-div"),new cljs.core.Var(function(){return garden.units.deg_div;},new cljs.core.Symbol("garden.units","deg-div","garden.units/deg-div",-944473549,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),319,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"deg-div","deg-div",138209417,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.deg_div)?garden.units.deg_div.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"vw-"),new cljs.core.Var(function(){return garden.units.vw_;},new cljs.core.Symbol("garden.units","vw-","garden.units/vw-",-1806060865,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),308,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"vw-","vw-",1388388553,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.vw_)?garden.units.vw_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ch-"),new cljs.core.Var(function(){return garden.units.ch_;},new cljs.core.Symbol("garden.units","ch-","garden.units/ch-",908713591,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),303,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"ch-","ch-",1267806409,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.ch_)?garden.units.ch_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"kHz"),new cljs.core.Var(function(){return garden.units.kHz;},new cljs.core.Symbol("garden.units","kHz","garden.units/kHz",898901107,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"kHz","kHz",1880929993,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",13,1,332,332,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.kHz)?garden.units.kHz.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"resolution?"),new cljs.core.Var(function(){return garden.units.resolution_QMARK_;},new cljs.core.Symbol("garden.units","resolution?","garden.units/resolution?",229558928,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"resolution?","resolution?",-935943062,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",18,1,62,62,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(garden.units.resolution_QMARK_)?garden.units.resolution_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ch-div"),new cljs.core.Var(function(){return garden.units.ch_div;},new cljs.core.Symbol("garden.units","ch-div","garden.units/ch-div",509570800,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),303,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"ch-div","ch-div",-606798518,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.ch_div)?garden.units.ch_div.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"cm-"),new cljs.core.Var(function(){return garden.units.cm_;},new cljs.core.Symbol("garden.units","cm-","garden.units/cm-",-328979664,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),291,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"cm-","cm-",702776714,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.cm_)?garden.units.cm_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"pt"),new cljs.core.Var(function(){return garden.units.pt;},new cljs.core.Symbol("garden.units","pt","garden.units/pt",1148915324,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"pt","pt",-2097974902,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",12,1,295,295,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.pt)?garden.units.pt.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"frequency-units"),new cljs.core.Var(function(){return garden.units.frequency_units;},new cljs.core.Symbol("garden.units","frequency-units","garden.units/frequency-units",66088752,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"frequency-units","frequency-units",-1065813622,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",21,1,29,29,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.frequency_units)?garden.units.frequency_units.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"grad?"),new cljs.core.Var(function(){return garden.units.grad_QMARK_;},new cljs.core.Symbol("garden.units","grad?","garden.units/grad?",184608796,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),320,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"grad?","grad?",1232699050,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.grad_QMARK_)?garden.units.grad_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"vh?"),new cljs.core.Var(function(){return garden.units.vh_QMARK_;},new cljs.core.Symbol("garden.units","vh?","garden.units/vh?",1522606320,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),309,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"vh?","vh?",525907786,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.vh_QMARK_)?garden.units.vh_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"make-unit-adder"),new cljs.core.Var(function(){return garden.units.make_unit_adder;},new cljs.core.Symbol("garden.units","make-unit-adder","garden.units/make-unit-adder",1475667412,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"make-unit-adder","make-unit-adder",-1719904342,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",22,1,195,195,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"unit","unit",2015706702,null)], null)),"Create a addition function for adding Units.",(cljs.core.truth_(garden.units.make_unit_adder)?garden.units.make_unit_adder.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"vmin*"),new cljs.core.Var(function(){return garden.units.vmin_STAR_;},new cljs.core.Symbol("garden.units","vmin*","garden.units/vmin*",844959040,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),310,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"vmin*","vmin*",1826001866,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.vmin_STAR_)?garden.units.vmin_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dpcm*"),new cljs.core.Var(function(){return garden.units.dpcm_STAR_;},new cljs.core.Symbol("garden.units","dpcm*","garden.units/dpcm*",-1487516079,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),337,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"dpcm*","dpcm*",-506537941,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.dpcm_STAR_)?garden.units.dpcm_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"read-unit"),new cljs.core.Var(function(){return garden.units.read_unit;},new cljs.core.Symbol("garden.units","read-unit","garden.units/read-unit",1961535121,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"read-unit","read-unit",-1324206997,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",16,1,157,157,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Read a `CSSUnit` object from the string `s`.",(cljs.core.truth_(garden.units.read_unit)?garden.units.read_unit.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"pc-"),new cljs.core.Var(function(){return garden.units.pc_;},new cljs.core.Symbol("garden.units","pc-","garden.units/pc-",668322481,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),296,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"pc-","pc-",1772960011,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.pc_)?garden.units.pc_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rad-"),new cljs.core.Var(function(){return garden.units.rad_;},new cljs.core.Symbol("garden.units","rad-","garden.units/rad-",-62178691,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),321,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"rad-","rad-",986483595,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.rad_)?garden.units.rad_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"px*"),new cljs.core.Var(function(){return garden.units.px_STAR_;},new cljs.core.Symbol("garden.units","px*","garden.units/px*",-1314870106,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),294,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"px*","px*",-215261908,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.px_STAR_)?garden.units.px_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rem+"),new cljs.core.Var(function(){return garden.units.rem_PLUS_;},new cljs.core.Symbol("garden.units","rem+","garden.units/rem+",910140630,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),304,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"rem+","rem+",1957115212,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.rem_PLUS_)?garden.units.rem_PLUS_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"Hz-"),new cljs.core.Var(function(){return garden.units.Hz_;},new cljs.core.Symbol("garden.units","Hz-","garden.units/Hz-",1367613622,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),331,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"Hz-","Hz-",235771436,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.Hz_)?garden.units.Hz_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"length-units"),new cljs.core.Var(function(){return garden.units.length_units;},new cljs.core.Symbol("garden.units","length-units","garden.units/length-units",-1272295430,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"length-units","length-units",-157041044,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",18,1,20,20,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.length_units)?garden.units.length_units.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"Hz+"),new cljs.core.Var(function(){return garden.units.Hz_PLUS_;},new cljs.core.Symbol("garden.units","Hz+","garden.units/Hz+",-1714489530,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),331,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"Hz+","Hz+",1599497932,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.Hz_PLUS_)?garden.units.Hz_PLUS_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"pc?"),new cljs.core.Var(function(){return garden.units.pc_QMARK_;},new cljs.core.Symbol("garden.units","pc?","garden.units/pc?",-1195119262,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),296,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"pc?","pc?",2051563244,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.pc_QMARK_)?garden.units.pc_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"pt-div"),new cljs.core.Var(function(){return garden.units.pt_div;},new cljs.core.Symbol("garden.units","pt-div","garden.units/pt-div",-1123817978,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),295,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"pt-div","pt-div",1941600140,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.pt_div)?garden.units.pt_div.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"grad*"),new cljs.core.Var(function(){return garden.units.grad_STAR_;},new cljs.core.Symbol("garden.units","grad*","garden.units/grad*",-248249310,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),320,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"grad*","grad*",1287433132,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.grad_STAR_)?garden.units.grad_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"s+"),new cljs.core.Var(function(){return garden.units.s_PLUS_;},new cljs.core.Symbol("garden.units","s+","garden.units/s+",-1240764122,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),326,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"s+","s+",1216594860,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.s_PLUS_)?garden.units.s_PLUS_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"vh*"),new cljs.core.Var(function(){return garden.units.vh_STAR_;},new cljs.core.Symbol("garden.units","vh*","garden.units/vh*",2068888771,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),309,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"vh*","vh*",-1109865139,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.vh_STAR_)?garden.units.vh_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"s?"),new cljs.core.Var(function(){return garden.units.s_QMARK_;},new cljs.core.Symbol("garden.units","s?","garden.units/s?",1466844411,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),326,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"s?","s?",-1779845779,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.s_QMARK_)?garden.units.s_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"turn-div"),new cljs.core.Var(function(){return garden.units.turn_div;},new cljs.core.Symbol("garden.units","turn-div","garden.units/turn-div",97782595,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),322,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"turn-div","turn-div",1264556493,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.turn_div)?garden.units.turn_div.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"vh-"),new cljs.core.Var(function(){return garden.units.vh_;},new cljs.core.Symbol("garden.units","vh-","garden.units/vh-",-1315463145,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),309,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"vh-","vh-",-217107827,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.vh_)?garden.units.vh_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ex+"),new cljs.core.Var(function(){return garden.units.ex_PLUS_;},new cljs.core.Symbol("garden.units","ex+","garden.units/ex+",1799561539,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),302,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"ex+","ex+",-1513369651,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.ex_PLUS_)?garden.units.ex_PLUS_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"em+"),new cljs.core.Var(function(){return garden.units.em_PLUS_;},new cljs.core.Symbol("garden.units","em+","garden.units/em+",-1087766124,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),301,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"em+","em+",1901244430,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.em_PLUS_)?garden.units.em_PLUS_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"vmax-"),new cljs.core.Var(function(){return garden.units.vmax_;},new cljs.core.Symbol("garden.units","vmax-","garden.units/vmax-",-110518464,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),311,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"vmax-","vmax-",-1159647794,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.vmax_)?garden.units.vmax_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"frequency?"),new cljs.core.Var(function(){return garden.units.frequency_QMARK_;},new cljs.core.Symbol("garden.units","frequency?","garden.units/frequency?",1492570944,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"frequency?","frequency?",-1686224434,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",17,1,57,57,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(garden.units.frequency_QMARK_)?garden.units.frequency_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"vmin+"),new cljs.core.Var(function(){return garden.units.vmin_PLUS_;},new cljs.core.Symbol("garden.units","vmin+","garden.units/vmin+",1660447576,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),310,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"vmin+","vmin+",608238286,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.vmin_PLUS_)?garden.units.vmin_PLUS_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"deg+"),new cljs.core.Var(function(){return garden.units.deg_PLUS_;},new cljs.core.Symbol("garden.units","deg+","garden.units/deg+",-606170943,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),319,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"deg+","deg+",424763727,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.deg_PLUS_)?garden.units.deg_PLUS_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"grad+"),new cljs.core.Var(function(){return garden.units.grad_PLUS_;},new cljs.core.Symbol("garden.units","grad+","garden.units/grad+",73095237,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),320,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"grad+","grad+",-1009522225,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.grad_PLUS_)?garden.units.grad_PLUS_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dpi*"),new cljs.core.Var(function(){return garden.units.dpi_STAR_;},new cljs.core.Symbol("garden.units","dpi*","garden.units/dpi*",449073017,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),336,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"dpi*","dpi*",-1521623569,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.dpi_STAR_)?garden.units.dpi_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"pt-"),new cljs.core.Var(function(){return garden.units.pt_;},new cljs.core.Symbol("garden.units","pt-","garden.units/pt-",1691395237,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),295,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"pt-","pt-",576140079,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.pt_)?garden.units.pt_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"deg*"),new cljs.core.Var(function(){return garden.units.deg_STAR_;},new cljs.core.Symbol("garden.units","deg*","garden.units/deg*",876950174,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),319,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"deg*","deg*",-1982168816,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.deg_STAR_)?garden.units.deg_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"vmax*"),new cljs.core.Var(function(){return garden.units.vmax_STAR_;},new cljs.core.Symbol("garden.units","vmax*","garden.units/vmax*",1247906650,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),311,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"vmax*","vmax*",149494224,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.vmax_STAR_)?garden.units.vmax_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"grad-"),new cljs.core.Var(function(){return garden.units.grad_;},new cljs.core.Symbol("garden.units","grad-","garden.units/grad-",-2130433910,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),320,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"grad-","grad-",1140693616,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.grad_)?garden.units.grad_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"vmin?"),new cljs.core.Var(function(){return garden.units.vmin_QMARK_;},new cljs.core.Symbol("garden.units","vmin?","garden.units/vmin?",-510342918,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),310,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"vmin?","vmin?",-1557300624,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.vmin_QMARK_)?garden.units.vmin_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"Hz*"),new cljs.core.Var(function(){return garden.units.Hz_STAR_;},new cljs.core.Symbol("garden.units","Hz*","garden.units/Hz*",-695249850,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),331,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"Hz*","Hz*",339199696,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.Hz_STAR_)?garden.units.Hz_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"vw+"),new cljs.core.Var(function(){return garden.units.vw_PLUS_;},new cljs.core.Symbol("garden.units","vw+","garden.units/vw+",1093360326,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),308,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"vw+","vw+",-2091652272,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.vw_PLUS_)?garden.units.vw_PLUS_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"vw?"),new cljs.core.Var(function(){return garden.units.vw_QMARK_;},new cljs.core.Symbol("garden.units","vw?","garden.units/vw?",961579775,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),308,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"vw?","vw?",1994070129,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.vw_QMARK_)?garden.units.vw_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"pt+"),new cljs.core.Var(function(){return garden.units.pt_PLUS_;},new cljs.core.Symbol("garden.units","pt+","garden.units/pt+",-155895897,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),295,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"pt+","pt+",808273201,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.pt_PLUS_)?garden.units.pt_PLUS_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"in?"),new cljs.core.Var(function(){return garden.units.in_QMARK_;},new cljs.core.Symbol("garden.units","in?","garden.units/in?",-1223067833,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),293,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"in?","in?",1905383889,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.in_QMARK_)?garden.units.in_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dpcm-div"),new cljs.core.Var(function(){return garden.units.dpcm_div;},new cljs.core.Symbol("garden.units","dpcm-div","garden.units/dpcm-div",2119659131,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),337,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"dpcm-div","dpcm-div",1003290097,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.dpcm_div)?garden.units.dpcm_div.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ex*"),new cljs.core.Var(function(){return garden.units.ex_STAR_;},new cljs.core.Symbol("garden.units","ex*","garden.units/ex*",942030027,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),302,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"ex*","ex*",2108657329,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.ex_STAR_)?garden.units.ex_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"Hz?"),new cljs.core.Var(function(){return garden.units.Hz_QMARK_;},new cljs.core.Symbol("garden.units","Hz?","garden.units/Hz?",1256219515,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),331,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"Hz?","Hz?",158986993,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.Hz_QMARK_)?garden.units.Hz_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"px+"),new cljs.core.Var(function(){return garden.units.px_PLUS_;},new cljs.core.Symbol("garden.units","px+","garden.units/px+",850654596,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),294,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"px+","px+",1951097874,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.px_PLUS_)?garden.units.px_PLUS_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"s-div"),new cljs.core.Var(function(){return garden.units.s_div;},new cljs.core.Symbol("garden.units","s-div","garden.units/s-div",-151356888,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),326,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"s-div","s-div",880995474,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.s_div)?garden.units.s_div.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rem"),new cljs.core.Var(function(){return garden.units.rem;},new cljs.core.Symbol("garden.units","rem","garden.units/rem",1628184380,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"rem","rem",664046770,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",13,1,304,304,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.rem)?garden.units.rem.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"em"),new cljs.core.Var(function(){return garden.units.em;},new cljs.core.Symbol("garden.units","em","garden.units/em",1215318904,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"em","em",-1946622734,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",12,1,301,301,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.em)?garden.units.em.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"em-div"),new cljs.core.Var(function(){return garden.units.em_div;},new cljs.core.Symbol("garden.units","em-div","garden.units/em-div",737707736,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),301,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"em-div","em-div",-163572398,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.em_div)?garden.units.em_div.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"make-unit-fn"),new cljs.core.Var(function(){return garden.units.make_unit_fn;},new cljs.core.Symbol("garden.units","make-unit-fn","garden.units/make-unit-fn",1772359448,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"make-unit-fn","make-unit-fn",-685532782,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",19,1,170,170,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"unit","unit",2015706702,null)], null)),"Creates a function for creating and converting `CSSUnit`s for the\n  given unit. If a number n is passed the function it will produce a\n  new `CSSUnit` record with a the magnitude set to n. If a `CSSUnit`\n  is passed the function will attempt to convert it.",(cljs.core.truth_(garden.units.make_unit_fn)?garden.units.make_unit_fn.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dppx"),new cljs.core.Var(function(){return garden.units.dppx;},new cljs.core.Symbol("garden.units","dppx","garden.units/dppx",-1832339336,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"dppx","dppx",-733926926,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",14,1,338,338,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.dppx)?garden.units.dppx.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"px"),new cljs.core.Var(function(){return garden.units.px;},new cljs.core.Symbol("garden.units","px","garden.units/px",-1224349276,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"px","px",1921861426,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",12,1,294,294,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.px)?garden.units.px.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"px?"),new cljs.core.Var(function(){return garden.units.px_QMARK_;},new cljs.core.Symbol("garden.units","px?","garden.units/px?",1074881989,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),294,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"px?","px?",-2085972909,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.px_QMARK_)?garden.units.px_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"vmax-div"),new cljs.core.Var(function(){return garden.units.vmax_div;},new cljs.core.Symbol("garden.units","vmax-div","garden.units/vmax-div",-1202896131,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),311,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"vmax-div","vmax-div",2110123123,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.vmax_div)?garden.units.vmax_div.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rem?"),new cljs.core.Var(function(){return garden.units.rem_QMARK_;},new cljs.core.Symbol("garden.units","rem?","garden.units/rem?",-1468201051,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),304,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"rem?","rem?",-337276621,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.rem_QMARK_)?garden.units.rem_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"vmin-div"),new cljs.core.Var(function(){return garden.units.vmin_div;},new cljs.core.Symbol("garden.units","vmin-div","garden.units/vmin-div",-600986851,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),310,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"vmin-div","vmin-div",1655978387,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.vmin_div)?garden.units.vmin_div.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"Hz"),new cljs.core.Var(function(){return garden.units.Hz;},new cljs.core.Symbol("garden.units","Hz","garden.units/Hz",-1350102183,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"Hz","Hz",-318201389,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",12,1,331,331,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.Hz)?garden.units.Hz.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"in*"),new cljs.core.Var(function(){return garden.units.in_STAR_;},new cljs.core.Symbol("garden.units","in*","garden.units/in*",-548739911,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),293,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"in*","in*",11754035,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.in_STAR_)?garden.units.in_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dpcm"),new cljs.core.Var(function(){return garden.units.dpcm;},new cljs.core.Symbol("garden.units","dpcm","garden.units/dpcm",1551285629,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"dpcm","dpcm",452930291,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",14,1,337,337,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.dpcm)?garden.units.dpcm.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dppx+"),new cljs.core.Var(function(){return garden.units.dppx_PLUS_;},new cljs.core.Symbol("garden.units","dppx+","garden.units/dppx+",1753946461,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),338,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"dppx+","dppx+",-1389129773,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.dppx_PLUS_)?garden.units.dppx_PLUS_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ms?"),new cljs.core.Var(function(){return garden.units.ms_QMARK_;},new cljs.core.Symbol("garden.units","ms?","garden.units/ms?",-1584881694,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),327,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"ms?","ms?",-468750252,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.ms_QMARK_)?garden.units.ms_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"pc"),new cljs.core.Var(function(){return garden.units.pc;},new cljs.core.Symbol("garden.units","pc","garden.units/pc",-1026390902,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"pc","pc",-2141522316,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",12,1,296,296,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.pc)?garden.units.pc.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"pt?"),new cljs.core.Var(function(){return garden.units.pt_QMARK_;},new cljs.core.Symbol("garden.units","pt?","garden.units/pt?",-857029302,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),295,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"pt?","pt?",-1838074060,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.pt_QMARK_)?garden.units.pt_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dppx-div"),new cljs.core.Var(function(){return garden.units.dppx_div;},new cljs.core.Symbol("garden.units","dppx-div","garden.units/dppx-div",-1836354230,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),338,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"dppx-div","dppx-div",1410393908,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.dppx_div)?garden.units.dppx_div.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"kHz*"),new cljs.core.Var(function(){return garden.units.kHz_STAR_;},new cljs.core.Symbol("garden.units","kHz*","garden.units/kHz*",-1342826290,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),332,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"kHz*","kHz*",293514068,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.kHz_STAR_)?garden.units.kHz_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dpi-"),new cljs.core.Var(function(){return garden.units.dpi_;},new cljs.core.Symbol("garden.units","dpi-","garden.units/dpi-",-1508964054,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),336,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"dpi-","dpi-",-476800108,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.dpi_)?garden.units.dpi_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"px-div"),new cljs.core.Var(function(){return garden.units.px_div;},new cljs.core.Symbol("garden.units","px-div","garden.units/px-div",1037253922,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),294,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"px-div","px-div",1616629652,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.px_div)?garden.units.px_div.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"mm*"),new cljs.core.Var(function(){return garden.units.mm_STAR_;},new cljs.core.Symbol("garden.units","mm*","garden.units/mm*",-160089778,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),292,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"mm*","mm*",889032660,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.mm_STAR_)?garden.units.mm_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"in-"),new cljs.core.Var(function(){return garden.units.in_;},new cljs.core.Symbol("garden.units","in-","garden.units/in-",590564259,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),293,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"in-","in-",-21694443,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.in_)?garden.units.in_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"pc-div"),new cljs.core.Var(function(){return garden.units.pc_div;},new cljs.core.Symbol("garden.units","pc-div","garden.units/pc-div",976443103,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),296,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"pc-div","pc-div",2092680277,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.pc_div)?garden.units.pc_div.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"s"),new cljs.core.Var(function(){return garden.units.s;},new cljs.core.Symbol("garden.units","s","garden.units/s",-2046850913,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"s","s",-948495851,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",11,1,326,326,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.s)?garden.units.s.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"vh"),new cljs.core.Var(function(){return garden.units.vh;},new cljs.core.Symbol("garden.units","vh","garden.units/vh",-1206979293,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"vh","vh",1720084373,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",12,1,309,309,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.vh)?garden.units.vh.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"pc*"),new cljs.core.Var(function(){return garden.units.pc_STAR_;},new cljs.core.Symbol("garden.units","pc*","garden.units/pc*",-191077940,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),296,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"pc*","pc*",912781398,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.pc_STAR_)?garden.units.pc_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"pc+"),new cljs.core.Var(function(){return garden.units.pc_PLUS_;},new cljs.core.Symbol("garden.units","pc+","garden.units/pc+",-1850450104,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),296,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"pc+","pc+",1396452662,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.pc_PLUS_)?garden.units.pc_PLUS_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ms+"),new cljs.core.Var(function(){return garden.units.ms_PLUS_;},new cljs.core.Symbol("garden.units","ms+","garden.units/ms+",84763368,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),327,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"ms+","ms+",-927656618,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.ms_PLUS_)?garden.units.ms_PLUS_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"kHz+"),new cljs.core.Var(function(){return garden.units.kHz_PLUS_;},new cljs.core.Symbol("garden.units","kHz+","garden.units/kHz+",-488896548,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),332,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"kHz+","kHz+",656781654,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.kHz_PLUS_)?garden.units.kHz_PLUS_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"vw"),new cljs.core.Var(function(){return garden.units.vw;},new cljs.core.Symbol("garden.units","vw","garden.units/vw",-1963784312,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"vw","vw",-713386634,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",12,1,308,308,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.vw)?garden.units.vw.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"deg"),new cljs.core.Var(function(){return garden.units.deg;},new cljs.core.Symbol("garden.units","deg","garden.units/deg",-190819508,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"deg","deg",958975446,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",13,1,319,319,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.deg)?garden.units.deg.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"vw*"),new cljs.core.Var(function(){return garden.units.vw_STAR_;},new cljs.core.Symbol("garden.units","vw*","garden.units/vw*",-2070010660,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),308,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"vw*","vw*",-972581290,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.vw_STAR_)?garden.units.vw_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"kHz-"),new cljs.core.Var(function(){return garden.units.kHz_;},new cljs.core.Symbol("garden.units","kHz-","garden.units/kHz-",94956744,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),332,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"kHz-","kHz-",1075871414,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.kHz_)?garden.units.kHz_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ch"),new cljs.core.Var(function(){return garden.units.ch;},new cljs.core.Symbol("garden.units","ch","garden.units/ch",-1908366868,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"ch","ch",1085813622,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",12,1,303,303,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.ch)?garden.units.ch.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"angular-units"),new cljs.core.Var(function(){return garden.units.angular_units;},new cljs.core.Symbol("garden.units","angular-units","garden.units/angular-units",1872654652,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"angular-units","angular-units",738640822,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",19,1,23,23,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.angular_units)?garden.units.angular_units.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dpcm-"),new cljs.core.Var(function(){return garden.units.dpcm_;},new cljs.core.Symbol("garden.units","dpcm-","garden.units/dpcm-",952139629,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),337,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"dpcm-","dpcm-",2126048503,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.dpcm_)?garden.units.dpcm_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"turn"),new cljs.core.Var(function(){return garden.units.turn;},new cljs.core.Symbol("garden.units","turn","garden.units/turn",-1530582099,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"turn","turn",1716290871,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",14,1,322,322,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.turn)?garden.units.turn.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"turn-"),new cljs.core.Var(function(){return garden.units.turn_;},new cljs.core.Symbol("garden.units","turn-","garden.units/turn-",-1757437215,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),322,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"turn-","turn-",-761246377,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.turn_)?garden.units.turn_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"Hz-div"),new cljs.core.Var(function(){return garden.units.Hz_div;},new cljs.core.Symbol("garden.units","Hz-div","garden.units/Hz-div",-2121698463,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),331,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"Hz-div","Hz-div",-872300073,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.Hz_div)?garden.units.Hz_div.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"in+"),new cljs.core.Var(function(){return garden.units.in_PLUS_;},new cljs.core.Symbol("garden.units","in+","garden.units/in+",858165705,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),293,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"in+","in+",2108621751,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.in_PLUS_)?garden.units.in_PLUS_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dpi"),new cljs.core.Var(function(){return garden.units.dpi;},new cljs.core.Symbol("garden.units","dpi","garden.units/dpi",-443978303,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"dpi","dpi",654368695,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",13,1,336,336,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.dpi)?garden.units.dpi.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"cm"),new cljs.core.Var(function(){return garden.units.cm;},new cljs.core.Symbol("garden.units","cm","garden.units/cm",1099487753,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"cm","cm",-2113844233,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",12,1,291,291,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.cm)?garden.units.cm.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"cm*"),new cljs.core.Var(function(){return garden.units.cm_STAR_;},new cljs.core.Symbol("garden.units","cm*","garden.units/cm*",2081893038,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),291,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"cm*","cm*",846173240,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.cm_STAR_)?garden.units.cm_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"angle?"),new cljs.core.Var(function(){return garden.units.angle_QMARK_;},new cljs.core.Symbol("garden.units","angle?","garden.units/angle?",1343873326,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"angle?","angle?",-1818210120,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",13,1,47,47,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(garden.units.angle_QMARK_)?garden.units.angle_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ex?"),new cljs.core.Var(function(){return garden.units.ex_QMARK_;},new cljs.core.Symbol("garden.units","ex?","garden.units/ex?",384701986,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),302,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"ex?","ex?",1417120184,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.ex_QMARK_)?garden.units.ex_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"grad-div"),new cljs.core.Var(function(){return garden.units.grad_div;},new cljs.core.Symbol("garden.units","grad-div","garden.units/grad-div",1380805938,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),320,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"grad-div","grad-div",-1865089096,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.grad_div)?garden.units.grad_div.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rem-"),new cljs.core.Var(function(){return garden.units.rem_;},new cljs.core.Symbol("garden.units","rem-","garden.units/rem-",-1945616785,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),304,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"rem-","rem-",1317046777,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.rem_)?garden.units.rem_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"deg?"),new cljs.core.Var(function(){return garden.units.deg_QMARK_;},new cljs.core.Symbol("garden.units","deg?","garden.units/deg?",1645867664,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),319,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"deg?","deg?",-1400807398,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.deg_QMARK_)?garden.units.deg_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ms-div"),new cljs.core.Var(function(){return garden.units.ms_div;},new cljs.core.Symbol("garden.units","ms-div","garden.units/ms-div",-1916259776,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),327,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"ms-div","ms-div",842024154,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.ms_div)?garden.units.ms_div.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"fr?"),new cljs.core.Var(function(){return garden.units.fr_QMARK_;},new cljs.core.Symbol("garden.units","fr?","garden.units/fr?",1208136836,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),315,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"fr?","fr?",244122906,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.fr_QMARK_)?garden.units.fr_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"s-"),new cljs.core.Var(function(){return garden.units.s_;},new cljs.core.Symbol("garden.units","s-","garden.units/s-",-923511056,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),326,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"s-","s-",-1971477126,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.s_)?garden.units.s_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"resolution-units"),new cljs.core.Var(function(){return garden.units.resolution_units;},new cljs.core.Symbol("garden.units","resolution-units","garden.units/resolution-units",535067168,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"resolution-units","resolution-units",-579016262,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",22,1,32,32,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.resolution_units)?garden.units.resolution_units.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"cm+"),new cljs.core.Var(function(){return garden.units.cm_PLUS_;},new cljs.core.Symbol("garden.units","cm+","garden.units/cm+",1956890192,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),291,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"cm+","cm+",-1188407846,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.cm_PLUS_)?garden.units.cm_PLUS_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ex"),new cljs.core.Var(function(){return garden.units.ex;},new cljs.core.Symbol("garden.units","ex","garden.units/ex",1326310496,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"ex","ex",226760186,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",12,1,302,302,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.ex)?garden.units.ex.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dpcm?"),new cljs.core.Var(function(){return garden.units.dpcm_QMARK_;},new cljs.core.Symbol("garden.units","dpcm?","garden.units/dpcm?",1472837740,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),337,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"dpcm?","dpcm?",-1807668742,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.dpcm_QMARK_)?garden.units.dpcm_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rem*"),new cljs.core.Var(function(){return garden.units.rem_STAR_;},new cljs.core.Symbol("garden.units","rem*","garden.units/rem*",2057831728,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),304,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"rem*","rem*",-1088377926,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.rem_STAR_)?garden.units.rem_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ch?"),new cljs.core.Var(function(){return garden.units.ch_QMARK_;},new cljs.core.Symbol("garden.units","ch?","garden.units/ch?",890013105,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),303,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"ch?","ch?",1803818043,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.ch_QMARK_)?garden.units.ch_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"kHz?"),new cljs.core.Var(function(){return garden.units.kHz_QMARK_;},new cljs.core.Symbol("garden.units","kHz?","garden.units/kHz?",-1423313647,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),332,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"kHz?","kHz?",1766933659,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.kHz_QMARK_)?garden.units.kHz_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rem-div"),new cljs.core.Var(function(){return garden.units.rem_div;},new cljs.core.Symbol("garden.units","rem-div","garden.units/rem-div",155553937,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),304,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"rem-div","rem-div",1187840539,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.rem_div)?garden.units.rem_div.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dppx?"),new cljs.core.Var(function(){return garden.units.dppx_QMARK_;},new cljs.core.Symbol("garden.units","dppx?","garden.units/dppx?",-1231618490,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),338,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"dppx?","dppx?",1880001596,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.dppx_QMARK_)?garden.units.dppx_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"percent-div"),new cljs.core.Var(function(){return garden.units.percent_div;},new cljs.core.Symbol("garden.units","percent-div","garden.units/percent-div",-1205337866,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),297,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"percent-div","percent-div",-73362820,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.percent_div)?garden.units.percent_div.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"deg-"),new cljs.core.Var(function(){return garden.units.deg_;},new cljs.core.Symbol("garden.units","deg-","garden.units/deg-",-2103762606,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),319,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"deg-","deg-",1074042588,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.deg_)?garden.units.deg_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rad?"),new cljs.core.Var(function(){return garden.units.rad_QMARK_;},new cljs.core.Symbol("garden.units","rad?","garden.units/rad?",-1780497082,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),321,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"rad?","rad?",1465342780,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.rad_QMARK_)?garden.units.rad_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"percent-"),new cljs.core.Var(function(){return garden.units.percent_;},new cljs.core.Symbol("garden.units","percent-","garden.units/percent-",1480050034,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),297,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"percent-","percent-",94926844,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.percent_)?garden.units.percent_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"turn*"),new cljs.core.Var(function(){return garden.units.turn_STAR_;},new cljs.core.Symbol("garden.units","turn*","garden.units/turn*",489367879,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),322,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"turn*","turn*",-1064134851,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.turn_STAR_)?garden.units.turn_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"time-units"),new cljs.core.Var(function(){return garden.units.time_units;},new cljs.core.Symbol("garden.units","time-units","garden.units/time-units",-828099129,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"time-units","time-units",204253117,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",16,1,26,26,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.time_units)?garden.units.time_units.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"make-unit-predicate"),new cljs.core.Var(function(){return garden.units.make_unit_predicate;},new cljs.core.Symbol("garden.units","make-unit-predicate","garden.units/make-unit-predicate",-1786711920,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"make-unit-predicate","make-unit-predicate",672687646,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",26,1,165,165,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"unit","unit",2015706702,null)], null)),"Creates a function for verifying the given unit type.",(cljs.core.truth_(garden.units.make_unit_predicate)?garden.units.make_unit_predicate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"in-div"),new cljs.core.Var(function(){return garden.units.in_div;},new cljs.core.Symbol("garden.units","in-div","garden.units/in-div",-155909756,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),293,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"in-div","in-div",892113790,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.in_div)?garden.units.in_div.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ex-div"),new cljs.core.Var(function(){return garden.units.ex_div;},new cljs.core.Symbol("garden.units","ex-div","garden.units/ex-div",-470857712,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),302,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"ex-div","ex-div",560446366,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.ex_div)?garden.units.ex_div.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"turn?"),new cljs.core.Var(function(){return garden.units.turn_QMARK_;},new cljs.core.Symbol("garden.units","turn?","garden.units/turn?",87137584,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),322,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"turn?","turn?",-1011283010,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.turn_QMARK_)?garden.units.turn_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"vh-div"),new cljs.core.Var(function(){return garden.units.vh_div;},new cljs.core.Symbol("garden.units","vh-div","garden.units/vh-div",895078993,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),309,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"vh-div","vh-div",-137345569,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.vh_div)?garden.units.vh_div.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"percent?"),new cljs.core.Var(function(){return garden.units.percent_QMARK_;},new cljs.core.Symbol("garden.units","percent?","garden.units/percent?",146258037,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),297,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"percent?","percent?",-851572225,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.percent_QMARK_)?garden.units.percent_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rad+"),new cljs.core.Var(function(){return garden.units.rad_PLUS_;},new cljs.core.Symbol("garden.units","rad+","garden.units/rad+",937679057,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),321,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"rad+","rad+",1919635039,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.rad_PLUS_)?garden.units.rad_PLUS_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"vmax"),new cljs.core.Var(function(){return garden.units.vmax;},new cljs.core.Symbol("garden.units","vmax","garden.units/vmax",1246189285,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Symbol(null,"vmax","vmax",205317983,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",14,1,311,311,cljs.core.List.EMPTY,null,(cljs.core.truth_(garden.units.vmax)?garden.units.vmax.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"em-"),new cljs.core.Var(function(){return garden.units.em_;},new cljs.core.Symbol("garden.units","em-","garden.units/em-",-1679954443,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),301,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"em-","em-",1582715775,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.em_)?garden.units.em_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ex-"),new cljs.core.Var(function(){return garden.units.ex_;},new cljs.core.Symbol("garden.units","ex-","garden.units/ex-",-1313226447,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/units.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"garden.units","garden.units",1002816002,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),302,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"ex-","ex-",-199142465,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(garden.units.ex_)?garden.units.ex_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null)], true))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"garden.util","garden.util",2095750027,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 24, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"space-join"),new cljs.core.Var(function(){return garden.util.space_join;},new cljs.core.Symbol("garden.util","space-join","garden.util/space-join",-1540065239,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.util","garden.util",2095750027,null),new cljs.core.Symbol(null,"space-join","space-join",-175844350,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/util.cljc",17,1,64,64,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Return a space separated list of values.",(cljs.core.truth_(garden.util.space_join)?garden.util.space_join.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"at-import?"),new cljs.core.Var(function(){return garden.util.at_import_QMARK_;},new cljs.core.Symbol("garden.util","at-import?","garden.util/at-import?",854661221,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.util","garden.util",2095750027,null),new cljs.core.Symbol(null,"at-import?","at-import?",-1033849726,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/util.cljc",17,1,119,119,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"True if `x` is a CSS `@import` rule.",(cljs.core.truth_(garden.util.at_import_QMARK_)?garden.util.at_import_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"int->string"),new cljs.core.Var(function(){return garden.util.int__GT_string;},new cljs.core.Symbol("garden.util","int->string","garden.util/int->string",556644801,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.util","garden.util",2095750027,null),new cljs.core.Symbol(null,"int->string","int->string",-239198812,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/util.cljc",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"radix","radix",-1797419306,null)], null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"radix","radix",-1797419306,null)], null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,55,55,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"radix","radix",-1797419306,null)], null)], null)),"Convert an integer to a string with optional base.",(cljs.core.truth_(garden.util.int__GT_string)?garden.util.int__GT_string.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rule?"),new cljs.core.Var(function(){return garden.util.rule_QMARK_;},new cljs.core.Symbol("garden.util","rule?","garden.util/rule?",-521484861,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.util","garden.util",2095750027,null),new cljs.core.Symbol(null,"rule?","rule?",1348172198,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/util.cljc",8,1,92,94,cljs.core.List.EMPTY,"Alias to `vector?`.",(cljs.core.truth_(garden.util.rule_QMARK_)?garden.util.rule_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"to-str"),new cljs.core.Var(function(){return garden.util.to_str;},new cljs.core.Symbol("garden.util","to-str","garden.util/to-str",-100359602,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("garden.util","ToString","garden.util/ToString",1108987018,null),new cljs.core.Symbol(null,"garden.util","garden.util",2095750027,null),new cljs.core.Symbol(null,"to-str","to-str",764743209,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/util.cljc",18,1,27,28,new cljs.core.Symbol(null,"String","String",-2070057435,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),"Convert a value into a string.",(cljs.core.truth_(garden.util.to_str)?garden.util.to_str.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"cartesian-product"),new cljs.core.Var(function(){return garden.util.cartesian_product;},new cljs.core.Symbol("garden.util","cartesian-product","garden.util/cartesian-product",-1175876780,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.util","garden.util",2095750027,null),new cljs.core.Symbol(null,"cartesian-product","cartesian-product",1232721737,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/util.cljc",24,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"seqs","seqs",-287103031,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"seqs","seqs",-287103031,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,167,167,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"seqs","seqs",-287103031,null)], null)),"All the ways to take one item from each sequence.",(cljs.core.truth_(garden.util.cartesian_product)?garden.util.cartesian_product.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"format"),new cljs.core.Var(function(){return garden.util.format;},new cljs.core.Symbol("garden.util","format","garden.util/format",-1603103884,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.util","garden.util",2095750027,null),new cljs.core.Symbol(null,"format","format",333606761,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/util.cljc",16,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"fmt","fmt",1972832299,null),new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"fmt","fmt",1972832299,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),4,18,18,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"fmt","fmt",1972832299,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Formats a string using goog.string.format.",(cljs.core.truth_(garden.util.format)?garden.util.format.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"clip"),new cljs.core.Var(function(){return garden.util.clip;},new cljs.core.Symbol("garden.util","clip","garden.util/clip",-1021226447,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.util","garden.util",2095750027,null),new cljs.core.Symbol(null,"clip","clip",-1823437270,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/util.cljc",11,1,155,155,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Return a number such that n is no less than a and no more than b.",(cljs.core.truth_(garden.util.clip)?garden.util.clip.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"between?"),new cljs.core.Var(function(){return garden.util.between_QMARK_;},new cljs.core.Symbol("garden.util","between?","garden.util/between?",-1625384271,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.util","garden.util",2095750027,null),new cljs.core.Symbol(null,"between?","between?",-806535510,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/util.cljc",15,1,148,148,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)),"True if n is a number between a and b.",(cljs.core.truth_(garden.util.between_QMARK_)?garden.util.between_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"at-media?"),new cljs.core.Var(function(){return garden.util.at_media_QMARK_;},new cljs.core.Symbol("garden.util","at-media?","garden.util/at-media?",-1403607315,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.util","garden.util",2095750027,null),new cljs.core.Symbol(null,"at-media?","at-media?",-70860086,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/util.cljc",16,1,104,104,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"True if `x` is a CSS `@media` rule.",(cljs.core.truth_(garden.util.at_media_QMARK_)?garden.util.at_media_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"at-supports?"),new cljs.core.Var(function(){return garden.util.at_supports_QMARK_;},new cljs.core.Symbol("garden.util","at-supports?","garden.util/at-supports?",-1594427627,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.util","garden.util",2095750027,null),new cljs.core.Symbol(null,"at-supports?","at-supports?",275125102,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/util.cljc",19,1,109,109,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"True if `x` is a CSS `@supports` rule.",(cljs.core.truth_(garden.util.at_supports_QMARK_)?garden.util.at_supports_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"string->int"),new cljs.core.Var(function(){return garden.util.string__GT_int;},new cljs.core.Symbol("garden.util","string->int","garden.util/string->int",-1696671589,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.util","garden.util",2095750027,null),new cljs.core.Symbol(null,"string->int","string->int",1265515632,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/util.cljc",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"radix","radix",-1797419306,null)], null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"radix","radix",-1797419306,null)], null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,46,46,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"radix","radix",-1797419306,null)], null)], null)),"Convert a string to an integer with optional base.",(cljs.core.truth_(garden.util.string__GT_int)?garden.util.string__GT_int.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"as-str"),new cljs.core.Var(function(){return garden.util.as_str;},new cljs.core.Symbol("garden.util","as-str","garden.util/as-str",-651983049,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.util","garden.util",2095750027,null),new cljs.core.Symbol(null,"as-str","as-str",-1447875632,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/util.cljc",21,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,41,41,new cljs.core.Symbol(null,"String","String",-2070057435,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Convert a variable number of values into strings.",(cljs.core.truth_(garden.util.as_str)?garden.util.as_str.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"comma-join"),new cljs.core.Var(function(){return garden.util.comma_join;},new cljs.core.Symbol("garden.util","comma-join","garden.util/comma-join",1167673804,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.util","garden.util",2095750027,null),new cljs.core.Symbol(null,"comma-join","comma-join",352923121,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/util.cljc",17,1,69,69,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Return a comma separated list of values. Subsequences are joined with\n   spaces.",(cljs.core.truth_(garden.util.comma_join)?garden.util.comma_join.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"vendor-prefix"),new cljs.core.Var(function(){return garden.util.vendor_prefix;},new cljs.core.Symbol("garden.util","vendor-prefix","garden.util/vendor-prefix",-995444132,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.util","garden.util",2095750027,null),new cljs.core.Symbol(null,"vendor-prefix","vendor-prefix",1966808625,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/util.cljc",20,1,132,132,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Attach a CSS vendor prefix to s.",(cljs.core.truth_(garden.util.vendor_prefix)?garden.util.vendor_prefix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"hash-map?"),new cljs.core.Var(function(){return garden.util.hash_map_QMARK_;},new cljs.core.Symbol("garden.util","hash-map?","garden.util/hash-map?",-124913330,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.util","garden.util",2095750027,null),new cljs.core.Symbol(null,"hash-map?","hash-map?",-1474685581,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/util.cljc",16,1,87,87,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"True if `(map? x)` and `x` does not satisfy `clojure.lang.IRecord`.",(cljs.core.truth_(garden.util.hash_map_QMARK_)?garden.util.hash_map_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"natural?"),new cljs.core.Var(function(){return garden.util.natural_QMARK_;},new cljs.core.Symbol("garden.util","natural?","garden.util/natural?",1077447064,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.util","garden.util",2095750027,null),new cljs.core.Symbol(null,"natural?","natural?",-1853280909,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/util.cljc",15,1,143,143,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"True if n is a natural number.",(cljs.core.truth_(garden.util.natural_QMARK_)?garden.util.natural_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ToString"),new cljs.core.Var(function(){return garden.util.ToString;},new cljs.core.Symbol("garden.util","ToString","garden.util/ToString",1108987018,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol-symbol","protocol-symbol",1279552198),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"protocol-info","protocol-info",1471745843),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"sigs","sigs",-1653119622),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"jsdoc","jsdoc",1745183516),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"garden.util","garden.util",2095750027,null),new cljs.core.Symbol(null,"ToString","ToString",854089909,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/util.cljc",22,1,27,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"methods","methods",453930866),new cljs.core.PersistentArrayMap(null, 1, [cljs.core.with_meta(new cljs.core.Symbol(null,"to-str","to-str",764743209,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"String","String",-2070057435,null),new cljs.core.Keyword(null,"doc","doc",1913296891),"Convert a value into a string."], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)], null)], null)], null),27,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"to-str","to-str",-875788318),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),cljs.core.with_meta(new cljs.core.Symbol(null,"to-str","to-str",764743209,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"String","String",-2070057435,null)], null)),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Convert a value into a string."], null)], null),cljs.core.List.EMPTY,null,cljs.core.list("@interface"),(cljs.core.truth_(garden.util.ToString)?garden.util.ToString.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"wrap-quotes"),new cljs.core.Var(function(){return garden.util.wrap_quotes;},new cljs.core.Symbol("garden.util","wrap-quotes","garden.util/wrap-quotes",-597150818,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.util","garden.util",2095750027,null),new cljs.core.Symbol(null,"wrap-quotes","wrap-quotes",771332021,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/util.cljc",18,1,79,79,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Wrap a string with double quotes.",(cljs.core.truth_(garden.util.wrap_quotes)?garden.util.wrap_quotes.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"prefix"),new cljs.core.Var(function(){return garden.util.prefix;},new cljs.core.Symbol("garden.util","prefix","garden.util/prefix",-2122354509,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.util","garden.util",2095750027,null),new cljs.core.Symbol(null,"prefix","prefix",1374623062,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/util.cljc",13,1,124,124,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Attach a CSS style prefix to s.",(cljs.core.truth_(garden.util.prefix)?garden.util.prefix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"declaration?"),new cljs.core.Var(function(){return garden.util.declaration_QMARK_;},new cljs.core.Symbol("garden.util","declaration?","garden.util/declaration?",1023896190,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.util","garden.util",2095750027,null),new cljs.core.Symbol(null,"declaration?","declaration?",1253559897,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/util.cljc",15,1,96,98,cljs.core.List.EMPTY,"Alias to `hash-map?`.",(cljs.core.truth_(garden.util.declaration_QMARK_)?garden.util.declaration_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"at-keyframes?"),new cljs.core.Var(function(){return garden.util.at_keyframes_QMARK_;},new cljs.core.Symbol("garden.util","at-keyframes?","garden.util/at-keyframes?",-2054275047,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.util","garden.util",2095750027,null),new cljs.core.Symbol(null,"at-keyframes?","at-keyframes?",-735992708,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/util.cljc",20,1,114,114,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"True if `x` is a CSS `@keyframes` rule.",(cljs.core.truth_(garden.util.at_keyframes_QMARK_)?garden.util.at_keyframes_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"at-rule?"),new cljs.core.Var(function(){return garden.util.at_rule_QMARK_;},new cljs.core.Symbol("garden.util","at-rule?","garden.util/at-rule?",904291782,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.util","garden.util",2095750027,null),new cljs.core.Symbol(null,"at-rule?","at-rule?",-2056158755,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/util.cljc",15,1,100,100,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(garden.util.at_rule_QMARK_)?garden.util.at_rule_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"average"),new cljs.core.Var(function(){return garden.util.average;},new cljs.core.Symbol("garden.util","average","garden.util/average",-184582182,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"garden.util","garden.util",2095750027,null),new cljs.core.Symbol(null,"average","average",1148175359,null),"/home/runner/.gitlibs/libs/garden/garden/05590ecb5f6fa670856f3d1ab400aa4961047480/src/garden/util.cljc",14,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"more","more",-418290273,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,161,161,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),"Return the average of two or more numbers.",(cljs.core.truth_(garden.util.average)?garden.util.average.cljs$lang$test:null)]))], null)], null))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"any-respect-at-all?"),new cljs.core.Var(function(){return zprint.core.any_respect_at_all_QMARK_;},new cljs.core.Symbol("zprint.core","any-respect-at-all?","zprint.core/any-respect-at-all?",-1490455034,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"any-respect-at-all?","any-respect-at-all?",-1444971456,null),"target/public/cljs-out/prod/zprint/core.cljc",35,1,628,628,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"options","options",1740170016,null)], null)),"Look throught the options, and see if any of :respect-nl?, :respect-bl?\n  or :indent-only are enabled for anything.  Return false if none are enabled,\n  truthy if any are.",(cljs.core.truth_(zprint.core.any_respect_at_all_QMARK_)?zprint.core.any_respect_at_all_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"zprint-file-str"),new cljs.core.Var(function(){return zprint.core.zprint_file_str;},new cljs.core.Symbol("zprint.core","zprint-file-str","zprint.core/zprint-file-str",-1662838166,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"zprint-file-str","zprint-file-str",-1720118112,null),"target/public/cljs-out/prod/zprint/core.cljc",22,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),4,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),4,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"file-str","file-str",-1158903238,null),new cljs.core.Symbol(null,"zprint-specifier","zprint-specifier",-1789811006,null),new cljs.core.Symbol(null,"new-options","new-options",461043296,null),new cljs.core.Symbol(null,"doc-str","doc-str",-737992272,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"file-str","file-str",-1158903238,null),new cljs.core.Symbol(null,"zprint-specifier","zprint-specifier",-1789811006,null),new cljs.core.Symbol(null,"new-options","new-options",461043296,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"file-str","file-str",-1158903238,null),new cljs.core.Symbol(null,"zprint-specifier","zprint-specifier",-1789811006,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"file-str","file-str",-1158903238,null),new cljs.core.Symbol(null,"zprint-specifier","zprint-specifier",-1789811006,null),new cljs.core.Symbol(null,"new-options","new-options",461043296,null),new cljs.core.Symbol(null,"doc-str","doc-str",-737992272,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"file-str","file-str",-1158903238,null),new cljs.core.Symbol(null,"zprint-specifier","zprint-specifier",-1789811006,null),new cljs.core.Symbol(null,"new-options","new-options",461043296,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"file-str","file-str",-1158903238,null),new cljs.core.Symbol(null,"zprint-specifier","zprint-specifier",-1789811006,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,1557,1557,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"file-str","file-str",-1158903238,null),new cljs.core.Symbol(null,"zprint-specifier","zprint-specifier",-1789811006,null),new cljs.core.Symbol(null,"new-options","new-options",461043296,null),new cljs.core.Symbol(null,"doc-str","doc-str",-737992272,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"file-str","file-str",-1158903238,null),new cljs.core.Symbol(null,"zprint-specifier","zprint-specifier",-1789811006,null),new cljs.core.Symbol(null,"new-options","new-options",461043296,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"file-str","file-str",-1158903238,null),new cljs.core.Symbol(null,"zprint-specifier","zprint-specifier",-1789811006,null)], null)),"Take a string, which typically holds the contents of an entire\n  file, but doesn't have to, and format the entire string, outputing\n  a formatted string.  It respects white space at the top level,\n  while ignoring it within all top level forms (unless :indent-only,\n  :respect-bl, or :respect-nl are used).  It allows comments at the\n  top level, as well as in function definitions, and also supports\n  ;!zprint directives at the top level. See File Comment API for\n  information on ;!zprint directives. zprint-specifier is the thing\n  that will be used in messages if errors are detected in ;!zprint\n  directives, so it should identify the file (or other element) to\n  allow the user to find the problem. new-options is an options-map\n  containing options to be used when doing the formatting (and will\n  be overriddden by any options in ;!zprint directives).  doc-str\n  is an optional string to be used when setting the new-options\n  into the configuration.",(cljs.core.truth_(zprint.core.zprint_file_str)?zprint.core.zprint_file_str.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"czprint-str"),new cljs.core.Var(function(){return zprint.core.czprint_str;},new cljs.core.Symbol("zprint.core","czprint-str","zprint.core/czprint-str",-762650534,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword("doc","format","doc/format",-1306960374),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"czprint-str","czprint-str",-684253600,null),"target/public/cljs-out/prod/zprint/core.cljc",new cljs.core.Keyword(null,"markdown","markdown",1227225089),18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"coll","coll",-1006698606,null),new cljs.core.Symbol(null,"rest","rest",398835108,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coll","coll",-1006698606,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"rest","rest",398835108,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,925,925,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coll","coll",-1006698606,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"rest","rest",398835108,null)], null)),"Take coll, a Clojure data structure or a string containing Clojure code or\n  data, format it readably, and output a str containing ANSI escapes to \n  syntax color the output. Additional optional arguments: \n\n      (czprint-str coll <numeric-width>)\n      (czprint-str coll <numeric-width> <options-map>)\n      (czprint-str coll <options-map>)\n\n  If coll is a string containing Clojure source:\n\n        (czprint-str coll {:parse-string? true})\n\n      (czprint nil :help)    ; for more information\n      (czprint nil :explain) ; to see the current options-map",(cljs.core.truth_(zprint.core.czprint_str)?zprint.core.czprint_str.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"range-specified?"),new cljs.core.Var(function(){return zprint.core.range_specified_QMARK_;},new cljs.core.Symbol("zprint.core","range-specified?","zprint.core/range-specified?",-1163777722,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"range-specified?","range-specified?",-1137057920,null),"target/public/cljs-out/prod/zprint/core.cljc",32,1,706,706,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"options","options",1740170016,null)], null)),"Return true if the start or end of a range is specified, or if\n  :output :range? is true.",(cljs.core.truth_(zprint.core.range_specified_QMARK_)?zprint.core.range_specified_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"process-form"),new cljs.core.Var(function(){return zprint.core.process_form;},new cljs.core.Symbol("zprint.core","process-form","zprint.core/process-form",1545261895,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"process-form","process-form",1537254785,null),"target/public/cljs-out/prod/zprint/core.cljc",28,1,1143,1143,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"rest-options","rest-options",833043934,null),new cljs.core.Symbol(null,"zprint-fn","zprint-fn",1070494014,null),new cljs.core.Symbol(null,"zprint-specifier","zprint-specifier",-1789811006,null),new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"full-options","full-options",-1090670161,null),new cljs.core.Symbol(null,"next-options","next-options",928053008,null),new cljs.core.Symbol(null,"_","_",-1201019570,null),new cljs.core.Symbol(null,"indent","indent",1492331402,null),new cljs.core.Symbol(null,"zprint-num","zprint-num",-88625468,null),new cljs.core.Symbol(null,"previous-newline?","previous-newline?",-1210763844,null),new cljs.core.Symbol(null,"error-vec","error-vec",-69973764,null)], null),new cljs.core.Symbol(null,"form","form",16469056,null)], null)),"Take one form from a file and process it.  The primary goal is\n  of course to produce a string to put into the output file.  In\n  addition, see if that string starts with ;!zprint and if it does,\n  pass along that information back to the caller.  The input is a\n  [[next-options <previous-string> indent zprint-num previous-newline? \n  error-vec] form] , where next-options accumulates the information to be\n  applied to the next non-comment/non-whitespace element in the\n  file.  The output is [next-options output-str indent zprint-num\n  previous-newline? error-vec], since reductions is used to call this function.\n  See process-multiple-forms for what is actually done with the\n  various :format values.",(cljs.core.truth_(zprint.core.process_form)?zprint.core.process_form.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"format-spec"),new cljs.core.Var(function(){return zprint.core.format_spec;},new cljs.core.Symbol("zprint.core","format-spec","zprint.core/format-spec",-710460241,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"format-spec","format-spec",-547539231,null),"target/public/cljs-out/prod/zprint/core.cljc",27,1,1848,1848,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"options","options",1740170016,null),new cljs.core.Symbol(null,"describe-fn","describe-fn",-1451045402,null),new cljs.core.Symbol(null,"fn-spec","fn-spec",-1940449061,null),new cljs.core.Symbol(null,"indent","indent",1492331402,null),new cljs.core.Symbol(null,"key","key",124488940,null)], null)),"Take a spec and a key, and format the output as a string. Width is\n  because the width isn't really (:width options).",(cljs.core.truth_(zprint.core.format_spec)?zprint.core.format_spec.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"get-fn-source"),new cljs.core.Var(function(){return zprint.core.get_fn_source;},new cljs.core.Symbol("zprint.core","get-fn-source","zprint.core/get-fn-source",1323514119,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"get-fn-source","get-fn-source",1148006209,null),"target/public/cljs-out/prod/zprint/core.cljc",29,1,883,883,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"fn-name","fn-name",873937523,null)], null)),"Call source-fn, and if it isn't there throw an exception.",(cljs.core.truth_(zprint.core.get_fn_source)?zprint.core.get_fn_source.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"remove-newline-indent-locs"),new cljs.core.Var(function(){return zprint.core.remove_newline_indent_locs;},new cljs.core.Symbol("zprint.core","remove-newline-indent-locs","zprint.core/remove-newline-indent-locs",-862689660,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"remove-newline-indent-locs","remove-newline-indent-locs",-907383614,null),"target/public/cljs-out/prod/zprint/core.cljc",42,1,613,613,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"cvec","cvec",-1084309943,null)], null)),"Remove the debugging information on :indent and :newline style-vec\n  elements when doing :return-cvec? true.",(cljs.core.truth_(zprint.core.remove_newline_indent_locs)?zprint.core.remove_newline_indent_locs.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"czprint"),new cljs.core.Var(function(){return zprint.core.czprint;},new cljs.core.Symbol("zprint.core","czprint","zprint.core/czprint",2092050284,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword("doc","format","doc/format",-1306960374),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"czprint","czprint",1128013218,null),"target/public/cljs-out/prod/zprint/core.cljc",new cljs.core.Keyword(null,"markdown","markdown",1227225089),14,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"coll","coll",-1006698606,null),new cljs.core.Symbol(null,"rest","rest",398835108,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coll","coll",-1006698606,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"rest","rest",398835108,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,967,967,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coll","coll",-1006698606,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"rest","rest",398835108,null)], null)),"Take coll, a Clojure data structure or a string containing Clojure code or\n  data, format it readably, and produce output to stdout containing ANSI \n  escapes to syntax color the output. Optional arguments: \n\n      (czprint coll <numeric-width>)\n      (czprint coll <numeric-width> <options-map>)\n      (czprint coll <options-map>)\n\n  If coll is a string containing Clojure source:\n\n        (czprint coll {:parse-string? true})\n\n      (czprint nil :help)    ; for more information\n      (czprint nil :explain) ; to see the current options-map",(cljs.core.truth_(zprint.core.czprint)?zprint.core.czprint.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"process-rest-options"),new cljs.core.Var(function(){return zprint.core.process_rest_options;},new cljs.core.Symbol("zprint.core","process-rest-options","zprint.core/process-rest-options",262611688,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"process-rest-options","process-rest-options",3331874,null),"target/public/cljs-out/prod/zprint/core.cljc",36,1,431,431,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"full-options","full-options",-1090670161,null),new cljs.core.Symbol(null,"internal-options","internal-options",-1218153435,null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"width-or-options","width-or-options",1278021575,null),new cljs.core.Symbol(null,"options","options",1740170016,null)], null)], null)),"Take some internal-options and the & rest of a zprint/czprint\n  call and figure out the options and width and all of that, but\n  stop short of integrating these values into the existing options\n  that show up with (get-options). Note that internal-options MUST\n  NOT be a full options-map.  It needs to be just the options that\n  have been requested for this invocation.  In addition, internal-options\n  must be simple (i.e., no styles or whatever), since this routine\n  merged rest-options with internal-options without using one of\n  the validate routines that does all of the complex merging activity.\n  Does auto-width if that is requested, and determines if there are\n  'special-options', which may short circuit the other options\n  processing.  Returns [special-option rest-options]",(cljs.core.truth_(zprint.core.process_rest_options)?zprint.core.process_rest_options.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"zipper?"),new cljs.core.Var(function(){return zprint.core.zipper_QMARK_;},new cljs.core.Symbol("zprint.core","zipper?","zprint.core/zipper?",1007731483,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"zipper?","zipper?",579259685,null),"target/public/cljs-out/prod/zprint/core.cljc",23,1,301,301,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"z","z",851004344,null)], null)),"Is this a zipper?",(cljs.core.truth_(zprint.core.zipper_QMARK_)?zprint.core.zipper_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*default-cache-dir*"),new cljs.core.Var(function(){return zprint.core._STAR_default_cache_dir_STAR_;},new cljs.core.Symbol("zprint.core","*default-cache-dir*","zprint.core/*default-cache-dir*",1879156860,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"*default-cache-dir*","*default-cache-dir*",1787715494,null),"target/public/cljs-out/prod/zprint/core.cljc",44,1,true,144,144,cljs.core.List.EMPTY,null,(cljs.core.truth_(zprint.core._STAR_default_cache_dir_STAR_)?zprint.core._STAR_default_cache_dir_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*cache-path*"),new cljs.core.Var(function(){return zprint.core._STAR_cache_path_STAR_;},new cljs.core.Symbol("zprint.core","*cache-path*","zprint.core/*cache-path*",-161937607,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"*cache-path*","*cache-path*",215162311,null),"target/public/cljs-out/prod/zprint/core.cljc",37,1,true,118,118,cljs.core.List.EMPTY,null,(cljs.core.truth_(zprint.core._STAR_cache_path_STAR_)?zprint.core._STAR_cache_path_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"zprint"),new cljs.core.Var(function(){return zprint.core.zprint;},new cljs.core.Symbol("zprint.core","zprint","zprint.core/zprint",-1579582087,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword("doc","format","doc/format",-1306960374),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"zprint","zprint",-1153210617,null),"target/public/cljs-out/prod/zprint/core.cljc",new cljs.core.Keyword(null,"markdown","markdown",1227225089),13,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"coll","coll",-1006698606,null),new cljs.core.Symbol(null,"rest","rest",398835108,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coll","coll",-1006698606,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"rest","rest",398835108,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,944,944,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coll","coll",-1006698606,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"rest","rest",398835108,null)], null)),"Take coll, a Clojure data structure or a string containing Clojure code or\n  data, format it readably, and output to stdout. Additional optional \n  arguments: \n\n      (zprint coll <numeric-width>)\n      (zprint coll <numeric-width> <options-map>)\n      (zprint coll <options-map>)\n\n  If coll is a string containing Clojure source::\n\n        (zprint coll {:parse-string? true})\n\n      (zprint nil :help)    ; for more information\n      (zprint nil :explain) ; to see the current options-map",(cljs.core.truth_(zprint.core.zprint)?zprint.core.zprint.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"append-hvec-str"),new cljs.core.Var(function(){return zprint.core.append_hvec_str;},new cljs.core.Symbol("zprint.core","append-hvec-str","zprint.core/append-hvec-str",2085211698,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"append-hvec-str","append-hvec-str",2077489352,null),"target/public/cljs-out/prod/zprint/core.cljc",31,1,1112,1112,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"options","options",1740170016,null),new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"hvec-or-str","hvec-or-str",-1007349382,null)], null)),"Given a vector containing a hiccup-vec or a string, append a\n  string into that hiccup-vec or onto the string.",(cljs.core.truth_(zprint.core.append_hvec_str)?zprint.core.append_hvec_str.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"range-vec"),new cljs.core.Var(function(){return zprint.core.range_vec;},new cljs.core.Symbol("zprint.core","range-vec","zprint.core/range-vec",1992865462,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"range-vec","range-vec",2103356744,null),"target/public/cljs-out/prod/zprint/core.cljc",25,1,596,596,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"v","v",1661996586,null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"start","start",1285322546,null),new cljs.core.Symbol(null,"end","end",1372345569,null)], null)], null)),"Select the elements from start to end from a vector.",(cljs.core.truth_(zprint.core.range_vec)?zprint.core.range_vec.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ensure-hvec-str-ends-with-nl"),new cljs.core.Var(function(){return zprint.core.ensure_hvec_str_ends_with_nl;},new cljs.core.Symbol("zprint.core","ensure-hvec-str-ends-with-nl","zprint.core/ensure-hvec-str-ends-with-nl",-212112012,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"ensure-hvec-str-ends-with-nl","ensure-hvec-str-ends-with-nl",164456202,null),"target/public/cljs-out/prod/zprint/core.cljc",44,1,1124,1124,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"options","options",1740170016,null),new cljs.core.Symbol(null,"hvec-or-str","hvec-or-str",-1007349382,null)], null)),"Given a vector containing a hiccuup-vec or a string, check whether it\n  ends with a nl and if it doesn't, add one.",(cljs.core.truth_(zprint.core.ensure_hvec_str_ends_with_nl)?zprint.core.ensure_hvec_str_ends_with_nl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"find-eol-blanks"),new cljs.core.Var(function(){return zprint.core.find_eol_blanks;},new cljs.core.Symbol("zprint.core","find-eol-blanks","zprint.core/find-eol-blanks",1591598573,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"find-eol-blanks","find-eol-blanks",1370216363,null),"target/public/cljs-out/prod/zprint/core.cljc",31,1,638,638,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"options","options",1740170016,null),new cljs.core.Symbol(null,"ssv","ssv",-412010248,null),new cljs.core.Symbol(null,"coll","coll",-1006698606,null),new cljs.core.Symbol(null,"no-respect?","no-respect?",27484882,null)], null)),"Given a str-style-vec, find all of the places where the end of a line\n  has blanks.  Output the tuples that have that and the ones that \n  follow. If no-respect? is truthy, then only do this if no :respect-nl,\n  :respect-bl, or indent-only are set.",(cljs.core.truth_(zprint.core.find_eol_blanks)?zprint.core.find_eol_blanks.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*default-url-cache-secs*"),new cljs.core.Var(function(){return zprint.core._STAR_default_url_cache_secs_STAR_;},new cljs.core.Symbol("zprint.core","*default-url-cache-secs*","zprint.core/*default-url-cache-secs*",876523810,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"*default-url-cache-secs*","*default-url-cache-secs*",-817578132,null),"target/public/cljs-out/prod/zprint/core.cljc",49,1,true,148,148,cljs.core.List.EMPTY,null,(cljs.core.truth_(zprint.core._STAR_default_url_cache_secs_STAR_)?zprint.core._STAR_default_url_cache_secs_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"determine-options"),new cljs.core.Var(function(){return zprint.core.determine_options;},new cljs.core.Symbol("zprint.core","determine-options","zprint.core/determine-options",-1897437790,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"determine-options","determine-options",-1285726228,null),"target/public/cljs-out/prod/zprint/core.cljc",33,1,482,482,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"full-options","full-options",-1090670161,null),new cljs.core.Symbol(null,"rest-options","rest-options",833043934,null)], null)),"Take some options from a zprint/czprint call and merge them into\n  the actual options. Note that rest-options MUST NOT be a full\n  options-map.  It needs to be just the options that have been\n  requested for this invocation.  Returns actual-options",(cljs.core.truth_(zprint.core.determine_options)?zprint.core.determine_options.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*default-cache-loc*"),new cljs.core.Var(function(){return zprint.core._STAR_default_cache_loc_STAR_;},new cljs.core.Symbol("zprint.core","*default-cache-loc*","zprint.core/*default-cache-loc*",970444451,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"*default-cache-loc*","*default-cache-loc*",656527597,null),"target/public/cljs-out/prod/zprint/core.cljc",44,1,true,142,142,cljs.core.List.EMPTY,null,(cljs.core.truth_(zprint.core._STAR_default_cache_loc_STAR_)?zprint.core._STAR_default_cache_loc_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"zprint-str-internal"),new cljs.core.Var(function(){return zprint.core.zprint_str_internal;},new cljs.core.Symbol("zprint.core","zprint-str-internal","zprint.core/zprint-str-internal",-210862969,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"zprint-str-internal","zprint-str-internal",-300388019,null),"target/public/cljs-out/prod/zprint/core.cljc",35,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(3),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(3),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"full-options","full-options",-1090670161,null),new cljs.core.Symbol(null,"internal-options","internal-options",-1218153435,null),new cljs.core.Symbol(null,"coll","coll",-1006698606,null),new cljs.core.Symbol(null,"rest","rest",398835108,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"full-options","full-options",-1090670161,null),new cljs.core.Symbol(null,"internal-options","internal-options",-1218153435,null),new cljs.core.Symbol(null,"coll","coll",-1006698606,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"rest","rest",398835108,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,713,713,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"full-options","full-options",-1090670161,null),new cljs.core.Symbol(null,"internal-options","internal-options",-1218153435,null),new cljs.core.Symbol(null,"coll","coll",-1006698606,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"rest","rest",398835108,null)], null)),"Take a zipper or string and pretty print with fzprint, \n  output a str (or possibly a structure with {:output {:format :hiccup}}.  \n  Key :color? is false by default, and should\n  be set to true in internal-options to make things colored.\n  Special processing for :parse-string-all?, with\n  not only a different code path, but a different default for \n  :parse {:interpose nil} to {:interpose true}",(cljs.core.truth_(zprint.core.zprint_str_internal)?zprint.core.zprint_str_internal.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"zprint*"),new cljs.core.Var(function(){return zprint.core.zprint_STAR_;},new cljs.core.Symbol("zprint.core","zprint*","zprint.core/zprint*",-642345337,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"zprint*","zprint*",-751002803,null),"target/public/cljs-out/prod/zprint/core.cljc",23,1,506,506,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coll","coll",-1006698606,null),new cljs.core.Symbol(null,"special-option","special-option",-1557824044,null),new cljs.core.Symbol(null,"actual-options","actual-options",407472782,null)], null)),"Basic setup for fzprint call, used by all top level fns. Third\n  argument can be either a number or a map, and if the third is a\n  number, the fourth (if any) must be a map.  The internal-options\n  is either an empty map or {:parse-string? true} for the -fn\n  functions, and cannot be overridden by an options argument. Returns\n  a vector with the style-vec and the options used: \n  [<style-vec> options line-ending]",(cljs.core.truth_(zprint.core.zprint_STAR_)?zprint.core.zprint_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"process-multiple-forms"),new cljs.core.Var(function(){return zprint.core.process_multiple_forms;},new cljs.core.Symbol("zprint.core","process-multiple-forms","zprint.core/process-multiple-forms",-226684489,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"process-multiple-forms","process-multiple-forms",-54056979,null),"target/public/cljs-out/prod/zprint/core.cljc",38,1,1515,1515,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"full-options","full-options",-1090670161,null),new cljs.core.Symbol(null,"rest-options","rest-options",833043934,null),new cljs.core.Symbol(null,"zprint-fn","zprint-fn",1070494014,null),new cljs.core.Symbol(null,"zprint-specifier","zprint-specifier",-1789811006,null),new cljs.core.Symbol(null,"forms","forms",-608443419,null)], null)),"Take a sequence of forms (which are zippers of the elements of\n  a file or a string), and not only format them for output but also\n  handle comments containing ;!zprint that affect the options-map\n  throughout the processing. Returns [out-str error-vec final-options]",(cljs.core.truth_(zprint.core.process_multiple_forms)?zprint.core.process_multiple_forms.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"any-respect?"),new cljs.core.Var(function(){return zprint.core.any_respect_QMARK_;},new cljs.core.Symbol("zprint.core","any-respect?","zprint.core/any-respect?",34051701,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"any-respect?","any-respect?",427647151,null),"target/public/cljs-out/prod/zprint/core.cljc",28,1,619,619,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"caller","caller",365168648,null),new cljs.core.Symbol(null,"options","options",1740170016,null)], null)),"If any of :respect-nl?, :respect-bl?, or :indent-only? are set, return\n  true.",(cljs.core.truth_(zprint.core.any_respect_QMARK_)?zprint.core.any_respect_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"spaces?"),new cljs.core.Var(function(){return zprint.core.spaces_QMARK_;},new cljs.core.Symbol("zprint.core","spaces?","zprint.core/spaces?",-578271991,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"spaces?","spaces?",-686661809,null),"target/public/cljs-out/prod/zprint/core.cljc",23,1,1093,1093,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"If a string is all spaces and has at least one space, \n  returns the count of the spaces, otherwise nil.",(cljs.core.truth_(zprint.core.spaces_QMARK_)?zprint.core.spaces_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"zprint-str"),new cljs.core.Var(function(){return zprint.core.zprint_str;},new cljs.core.Symbol("zprint.core","zprint-str","zprint.core/zprint-str",-537215701,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword("doc","format","doc/format",-1306960374),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"zprint-str","zprint-str",-999246991,null),"target/public/cljs-out/prod/zprint/core.cljc",new cljs.core.Keyword(null,"markdown","markdown",1227225089),17,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"coll","coll",-1006698606,null),new cljs.core.Symbol(null,"rest","rest",398835108,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coll","coll",-1006698606,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"rest","rest",398835108,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,907,907,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coll","coll",-1006698606,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"rest","rest",398835108,null)], null)),"Take coll, a Clojure data structure or a string containing Clojure code or\n  data, format it readably, and output a str. Additional optional arguments: \n\n      (zprint-str coll <numeric-width>)\n      (zprint-str coll <numeric-width> <options-map>)\n      (zprint-str coll <options-map>)\n\n  If coll is a string containing Clojure source:\n\n        (zprint-str coll {:parse-string? true})\n\n      (zprint nil :help)    ; for more information\n      (zprint nil :explain) ; to see the current options-map",(cljs.core.truth_(zprint.core.zprint_str)?zprint.core.zprint_str.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"prepend-hvec-str"),new cljs.core.Var(function(){return zprint.core.prepend_hvec_str;},new cljs.core.Symbol("zprint.core","prepend-hvec-str","zprint.core/prepend-hvec-str",963525436,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"prepend-hvec-str","prepend-hvec-str",1066414322,null),"target/public/cljs-out/prod/zprint/core.cljc",32,1,1100,1100,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"options","options",1740170016,null),new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"hvec-or-str","hvec-or-str",-1007349382,null)], null)),"Given a vector containing a hiccup-vec or a string, prepend a\n  string into that hiccup-vec or onto the string.",(cljs.core.truth_(zprint.core.prepend_hvec_str)?zprint.core.prepend_hvec_str.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"check-output-format-string"),new cljs.core.Var(function(){return zprint.core.check_output_format_string;},new cljs.core.Symbol("zprint.core","check-output-format-string","zprint.core/check-output-format-string",-659939336,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"check-output-format-string","check-output-format-string",-768597582,null),"target/public/cljs-out/prod/zprint/core.cljc",42,1,682,682,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"options","options",1740170016,null)], null)),"If this is a function which can only handle :string output (as opposed\n  to :hiccup or :html) because it prints it directly, check to ensure that\n  :string is indeed the output format.  If it is not, throw an exception.",(cljs.core.truth_(zprint.core.check_output_format_string)?zprint.core.check_output_format_string.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"real-le"),new cljs.core.Var(function(){return zprint.core.real_le;},new cljs.core.Symbol("zprint.core","real-le","zprint.core/real-le",-874437476,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"real-le","real-le",-1049944238,null),"target/public/cljs-out/prod/zprint/core.cljc",23,1,665,665,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"real-le-length","real-le-length",-833274799,null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"element","element",-680416020,null)], null)], null)),"Look at a single element in a style-vec string, and if the string at\n  first is itself a string, then if the length is over \n  :output :real-le-length, then replace any escaped line endings\n  with 'real' line endings.",(cljs.core.truth_(zprint.core.real_le)?zprint.core.real_le.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"set-options!"),new cljs.core.Var(function(){return zprint.core.set_options_BANG_;},new cljs.core.Symbol("zprint.core","set-options!","zprint.core/set-options!",-777661234,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"set-options!","set-options!",-614736140,null),"target/public/cljs-out/prod/zprint/core.cljc",19,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"new-options","new-options",461043296,null),new cljs.core.Symbol(null,"doc-str","doc-str",-737992272,null),new cljs.core.Symbol(null,"op-options","op-options",-1492193659,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"new-options","new-options",461043296,null),new cljs.core.Symbol(null,"doc-str","doc-str",-737992272,null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"new-options","new-options",461043296,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"new-options","new-options",461043296,null),new cljs.core.Symbol(null,"doc-str","doc-str",-737992272,null),new cljs.core.Symbol(null,"op-options","op-options",-1492193659,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"new-options","new-options",461043296,null),new cljs.core.Symbol(null,"doc-str","doc-str",-737992272,null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"new-options","new-options",461043296,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,123,123,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"new-options","new-options",461043296,null),new cljs.core.Symbol(null,"doc-str","doc-str",-737992272,null),new cljs.core.Symbol(null,"op-options","op-options",-1492193659,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"new-options","new-options",461043296,null),new cljs.core.Symbol(null,"doc-str","doc-str",-737992272,null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"new-options","new-options",461043296,null)], null)),"There is an internal options-map containing default values which is \n  configured from ~/.zprintrc when zprint is first used.  set-options! \n  is used to alter the internal options-map by specifying individual\n  options-map values that will be merged into the internal options-map.\n  Typically, it is called with only new-options, an options map.  If\n  you add a doc-str, that will show up when the internal options map\n  is displayed with (czprint nil :explain).  The argument op-options\n  is an options map that is only examined if the call to set-options!\n  is the first use of the zprint library.  If it is, operational options\n  are examined in the op-options map to see where to find formatting\n  options.  Operational options are those such as cwd-zprintrc? and\n  search-config?.",(cljs.core.truth_(zprint.core.set_options_BANG_)?zprint.core.set_options_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*default-url-cache*"),new cljs.core.Var(function(){return zprint.core._STAR_default_url_cache_STAR_;},new cljs.core.Symbol("zprint.core","*default-url-cache*","zprint.core/*default-url-cache*",1043436274,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"*default-url-cache*","*default-url-cache*",883657912,null),"target/public/cljs-out/prod/zprint/core.cljc",44,1,true,146,146,cljs.core.List.EMPTY,null,(cljs.core.truth_(zprint.core._STAR_default_url_cache_STAR_)?zprint.core._STAR_default_url_cache_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"rewrite-clj-zipper?"),new cljs.core.Var(function(){return zprint.core.rewrite_clj_zipper_QMARK_;},new cljs.core.Symbol("zprint.core","rewrite-clj-zipper?","zprint.core/rewrite-clj-zipper?",-593153006,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"rewrite-clj-zipper?","rewrite-clj-zipper?",-971816232,null),"target/public/cljs-out/prod/zprint/core.cljc",35,1,290,290,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"z","z",851004344,null)], null)),"Is this a rewrite-clj zipper node? A surprisingly hard thing to \n  determine, actually.",(cljs.core.truth_(zprint.core.rewrite_clj_zipper_QMARK_)?zprint.core.rewrite_clj_zipper_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"parse-string-all-options"),new cljs.core.Var(function(){return zprint.core.parse_string_all_options;},new cljs.core.Symbol("zprint.core","parse-string-all-options","zprint.core/parse-string-all-options",1547832351,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"parse-string-all-options","parse-string-all-options",584582745,null),"target/public/cljs-out/prod/zprint/core.cljc",40,1,568,568,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"options","options",1740170016,null)], null)),"Handle options for :parse-string-all?, by removing\n  :parse-string-all? and changing the default for \n  :parse {:interpose } to be true instead of nil.",(cljs.core.truth_(zprint.core.parse_string_all_options)?zprint.core.parse_string_all_options.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dzprint-zipper"),new cljs.core.Var(function(){return zprint.core.dzprint_zipper;},new cljs.core.Symbol("zprint.core","dzprint-zipper","zprint.core/dzprint-zipper",182969731,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"dzprint-zipper","dzprint-zipper",276425689,null),"target/public/cljs-out/prod/zprint/core.cljc",30,1,336,336,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"options","options",1740170016,null),new cljs.core.Symbol(null,"coll","coll",-1006698606,null)], null)),"If we are running in zipper mode, do an internal version of zprint\n  on a structure.",(cljs.core.truth_(zprint.core.dzprint_zipper)?zprint.core.dzprint_zipper.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dzprint-sexpr"),new cljs.core.Var(function(){return zprint.core.dzprint_sexpr;},new cljs.core.Symbol("zprint.core","dzprint-sexpr","zprint.core/dzprint-sexpr",-502005028,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"dzprint-sexpr","dzprint-sexpr",-391246822,null),"target/public/cljs-out/prod/zprint/core.cljc",29,1,351,351,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"options","options",1740170016,null),new cljs.core.Symbol(null,"coll","coll",-1006698606,null)], null)),"If we are running in zipper mode, do an internal version of zprint\n  on a structure.",(cljs.core.truth_(zprint.core.dzprint_sexpr)?zprint.core.dzprint_sexpr.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"get-zipper"),new cljs.core.Var(function(){return zprint.core.get_zipper;},new cljs.core.Symbol("zprint.core","get-zipper","zprint.core/get-zipper",919490053,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"get-zipper","get-zipper",209205339,null),"target/public/cljs-out/prod/zprint/core.cljc",26,1,306,306,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"options","options",1740170016,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"If it is a zipper or a string, return a zipper, else return nil.\n  Always trims whitespace (including nl) off of strings before parsing!\n  Returns [zloc line-ending-str], with line-ending-str nil if x was a\n  zipper.",(cljs.core.truth_(zprint.core.get_zipper)?zprint.core.get_zipper.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"remove-shebang"),new cljs.core.Var(function(){return zprint.core.remove_shebang;},new cljs.core.Symbol("zprint.core","remove-shebang","zprint.core/remove-shebang",1317901693,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"remove-shebang","remove-shebang",1342415803,null),"target/public/cljs-out/prod/zprint/core.cljc",30,1,1450,1450,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"filestring","filestring",-565667290,null)], null)),"Given a string which contains multiple lines, check the first line to\n  see if it begins with a shebang, that is: #!.  If it does, remove that\n  line and return it as the shebang, else shebang is nil.  Returns:\n  [shebang filestring]",(cljs.core.truth_(zprint.core.remove_shebang)?zprint.core.remove_shebang.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"configure-all!"),new cljs.core.Var(function(){return zprint.core.configure_all_BANG_;},new cljs.core.Symbol("zprint.core","configure-all!","zprint.core/configure-all!",-1816599962,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"configure-all!","configure-all!",-383574948,null),"target/public/cljs-out/prod/zprint/core.cljc",21,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),1,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),1,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"op-options","op-options",-1492193659,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"op-options","op-options",-1492193659,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,279,279,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"op-options","op-options",-1492193659,null)], null)),"Do external configuration regardless of whether or not it already\n  been done, replacing any existing configuration.  Returns nil if successful,\n  a vector of errors if not.",(cljs.core.truth_(zprint.core.configure_all_BANG_)?zprint.core.configure_all_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"remove-loc"),new cljs.core.Var(function(){return zprint.core.remove_loc;},new cljs.core.Symbol("zprint.core","remove-loc","zprint.core/remove-loc",322317274,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"remove-loc","remove-loc",364658076,null),"target/public/cljs-out/prod/zprint/core.cljc",26,1,601,601,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tuple","tuple",1167864243,null)], null)),"If this is a :newline, :indent, :whitespace, or :right, trim off the \n  4th thing.",(cljs.core.truth_(zprint.core.remove_loc)?zprint.core.remove_loc.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"load-options!"),new cljs.core.Var(function(){return zprint.core.load_options_BANG_;},new cljs.core.Symbol("zprint.core","load-options!","zprint.core/load-options!",-131270254,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"load-options!","load-options!",-21564836,null),"target/public/cljs-out/prod/zprint/core.cljc",29,1,150,150,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"options","options",1740170016,null),new cljs.core.Symbol(null,"url","url",1916828573,null)], null)),"Loads options from url, expecting an edn options map that will be passed\n  to set-options! Valid options will be cached in \n  (str (:cache-loc (:cache options)) \n       File/separator \n       (:cache-dir (:cache options))\n       File/separator\n       (:url (:cache-dir (:cache options))))\n  for (:cache-secs (:url options)) or 5 minutes if :cache-secs is nil.\n  If [:cache :location] contains a \".\", it is considered a Java property, \n  else it is considered an environment variable.  In either case, \n  it is looked up.\n  Invalid options will throw an Exception.\n  HTTP urls will have the Cache-Control max-age parameter respected,\n  falling back to the Expires header if set.",(cljs.core.truth_(zprint.core.load_options_BANG_)?zprint.core.load_options_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"fzprint-style"),new cljs.core.Var(function(){return zprint.core.fzprint_style;},new cljs.core.Symbol("zprint.core","fzprint-style","zprint.core/fzprint-style",-1309809948,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"fzprint-style","fzprint-style",-1223680802,null),"target/public/cljs-out/prod/zprint/core.cljc",29,1,367,367,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coll","coll",-1006698606,null),new cljs.core.Symbol(null,"options","options",1740170016,null)], null)),"Do a basic zprint and output the style vector and the options used for\n  further processing: [<style-vec> options line-ending]",(cljs.core.truth_(zprint.core.fzprint_style)?zprint.core.fzprint_style.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"interpose-w-comment"),new cljs.core.Var(function(){return zprint.core.interpose_w_comment;},new cljs.core.Symbol("zprint.core","interpose-w-comment","zprint.core/interpose-w-comment",-1460202759,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"zprint.core","zprint.core",-1065004726,null),new cljs.core.Symbol(null,"interpose-w-comment","interpose-w-comment",-1823662913,null),"target/public/cljs-out/prod/zprint/core.cljc",35,1,1397,1397,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"options","options",1740170016,null),new cljs.core.Symbol(null,"seq-of-strings","seq-of-strings",-611799954,null),new cljs.core.Symbol(null,"interpose-str","interpose-str",375036612,null)], null)),"A comment aware interpose. It takes either a seq of strings or\n  a vector of hiccup output.  It leaves out empty strings, and\n  interposes interpose-str between everything, except after a\n  comment.  After a comment, it will interpose a single newline if\n  there were no blank lines between the comment and a following\n  comment. If there was any number of blank lines after a comment,\n  it will interpose interpose-comment-str before the next (non-comment)\n  element. Output is a vector of strings.",(cljs.core.truth_(zprint.core.interpose_w_comment)?zprint.core.interpose_w_comment.cljs$lang$test:null)]))], null)], true))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"ajax.core","ajax.core",-1363316958,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.EMPTY)),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"ajax.protocols","ajax.protocols",-1931495210,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"-status"),new cljs.core.Var(function(){return ajax.protocols._status;},new cljs.core.Symbol("ajax.protocols","-status","ajax.protocols/-status",1796009845,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("ajax.protocols","AjaxResponse","ajax.protocols/AjaxResponse",631008080,null),new cljs.core.Symbol(null,"ajax.protocols","ajax.protocols",-1931495210,null),new cljs.core.Symbol(null,"-status","-status",432393696,null),"target/public/cljs-out/prod/ajax/protocols.cljc",11,1,15,17,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),"Returns the HTTP Status of the response as an integer.",(cljs.core.truth_(ajax.protocols._status)?ajax.protocols._status.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"AjaxImpl"),new cljs.core.Var(function(){return ajax.protocols.AjaxImpl;},new cljs.core.Symbol("ajax.protocols","AjaxImpl","ajax.protocols/AjaxImpl",-222016146,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol-symbol","protocol-symbol",1279552198),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"protocol-info","protocol-info",1471745843),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"sigs","sigs",-1653119622),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"jsdoc","jsdoc",1745183516),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"ajax.protocols","ajax.protocols",-1931495210,null),new cljs.core.Symbol(null,"AjaxImpl","AjaxImpl",-1064590623,null),"target/public/cljs-out/prod/ajax/protocols.cljc",22,1,3,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"methods","methods",453930866),new cljs.core.PersistentArrayMap(null, 1, [cljs.core.with_meta(new cljs.core.Symbol(null,"-js-ajax-request","-js-ajax-request",-1245730529,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Makes an actual ajax request.  All parameters except opts\n     are in JS format.  Should return an AjaxRequest."], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"request","request",-881481046,null),new cljs.core.Symbol(null,"handler","handler",1444934915,null)], null)], null)], null)], null),3,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"-js-ajax-request","-js-ajax-request",1408705240),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"-js-ajax-request","-js-ajax-request",-1245730529,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"request","request",-881481046,null),new cljs.core.Symbol(null,"handler","handler",1444934915,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Makes an actual ajax request.  All parameters except opts\n     are in JS format.  Should return an AjaxRequest."], null)], null),cljs.core.List.EMPTY,"An abstraction for a javascript class that implements\n   Ajax calls.",cljs.core.list("@interface"),(cljs.core.truth_(ajax.protocols.AjaxImpl)?ajax.protocols.AjaxImpl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"Interceptor"),new cljs.core.Var(function(){return ajax.protocols.Interceptor;},new cljs.core.Symbol("ajax.protocols","Interceptor","ajax.protocols/Interceptor",-1826726350,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol-symbol","protocol-symbol",1279552198),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"protocol-info","protocol-info",1471745843),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"sigs","sigs",-1653119622),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"jsdoc","jsdoc",1745183516),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"ajax.protocols","ajax.protocols",-1931495210,null),new cljs.core.Symbol(null,"Interceptor","Interceptor",-581468987,null),"target/public/cljs-out/prod/ajax/protocols.cljc",25,1,30,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"methods","methods",453930866),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.with_meta(new cljs.core.Symbol(null,"-process-request","-process-request",174245715,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Transforms the opts"], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"request","request",-881481046,null)], null)], null),cljs.core.with_meta(new cljs.core.Symbol(null,"-process-response","-process-response",1132248499,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Transforms the raw response (an implementation of AjaxResponse)"], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"response","response",572107335,null)], null)], null)], null)], null),30,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"-process-request","-process-request",-1466285812),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"-process-request","-process-request",174245715,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"request","request",-881481046,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Transforms the opts"], null),new cljs.core.Keyword(null,"-process-response","-process-response",-508283028),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"-process-response","-process-response",1132248499,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"response","response",572107335,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Transforms the raw response (an implementation of AjaxResponse)"], null)], null),cljs.core.List.EMPTY,"An abstraction for something that processes requests and responses.",cljs.core.list("@interface"),(cljs.core.truth_(ajax.protocols.Interceptor)?ajax.protocols.Interceptor.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"-abort"),new cljs.core.Var(function(){return ajax.protocols._abort;},new cljs.core.Symbol("ajax.protocols","-abort","ajax.protocols/-abort",-1646310224,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("ajax.protocols","AjaxRequest","ajax.protocols/AjaxRequest",-2103511614,null),new cljs.core.Symbol(null,"ajax.protocols","ajax.protocols",-1931495210,null),new cljs.core.Symbol(null,"-abort","-abort",-1020908729,null),"target/public/cljs-out/prod/ajax/protocols.cljc",10,1,10,12,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),"Aborts a running ajax request, if possible.",(cljs.core.truth_(ajax.protocols._abort)?ajax.protocols._abort.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"-status-text"),new cljs.core.Var(function(){return ajax.protocols._status_text;},new cljs.core.Symbol("ajax.protocols","-status-text","ajax.protocols/-status-text",416731867,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("ajax.protocols","AjaxResponse","ajax.protocols/AjaxResponse",631008080,null),new cljs.core.Symbol(null,"ajax.protocols","ajax.protocols",-1931495210,null),new cljs.core.Symbol(null,"-status-text","-status-text",-881856468,null),"target/public/cljs-out/prod/ajax/protocols.cljc",16,1,15,19,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),"Returns the HTTP Status Text of the response as a string.",(cljs.core.truth_(ajax.protocols._status_text)?ajax.protocols._status_text.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"-get-response-header"),new cljs.core.Var(function(){return ajax.protocols._get_response_header;},new cljs.core.Symbol("ajax.protocols","-get-response-header","ajax.protocols/-get-response-header",1557445456,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("ajax.protocols","AjaxResponse","ajax.protocols/AjaxResponse",631008080,null),new cljs.core.Symbol(null,"ajax.protocols","ajax.protocols",-1931495210,null),new cljs.core.Symbol(null,"-get-response-header","-get-response-header",-1843423027,null),"target/public/cljs-out/prod/ajax/protocols.cljc",24,1,15,25,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"header","header",1759972661,null)], null)),"Gets the specified response header (specified by a string) as a string.",(cljs.core.truth_(ajax.protocols._get_response_header)?ajax.protocols._get_response_header.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"AjaxResponse"),new cljs.core.Var(function(){return ajax.protocols.AjaxResponse;},new cljs.core.Symbol("ajax.protocols","AjaxResponse","ajax.protocols/AjaxResponse",631008080,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol-symbol","protocol-symbol",1279552198),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"protocol-info","protocol-info",1471745843),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"sigs","sigs",-1653119622),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"jsdoc","jsdoc",1745183516),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"ajax.protocols","ajax.protocols",-1931495210,null),new cljs.core.Symbol(null,"AjaxResponse","AjaxResponse",331565261,null),"target/public/cljs-out/prod/ajax/protocols.cljc",26,1,15,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"methods","methods",453930866),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.with_meta(new cljs.core.Symbol(null,"-status","-status",432393696,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Returns the HTTP Status of the response as an integer."], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)], null),cljs.core.with_meta(new cljs.core.Symbol(null,"-status-text","-status-text",-881856468,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Returns the HTTP Status Text of the response as a string."], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)], null),cljs.core.with_meta(new cljs.core.Symbol(null,"-get-all-headers","-get-all-headers",1720483729,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Returns all headers as a map."], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)], null),cljs.core.with_meta(new cljs.core.Symbol(null,"-body","-body",1844439543,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Returns the response body as a string or as type specified in response-format such as a blob or arraybuffer."], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)], null),cljs.core.with_meta(new cljs.core.Symbol(null,"-get-response-header","-get-response-header",-1843423027,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Gets the specified response header (specified by a string) as a string."], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"header","header",1759972661,null)], null)], null),cljs.core.with_meta(new cljs.core.Symbol(null,"-was-aborted","-was-aborted",-525730189,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Was the response aborted."], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)], null)], null)], null),15,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"-status","-status",-1208137831),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"-status","-status",432393696,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Returns the HTTP Status of the response as an integer."], null),new cljs.core.Keyword(null,"-status-text","-status-text",1772579301),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"-status-text","-status-text",-881856468,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Returns the HTTP Status Text of the response as a string."], null),new cljs.core.Keyword(null,"-get-all-headers","-get-all-headers",79952202),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"-get-all-headers","-get-all-headers",1720483729,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Returns all headers as a map."], null),new cljs.core.Keyword(null,"-body","-body",203908016),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"-body","-body",1844439543,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Returns the response body as a string or as type specified in response-format such as a blob or arraybuffer."], null),new cljs.core.Keyword(null,"-get-response-header","-get-response-header",811012742),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"-get-response-header","-get-response-header",-1843423027,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"header","header",1759972661,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Gets the specified response header (specified by a string) as a string."], null),new cljs.core.Keyword(null,"-was-aborted","-was-aborted",2128705580),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"-was-aborted","-was-aborted",-525730189,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Was the response aborted."], null)], null),cljs.core.List.EMPTY,"An abstraction for an ajax response.",cljs.core.list("@interface"),(cljs.core.truth_(ajax.protocols.AjaxResponse)?ajax.protocols.AjaxResponse.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->Response"),new cljs.core.Var(function(){return ajax.protocols.__GT_Response;},new cljs.core.Symbol("ajax.protocols","->Response","ajax.protocols/->Response",841058802,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"internal-ctor","internal-ctor",937392560),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"ajax.protocols","ajax.protocols",-1931495210,null),new cljs.core.Symbol(null,"->Response","->Response",-1059558801,null),"target/public/cljs-out/prod/ajax/protocols.cljc",20,1,true,new cljs.core.Keyword(null,"positional","positional",-203580463),37,37,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"status","status",-357266886,null),new cljs.core.Symbol(null,"body","body",-408674142,null),new cljs.core.Symbol(null,"status-text","status-text",-193703951,null),new cljs.core.Symbol(null,"headers","headers",805501398,null),new cljs.core.Symbol(null,"was-aborted","was-aborted",-479553301,null)], null)),"Positional factory function for ajax.protocols/Response.",(cljs.core.truth_(ajax.protocols.__GT_Response)?ajax.protocols.__GT_Response.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"AjaxRequest"),new cljs.core.Var(function(){return ajax.protocols.AjaxRequest;},new cljs.core.Symbol("ajax.protocols","AjaxRequest","ajax.protocols/AjaxRequest",-2103511614,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol-symbol","protocol-symbol",1279552198),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"protocol-info","protocol-info",1471745843),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"sigs","sigs",-1653119622),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"jsdoc","jsdoc",1745183516),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"ajax.protocols","ajax.protocols",-1931495210,null),new cljs.core.Symbol(null,"AjaxRequest","AjaxRequest",-749331663,null),"target/public/cljs-out/prod/ajax/protocols.cljc",25,1,10,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"methods","methods",453930866),new cljs.core.PersistentArrayMap(null, 1, [cljs.core.with_meta(new cljs.core.Symbol(null,"-abort","-abort",-1020908729,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Aborts a running ajax request, if possible."], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)], null)], null)], null),10,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"-abort","-abort",1633527040),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"-abort","-abort",-1020908729,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Aborts a running ajax request, if possible."], null)], null),cljs.core.List.EMPTY,"An abstraction for a running ajax request.",cljs.core.list("@interface"),(cljs.core.truth_(ajax.protocols.AjaxRequest)?ajax.protocols.AjaxRequest.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"-get-all-headers"),new cljs.core.Var(function(){return ajax.protocols._get_all_headers;},new cljs.core.Symbol("ajax.protocols","-get-all-headers","ajax.protocols/-get-all-headers",885726468,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("ajax.protocols","AjaxResponse","ajax.protocols/AjaxResponse",631008080,null),new cljs.core.Symbol(null,"ajax.protocols","ajax.protocols",-1931495210,null),new cljs.core.Symbol(null,"-get-all-headers","-get-all-headers",1720483729,null),"target/public/cljs-out/prod/ajax/protocols.cljc",20,1,15,21,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),"Returns all headers as a map.",(cljs.core.truth_(ajax.protocols._get_all_headers)?ajax.protocols._get_all_headers.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"-process-response"),new cljs.core.Var(function(){return ajax.protocols._process_response;},new cljs.core.Symbol("ajax.protocols","-process-response","ajax.protocols/-process-response",-1861773252,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("ajax.protocols","Interceptor","ajax.protocols/Interceptor",-1826726350,null),new cljs.core.Symbol(null,"ajax.protocols","ajax.protocols",-1931495210,null),new cljs.core.Symbol(null,"-process-response","-process-response",1132248499,null),"target/public/cljs-out/prod/ajax/protocols.cljc",21,1,30,34,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"response","response",572107335,null)], null)),"Transforms the raw response (an implementation of AjaxResponse)",(cljs.core.truth_(ajax.protocols._process_response)?ajax.protocols._process_response.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"-was-aborted"),new cljs.core.Var(function(){return ajax.protocols._was_aborted;},new cljs.core.Symbol("ajax.protocols","-was-aborted","ajax.protocols/-was-aborted",846125318,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("ajax.protocols","AjaxResponse","ajax.protocols/AjaxResponse",631008080,null),new cljs.core.Symbol(null,"ajax.protocols","ajax.protocols",-1931495210,null),new cljs.core.Symbol(null,"-was-aborted","-was-aborted",-525730189,null),"target/public/cljs-out/prod/ajax/protocols.cljc",16,1,15,27,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),"Was the response aborted.",(cljs.core.truth_(ajax.protocols._was_aborted)?ajax.protocols._was_aborted.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"-process-request"),new cljs.core.Var(function(){return ajax.protocols._process_request;},new cljs.core.Symbol("ajax.protocols","-process-request","ajax.protocols/-process-request",1412030694,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("ajax.protocols","Interceptor","ajax.protocols/Interceptor",-1826726350,null),new cljs.core.Symbol(null,"ajax.protocols","ajax.protocols",-1931495210,null),new cljs.core.Symbol(null,"-process-request","-process-request",174245715,null),"target/public/cljs-out/prod/ajax/protocols.cljc",20,1,30,32,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"request","request",-881481046,null)], null)),"Transforms the opts",(cljs.core.truth_(ajax.protocols._process_request)?ajax.protocols._process_request.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"-body"),new cljs.core.Var(function(){return ajax.protocols._body;},new cljs.core.Symbol("ajax.protocols","-body","ajax.protocols/-body",1042863200,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("ajax.protocols","AjaxResponse","ajax.protocols/AjaxResponse",631008080,null),new cljs.core.Symbol(null,"ajax.protocols","ajax.protocols",-1931495210,null),new cljs.core.Symbol(null,"-body","-body",1844439543,null),"target/public/cljs-out/prod/ajax/protocols.cljc",9,1,15,23,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),"Returns the response body as a string or as type specified in response-format such as a blob or arraybuffer.",(cljs.core.truth_(ajax.protocols._body)?ajax.protocols._body.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"map->Response"),new cljs.core.Var(function(){return ajax.protocols.map__GT_Response;},new cljs.core.Symbol("ajax.protocols","map->Response","ajax.protocols/map->Response",-1383875025,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"internal-ctor","internal-ctor",937392560),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"ajax.protocols","ajax.protocols",-1931495210,null),new cljs.core.Symbol(null,"map->Response","map->Response",-600272678,null),"target/public/cljs-out/prod/ajax/protocols.cljc",20,1,true,new cljs.core.Keyword(null,"map","map",1371690461),37,37,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"G__26015","G__26015",-1144643068,null)], null)),"Factory function for ajax.protocols/Response, taking a map of keywords to field values.",(cljs.core.truth_(ajax.protocols.map__GT_Response)?ajax.protocols.map__GT_Response.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"-js-ajax-request"),new cljs.core.Var(function(){return ajax.protocols._js_ajax_request;},new cljs.core.Symbol("ajax.protocols","-js-ajax-request","ajax.protocols/-js-ajax-request",-1008251742,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("ajax.protocols","AjaxImpl","ajax.protocols/AjaxImpl",-222016146,null),new cljs.core.Symbol(null,"ajax.protocols","ajax.protocols",-1931495210,null),new cljs.core.Symbol(null,"-js-ajax-request","-js-ajax-request",-1245730529,null),"target/public/cljs-out/prod/ajax/protocols.cljc",20,1,3,6,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"request","request",-881481046,null),new cljs.core.Symbol(null,"handler","handler",1444934915,null)], null)),"Makes an actual ajax request.  All parameters except opts\n     are in JS format.  Should return an AjaxRequest.",(cljs.core.truth_(ajax.protocols._js_ajax_request)?ajax.protocols._js_ajax_request.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"Response"),new cljs.core.Var(function(){return ajax.protocols.Response;},new cljs.core.Symbol("ajax.protocols","Response","ajax.protocols/Response",-35790424,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"ajax.protocols","ajax.protocols",-1931495210,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/ajax/protocols.cljc",new cljs.core.Keyword(null,"line","line",212345235),37,new cljs.core.Keyword(null,"column","column",2078222095),12,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"Response","Response",798294591,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(ajax.protocols.Response)?ajax.protocols.Response.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null)], null))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"uri"),new cljs.core.Var(function(){return cognitect.transit.uri;},new cljs.core.Symbol("cognitect.transit","uri","cognitect.transit/uri",1188822495,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"uri","uri",865819680,null),"target/public/cljs-out/prod/cognitect/transit.cljs",10,1,356,356,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Construct a URI from a string.",(cljs.core.truth_(cognitect.transit.uri)?cognitect.transit.uri.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"uuid"),new cljs.core.Var(function(){return cognitect.transit.uuid;},new cljs.core.Symbol("cognitect.transit","uuid","cognitect.transit/uuid",-1163159585,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"uuid","uuid",-504564192,null),"target/public/cljs-out/prod/cognitect/transit.cljs",11,1,366,366,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Construct a UUID from a string.",(cljs.core.truth_(cognitect.transit.uuid)?cognitect.transit.uuid.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"KeywordHandler"),new cljs.core.Var(function(){return cognitect.transit.KeywordHandler;},new cljs.core.Symbol("cognitect.transit","KeywordHandler","cognitect.transit/KeywordHandler",-1580347647,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/cognitect/transit.cljs",new cljs.core.Keyword(null,"line","line",212345235),142,new cljs.core.Keyword(null,"column","column",2078222095),19,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"KeywordHandler","KeywordHandler",1460546818,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cognitect.transit.KeywordHandler)?cognitect.transit.KeywordHandler.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"VectorHandler"),new cljs.core.Var(function(){return cognitect.transit.VectorHandler;},new cljs.core.Symbol("cognitect.transit","VectorHandler","cognitect.transit/VectorHandler",-446632122,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/cognitect/transit.cljs",new cljs.core.Keyword(null,"line","line",212345235),178,new cljs.core.Keyword(null,"column","column",2078222095),19,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"VectorHandler","VectorHandler",270747971,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cognitect.transit.VectorHandler)?cognitect.transit.VectorHandler.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"write-meta"),new cljs.core.Var(function(){return cognitect.transit.write_meta;},new cljs.core.Symbol("cognitect.transit","write-meta","cognitect.transit/write-meta",-859929338,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"write-meta","write-meta",-1711397117,null),"target/public/cljs-out/prod/cognitect/transit.cljs",17,1,412,412,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"For :transform. Will write any metadata present on the value.",(cljs.core.truth_(cognitect.transit.write_meta)?cognitect.transit.write_meta.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"bigint?"),new cljs.core.Var(function(){return cognitect.transit.bigint_QMARK_;},new cljs.core.Symbol("cognitect.transit","bigint?","cognitect.transit/bigint?",-880258087,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"bigint?","bigint?",-1865894876,null),"target/public/cljs-out/prod/cognitect/transit.cljs",14,1,341,341,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if x is a transit big integer value, false otherwise.",(cljs.core.truth_(cognitect.transit.bigint_QMARK_)?cognitect.transit.bigint_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"MapBuilder"),new cljs.core.Var(function(){return cognitect.transit.MapBuilder;},new cljs.core.Symbol("cognitect.transit","MapBuilder","cognitect.transit/MapBuilder",-372249783,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/cognitect/transit.cljs",new cljs.core.Keyword(null,"line","line",212345235),89,new cljs.core.Keyword(null,"column","column",2078222095),19,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"MapBuilder","MapBuilder",1586449732,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cognitect.transit.MapBuilder)?cognitect.transit.MapBuilder.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->UUIDHandler"),new cljs.core.Var(function(){return cognitect.transit.__GT_UUIDHandler;},new cljs.core.Symbol("cognitect.transit","->UUIDHandler","cognitect.transit/->UUIDHandler",-297131710,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("cognitect.transit","Object","cognitect.transit/Object",1759080071,null),"null"], null), null),new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"->UUIDHandler","->UUIDHandler",1426817861,null),"target/public/cljs-out/prod/cognitect/transit.cljs",30,1,new cljs.core.Keyword(null,"positional","positional",-203580463),187,187,cljs.core.list(cljs.core.PersistentVector.EMPTY),null,"Positional factory function for cognitect.transit/UUIDHandler.",(cljs.core.truth_(cognitect.transit.__GT_UUIDHandler)?cognitect.transit.__GT_UUIDHandler.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->MapBuilder"),new cljs.core.Var(function(){return cognitect.transit.__GT_MapBuilder;},new cljs.core.Symbol("cognitect.transit","->MapBuilder","cognitect.transit/->MapBuilder",1365275110,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("cognitect.transit","Object","cognitect.transit/Object",1759080071,null),"null"], null), null),new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"->MapBuilder","->MapBuilder",-2069769243,null),"target/public/cljs-out/prod/cognitect/transit.cljs",29,1,new cljs.core.Keyword(null,"positional","positional",-203580463),89,89,cljs.core.list(cljs.core.PersistentVector.EMPTY),null,"Positional factory function for cognitect.transit/MapBuilder.",(cljs.core.truth_(cognitect.transit.__GT_MapBuilder)?cognitect.transit.__GT_MapBuilder.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->KeywordHandler"),new cljs.core.Var(function(){return cognitect.transit.__GT_KeywordHandler;},new cljs.core.Symbol("cognitect.transit","->KeywordHandler","cognitect.transit/->KeywordHandler",1752555947,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("cognitect.transit","Object","cognitect.transit/Object",1759080071,null),"null"], null), null),new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"->KeywordHandler","->KeywordHandler",-1279982682,null),"target/public/cljs-out/prod/cognitect/transit.cljs",33,1,new cljs.core.Keyword(null,"positional","positional",-203580463),142,142,cljs.core.list(cljs.core.PersistentVector.EMPTY),null,"Positional factory function for cognitect.transit/KeywordHandler.",(cljs.core.truth_(cognitect.transit.__GT_KeywordHandler)?cognitect.transit.__GT_KeywordHandler.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"binary"),new cljs.core.Var(function(){return cognitect.transit.binary;},new cljs.core.Symbol("cognitect.transit","binary","cognitect.transit/binary",1562233440,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"binary","binary",-161700761,null),"target/public/cljs-out/prod/cognitect/transit.cljs",13,1,376,376,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Construct a transit binary value. s should be base64 encoded\n   string.",(cljs.core.truth_(cognitect.transit.binary)?cognitect.transit.binary.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"t_cognitect$transit26357"),new cljs.core.Var(function(){return cognitect.transit.t_cognitect$transit26357;},new cljs.core.Symbol("cognitect.transit","t_cognitect$transit26357","cognitect.transit/t_cognitect$transit26357",-399650150,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/cognitect/transit.cljs",new cljs.core.Keyword(null,"line","line",212345235),302,new cljs.core.Keyword(null,"column","column",2078222095),6,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_cognitect$transit26357","t_cognitect$transit26357",-2022929177,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cognitect.transit.t_cognitect$transit26357)?cognitect.transit.t_cognitect$transit26357.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->SymbolHandler"),new cljs.core.Var(function(){return cognitect.transit.__GT_SymbolHandler;},new cljs.core.Symbol("cognitect.transit","->SymbolHandler","cognitect.transit/->SymbolHandler",-825845558,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("cognitect.transit","Object","cognitect.transit/Object",1759080071,null),"null"], null), null),new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"->SymbolHandler","->SymbolHandler",327547591,null),"target/public/cljs-out/prod/cognitect/transit.cljs",32,1,new cljs.core.Keyword(null,"positional","positional",-203580463),148,148,cljs.core.list(cljs.core.PersistentVector.EMPTY),null,"Positional factory function for cognitect.transit/SymbolHandler.",(cljs.core.truth_(cognitect.transit.__GT_SymbolHandler)?cognitect.transit.__GT_SymbolHandler.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"write-handler"),new cljs.core.Var(function(){return cognitect.transit.write_handler;},new cljs.core.Symbol("cognitect.transit","write-handler","cognitect.transit/write-handler",-2147442390,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"write-handler","write-handler",-692059351,null),"target/public/cljs-out/prod/cognitect/transit.cljs",20,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),4,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),4,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag-fn","tag-fn",242055482,null),new cljs.core.Symbol(null,"rep-fn","rep-fn",-1724891035,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag-fn","tag-fn",242055482,null),new cljs.core.Symbol(null,"rep-fn","rep-fn",-1724891035,null),new cljs.core.Symbol(null,"str-rep-fn","str-rep-fn",-1179615016,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag-fn","tag-fn",242055482,null),new cljs.core.Symbol(null,"rep-fn","rep-fn",-1724891035,null),new cljs.core.Symbol(null,"str-rep-fn","str-rep-fn",-1179615016,null),new cljs.core.Symbol(null,"verbose-handler-fn","verbose-handler-fn",547340594,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag-fn","tag-fn",242055482,null),new cljs.core.Symbol(null,"rep-fn","rep-fn",-1724891035,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag-fn","tag-fn",242055482,null),new cljs.core.Symbol(null,"rep-fn","rep-fn",-1724891035,null),new cljs.core.Symbol(null,"str-rep-fn","str-rep-fn",-1179615016,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag-fn","tag-fn",242055482,null),new cljs.core.Symbol(null,"rep-fn","rep-fn",-1724891035,null),new cljs.core.Symbol(null,"str-rep-fn","str-rep-fn",-1179615016,null),new cljs.core.Symbol(null,"verbose-handler-fn","verbose-handler-fn",547340594,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,293,293,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag-fn","tag-fn",242055482,null),new cljs.core.Symbol(null,"rep-fn","rep-fn",-1724891035,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag-fn","tag-fn",242055482,null),new cljs.core.Symbol(null,"rep-fn","rep-fn",-1724891035,null),new cljs.core.Symbol(null,"str-rep-fn","str-rep-fn",-1179615016,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag-fn","tag-fn",242055482,null),new cljs.core.Symbol(null,"rep-fn","rep-fn",-1724891035,null),new cljs.core.Symbol(null,"str-rep-fn","str-rep-fn",-1179615016,null),new cljs.core.Symbol(null,"verbose-handler-fn","verbose-handler-fn",547340594,null)], null)),"Creates a transit write handler whose tag, rep,\n   stringRep, and verboseWriteHandler methods\n   invoke the provided fns.",(cljs.core.truth_(cognitect.transit.write_handler)?cognitect.transit.write_handler.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"VectorBuilder"),new cljs.core.Var(function(){return cognitect.transit.VectorBuilder;},new cljs.core.Symbol("cognitect.transit","VectorBuilder","cognitect.transit/VectorBuilder",785500623,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/cognitect/transit.cljs",new cljs.core.Keyword(null,"line","line",212345235),96,new cljs.core.Keyword(null,"column","column",2078222095),19,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"VectorBuilder","VectorBuilder",2073111498,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cognitect.transit.VectorBuilder)?cognitect.transit.VectorBuilder.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"WithMeta"),new cljs.core.Var(function(){return cognitect.transit.WithMeta;},new cljs.core.Symbol("cognitect.transit","WithMeta","cognitect.transit/WithMeta",-1095606482,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/cognitect/transit.cljs",new cljs.core.Keyword(null,"line","line",212345235),193,new cljs.core.Keyword(null,"column","column",2078222095),19,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"WithMeta","WithMeta",-437046997,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cognitect.transit.WithMeta)?cognitect.transit.WithMeta.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"read"),new cljs.core.Var(function(){return cognitect.transit.read;},new cljs.core.Symbol("cognitect.transit","read","cognitect.transit/read",-553970069,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"read","read",-1514377108,null),"target/public/cljs-out/prod/cognitect/transit.cljs",11,1,136,136,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"str","str",-1564826950,null)], null)),"Read a transit encoded string into ClojureScript values given a \n   transit reader.",(cljs.core.truth_(cognitect.transit.read)?cognitect.transit.read.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"uri?"),new cljs.core.Var(function(){return cognitect.transit.uri_QMARK_;},new cljs.core.Symbol("cognitect.transit","uri?","cognitect.transit/uri?",-986646735,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"uri?","uri?",2029475116,null),"target/public/cljs-out/prod/cognitect/transit.cljs",11,1,361,361,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if x is a transit URI value, false otherwise.",(cljs.core.truth_(cognitect.transit.uri_QMARK_)?cognitect.transit.uri_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"binary?"),new cljs.core.Var(function(){return cognitect.transit.binary_QMARK_;},new cljs.core.Symbol("cognitect.transit","binary?","cognitect.transit/binary?",-2048423264,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"binary?","binary?",1051126957,null),"target/public/cljs-out/prod/cognitect/transit.cljs",14,1,382,382,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if x is a transit binary value, false otherwise.",(cljs.core.truth_(cognitect.transit.binary_QMARK_)?cognitect.transit.binary_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->MapHandler"),new cljs.core.Var(function(){return cognitect.transit.__GT_MapHandler;},new cljs.core.Symbol("cognitect.transit","->MapHandler","cognitect.transit/->MapHandler",-1968578688,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("cognitect.transit","Object","cognitect.transit/Object",1759080071,null),"null"], null), null),new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"->MapHandler","->MapHandler",568884621,null),"target/public/cljs-out/prod/cognitect/transit.cljs",29,1,new cljs.core.Keyword(null,"positional","positional",-203580463),163,163,cljs.core.list(cljs.core.PersistentVector.EMPTY),null,"Positional factory function for cognitect.transit/MapHandler.",(cljs.core.truth_(cognitect.transit.__GT_MapHandler)?cognitect.transit.__GT_MapHandler.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"MapHandler"),new cljs.core.Var(function(){return cognitect.transit.MapHandler;},new cljs.core.Symbol("cognitect.transit","MapHandler","cognitect.transit/MapHandler",1736554611,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/cognitect/transit.cljs",new cljs.core.Keyword(null,"line","line",212345235),163,new cljs.core.Keyword(null,"column","column",2078222095),19,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"MapHandler","MapHandler",-1136204178,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cognitect.transit.MapHandler)?cognitect.transit.MapHandler.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"bigint"),new cljs.core.Var(function(){return cognitect.transit.bigint;},new cljs.core.Symbol("cognitect.transit","bigint","cognitect.transit/bigint",-1903375219,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"bigint","bigint",-70405490,null),"target/public/cljs-out/prod/cognitect/transit.cljs",13,1,336,336,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Construct a big integer from a string.",(cljs.core.truth_(cognitect.transit.bigint)?cognitect.transit.bigint.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"bigdec?"),new cljs.core.Var(function(){return cognitect.transit.bigdec_QMARK_;},new cljs.core.Symbol("cognitect.transit","bigdec?","cognitect.transit/bigdec?",-357557069,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"bigdec?","bigdec?",-1074728274,null),"target/public/cljs-out/prod/cognitect/transit.cljs",14,1,351,351,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if x is a transit big decimal value, false otherwise.",(cljs.core.truth_(cognitect.transit.bigdec_QMARK_)?cognitect.transit.bigdec_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"SetHandler"),new cljs.core.Var(function(){return cognitect.transit.SetHandler;},new cljs.core.Symbol("cognitect.transit","SetHandler","cognitect.transit/SetHandler",-1515377038,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/cognitect/transit.cljs",new cljs.core.Keyword(null,"line","line",212345235),169,new cljs.core.Keyword(null,"column","column",2078222095),19,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"SetHandler","SetHandler",275631217,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cognitect.transit.SetHandler)?cognitect.transit.SetHandler.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"SymbolHandler"),new cljs.core.Var(function(){return cognitect.transit.SymbolHandler;},new cljs.core.Symbol("cognitect.transit","SymbolHandler","cognitect.transit/SymbolHandler",851574708,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/cognitect/transit.cljs",new cljs.core.Keyword(null,"line","line",212345235),148,new cljs.core.Keyword(null,"column","column",2078222095),19,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"SymbolHandler","SymbolHandler",-1676763727,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cognitect.transit.SymbolHandler)?cognitect.transit.SymbolHandler.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"tagged-value"),new cljs.core.Var(function(){return cognitect.transit.tagged_value;},new cljs.core.Symbol("cognitect.transit","tagged-value","cognitect.transit/tagged-value",1403542766,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"tagged-value","tagged-value",-110559503,null),"target/public/cljs-out/prod/cognitect/transit.cljs",19,1,312,312,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"rep","rep",413710963,null)], null)),"Construct a tagged value. tag must be a string and rep can\n   be any transit encodeable value.",(cljs.core.truth_(cognitect.transit.tagged_value)?cognitect.transit.tagged_value.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->ListHandler"),new cljs.core.Var(function(){return cognitect.transit.__GT_ListHandler;},new cljs.core.Symbol("cognitect.transit","->ListHandler","cognitect.transit/->ListHandler",1366677751,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("cognitect.transit","Object","cognitect.transit/Object",1759080071,null),"null"], null), null),new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"->ListHandler","->ListHandler",708228850,null),"target/public/cljs-out/prod/cognitect/transit.cljs",30,1,new cljs.core.Keyword(null,"positional","positional",-203580463),154,154,cljs.core.list(cljs.core.PersistentVector.EMPTY),null,"Positional factory function for cognitect.transit/ListHandler.",(cljs.core.truth_(cognitect.transit.__GT_ListHandler)?cognitect.transit.__GT_ListHandler.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->VectorHandler"),new cljs.core.Var(function(){return cognitect.transit.__GT_VectorHandler;},new cljs.core.Symbol("cognitect.transit","->VectorHandler","cognitect.transit/->VectorHandler",764056140,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("cognitect.transit","Object","cognitect.transit/Object",1759080071,null),"null"], null), null),new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"->VectorHandler","->VectorHandler",-792383405,null),"target/public/cljs-out/prod/cognitect/transit.cljs",32,1,new cljs.core.Keyword(null,"positional","positional",-203580463),178,178,cljs.core.list(cljs.core.PersistentVector.EMPTY),null,"Positional factory function for cognitect.transit/VectorHandler.",(cljs.core.truth_(cognitect.transit.__GT_VectorHandler)?cognitect.transit.__GT_VectorHandler.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"ListHandler"),new cljs.core.Var(function(){return cognitect.transit.ListHandler;},new cljs.core.Symbol("cognitect.transit","ListHandler","cognitect.transit/ListHandler",397689651,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/cognitect/transit.cljs",new cljs.core.Keyword(null,"line","line",212345235),154,new cljs.core.Keyword(null,"column","column",2078222095),19,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"ListHandler","ListHandler",-856350412,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cognitect.transit.ListHandler)?cognitect.transit.ListHandler.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->SetHandler"),new cljs.core.Var(function(){return cognitect.transit.__GT_SetHandler;},new cljs.core.Symbol("cognitect.transit","->SetHandler","cognitect.transit/->SetHandler",-1338245271,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("cognitect.transit","Object","cognitect.transit/Object",1759080071,null),"null"], null), null),new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"->SetHandler","->SetHandler",502995316,null),"target/public/cljs-out/prod/cognitect/transit.cljs",29,1,new cljs.core.Keyword(null,"positional","positional",-203580463),169,169,cljs.core.list(cljs.core.PersistentVector.EMPTY),null,"Positional factory function for cognitect.transit/SetHandler.",(cljs.core.truth_(cognitect.transit.__GT_SetHandler)?cognitect.transit.__GT_SetHandler.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->t_cognitect$transit26357"),new cljs.core.Var(function(){return cognitect.transit.__GT_t_cognitect$transit26357;},new cljs.core.Symbol("cognitect.transit","->t_cognitect$transit26357","cognitect.transit/->t_cognitect$transit26357",977800147,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("cognitect.transit","Object","cognitect.transit/Object",1759080071,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"->t_cognitect$transit26357","->t_cognitect$transit26357",-2138461740,null),"target/public/cljs-out/prod/cognitect/transit.cljs",true,6,new cljs.core.Keyword(null,"positional","positional",-203580463),302,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag-fn","tag-fn",242055482,null),new cljs.core.Symbol(null,"rep-fn","rep-fn",-1724891035,null),new cljs.core.Symbol(null,"str-rep-fn","str-rep-fn",-1179615016,null),new cljs.core.Symbol(null,"verbose-handler-fn","verbose-handler-fn",547340594,null),new cljs.core.Symbol(null,"meta26358","meta26358",2074363603,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for cognitect.transit/t_cognitect$transit26357.",(cljs.core.truth_(cognitect.transit.__GT_t_cognitect$transit26357)?cognitect.transit.__GT_t_cognitect$transit26357.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->WithMetaHandler"),new cljs.core.Var(function(){return cognitect.transit.__GT_WithMetaHandler;},new cljs.core.Symbol("cognitect.transit","->WithMetaHandler","cognitect.transit/->WithMetaHandler",1453356694,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("cognitect.transit","Object","cognitect.transit/Object",1759080071,null),"null"], null), null),new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"->WithMetaHandler","->WithMetaHandler",-471822187,null),"target/public/cljs-out/prod/cognitect/transit.cljs",34,1,new cljs.core.Keyword(null,"positional","positional",-203580463),195,195,cljs.core.list(cljs.core.PersistentVector.EMPTY),null,"Positional factory function for cognitect.transit/WithMetaHandler.",(cljs.core.truth_(cognitect.transit.__GT_WithMetaHandler)?cognitect.transit.__GT_WithMetaHandler.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"UUIDHandler"),new cljs.core.Var(function(){return cognitect.transit.UUIDHandler;},new cljs.core.Symbol("cognitect.transit","UUIDHandler","cognitect.transit/UUIDHandler",1281058600,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/cognitect/transit.cljs",new cljs.core.Keyword(null,"line","line",212345235),187,new cljs.core.Keyword(null,"column","column",2078222095),19,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"UUIDHandler","UUIDHandler",647676213,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cognitect.transit.UUIDHandler)?cognitect.transit.UUIDHandler.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->WithMeta"),new cljs.core.Var(function(){return cognitect.transit.__GT_WithMeta;},new cljs.core.Symbol("cognitect.transit","->WithMeta","cognitect.transit/->WithMeta",1409119445,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,cljs.core.PersistentHashSet.EMPTY,new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"->WithMeta","->WithMeta",238933718,null),"target/public/cljs-out/prod/cognitect/transit.cljs",27,1,new cljs.core.Keyword(null,"positional","positional",-203580463),193,193,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"value","value",1946509744,null),new cljs.core.Symbol(null,"meta","meta",-1154898805,null)], null)),null,"Positional factory function for cognitect.transit/WithMeta.",(cljs.core.truth_(cognitect.transit.__GT_WithMeta)?cognitect.transit.__GT_WithMeta.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"tagged-value?"),new cljs.core.Var(function(){return cognitect.transit.tagged_value_QMARK_;},new cljs.core.Symbol("cognitect.transit","tagged-value?","cognitect.transit/tagged-value?",1052600683,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"tagged-value?","tagged-value?",-772010122,null),"target/public/cljs-out/prod/cognitect/transit.cljs",20,1,318,318,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if x is a transit tagged value, false otherwise.",(cljs.core.truth_(cognitect.transit.tagged_value_QMARK_)?cognitect.transit.tagged_value_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"read-handler"),new cljs.core.Var(function(){return cognitect.transit.read_handler;},new cljs.core.Symbol("cognitect.transit","read-handler","cognitect.transit/read-handler",-523561611,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"read-handler","read-handler",1426618230,null),"target/public/cljs-out/prod/cognitect/transit.cljs",19,1,287,287,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"from-rep","from-rep",911750077,null)], null)),"Construct a read handler. Implemented as identity, exists primarily\n   for API compatiblity with transit-clj",(cljs.core.truth_(cognitect.transit.read_handler)?cognitect.transit.read_handler.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"write"),new cljs.core.Var(function(){return cognitect.transit.write;},new cljs.core.Symbol("cognitect.transit","write","cognitect.transit/write",432992816,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"write","write",-217117641,null),"target/public/cljs-out/prod/cognitect/transit.cljs",12,1,282,282,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"w","w",1994700528,null),new cljs.core.Symbol(null,"o","o",290524299,null)], null)),"Encode an object into a transit string given a transit writer.",(cljs.core.truth_(cognitect.transit.write)?cognitect.transit.write.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"integer?"),new cljs.core.Var(function(){return cognitect.transit.integer_QMARK_;},new cljs.core.Symbol("cognitect.transit","integer?","cognitect.transit/integer?",410331700,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"integer?","integer?",1303791671,null),"target/public/cljs-out/prod/cognitect/transit.cljs",15,1,330,330,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if x is an integer value between the 53bit and 64bit\n  range, false otherwise.",(cljs.core.truth_(cognitect.transit.integer_QMARK_)?cognitect.transit.integer_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"link?"),new cljs.core.Var(function(){return cognitect.transit.link_QMARK_;},new cljs.core.Symbol("cognitect.transit","link?","cognitect.transit/link?",-854777062,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"link?","link?",399360279,null),"target/public/cljs-out/prod/cognitect/transit.cljs",12,1,407,407,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if x a transit link value, false if otherwise.",(cljs.core.truth_(cognitect.transit.link_QMARK_)?cognitect.transit.link_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"integer"),new cljs.core.Var(function(){return cognitect.transit.integer;},new cljs.core.Symbol("cognitect.transit","integer","cognitect.transit/integer",-1862495722,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"integer","integer",1035809817,null),"target/public/cljs-out/prod/cognitect/transit.cljs",14,1,323,323,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Construct a transit integer value. Returns JavaScript number if\n  in the 53bit integer range, a goog.math.Long instance if above. s\n  may be a string or a JavaScript number.",(cljs.core.truth_(cognitect.transit.integer)?cognitect.transit.integer.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"WithMetaHandler"),new cljs.core.Var(function(){return cognitect.transit.WithMetaHandler;},new cljs.core.Symbol("cognitect.transit","WithMetaHandler","cognitect.transit/WithMetaHandler",719601882,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/cognitect/transit.cljs",new cljs.core.Keyword(null,"line","line",212345235),195,new cljs.core.Keyword(null,"column","column",2078222095),19,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"WithMetaHandler","WithMetaHandler",1965810393,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(cognitect.transit.WithMetaHandler)?cognitect.transit.WithMetaHandler.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"uuid?"),new cljs.core.Var(function(){return cognitect.transit.uuid_QMARK_;},new cljs.core.Symbol("cognitect.transit","uuid?","cognitect.transit/uuid?",2090537334,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"uuid?","uuid?",400077689,null),"target/public/cljs-out/prod/cognitect/transit.cljs",12,1,371,371,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if x is a transit UUID value, false otherwise.",(cljs.core.truth_(cognitect.transit.uuid_QMARK_)?cognitect.transit.uuid_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"bigdec"),new cljs.core.Var(function(){return cognitect.transit.bigdec;},new cljs.core.Symbol("cognitect.transit","bigdec","cognitect.transit/bigdec",-1068669122,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"bigdec","bigdec",-1634991813,null),"target/public/cljs-out/prod/cognitect/transit.cljs",13,1,346,346,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Construct a big decimal from a string.",(cljs.core.truth_(cognitect.transit.bigdec)?cognitect.transit.bigdec.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"writer"),new cljs.core.Var(function(){return cognitect.transit.writer;},new cljs.core.Symbol("cognitect.transit","writer","cognitect.transit/writer",-92501676,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"writer","writer",1362963291,null),"target/public/cljs-out/prod/cognitect/transit.cljs",13,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type","type",-1480165421,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type","type",-1480165421,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type","type",-1480165421,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type","type",-1480165421,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,202,202,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type","type",-1480165421,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type","type",-1480165421,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),"Return a transit writer. type maybe either :json or :json-verbose.\n  opts is a map with the following optional keys:\n\n    :handlers  - a map of type constructors to handler instances. Can optionally\n                 provide a :default write handler which will be used if no\n                 matching handler can be found.\n    :transform - a function of one argument returning a transformed value. Will\n                 be invoked on a value before it is written.",(cljs.core.truth_(cognitect.transit.writer)?cognitect.transit.writer.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"link"),new cljs.core.Var(function(){return cognitect.transit.link;},new cljs.core.Symbol("cognitect.transit","link","cognitect.transit/link",-1550542466,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"link","link",-128631941,null),"target/public/cljs-out/prod/cognitect/transit.cljs",11,1,398,398,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Construct a transit link value. x should be an IMap instance\n   containing at a minimum the following keys: :href, :rel. It\n   may optionall include :name, :render, and :prompt. :href must\n   be a transit URI, all other values are strings, and :render must\n   be either :image or :link.",(cljs.core.truth_(cognitect.transit.link)?cognitect.transit.link.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"quoted?"),new cljs.core.Var(function(){return cognitect.transit.quoted_QMARK_;},new cljs.core.Symbol("cognitect.transit","quoted?","cognitect.transit/quoted?",1137978331,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"quoted?","quoted?",-1189786148,null),"target/public/cljs-out/prod/cognitect/transit.cljs",14,1,393,393,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if x is a transit quoted value, false otherwise.",(cljs.core.truth_(cognitect.transit.quoted_QMARK_)?cognitect.transit.quoted_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->VectorBuilder"),new cljs.core.Var(function(){return cognitect.transit.__GT_VectorBuilder;},new cljs.core.Symbol("cognitect.transit","->VectorBuilder","cognitect.transit/->VectorBuilder",126677201,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("cognitect.transit","Object","cognitect.transit/Object",1759080071,null),"null"], null), null),new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"->VectorBuilder","->VectorBuilder",-1395910948,null),"target/public/cljs-out/prod/cognitect/transit.cljs",32,1,new cljs.core.Keyword(null,"positional","positional",-203580463),96,96,cljs.core.list(cljs.core.PersistentVector.EMPTY),null,"Positional factory function for cognitect.transit/VectorBuilder.",(cljs.core.truth_(cognitect.transit.__GT_VectorBuilder)?cognitect.transit.__GT_VectorBuilder.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"reader"),new cljs.core.Var(function(){return cognitect.transit.reader;},new cljs.core.Symbol("cognitect.transit","reader","cognitect.transit/reader",1051062779,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"reader","reader",1810192380,null),"target/public/cljs-out/prod/cognitect/transit.cljs",13,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type","type",-1480165421,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type","type",-1480165421,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type","type",-1480165421,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type","type",-1480165421,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,103,103,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type","type",-1480165421,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type","type",-1480165421,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),"Return a transit reader. type may be either :json or :json-verbose.\n   opts may be a map optionally containing a :handlers entry. The value\n   of :handlers should be map from string tag to a decoder function of one\n   argument which returns the in-memory representation of the semantic transit\n   value. If a :default handler is provided, it will be used when no matching\n   read handler can be found.",(cljs.core.truth_(cognitect.transit.reader)?cognitect.transit.reader.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"opts-merge"),new cljs.core.Var(function(){return cognitect.transit.opts_merge;},new cljs.core.Symbol("cognitect.transit","opts-merge","cognitect.transit/opts-merge",1413122650,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"opts-merge","opts-merge",-2089424803,null),"target/public/cljs-out/prod/cognitect/transit.cljs",26,1,83,83,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)),null,(cljs.core.truth_(cognitect.transit.opts_merge)?cognitect.transit.opts_merge.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"quoted"),new cljs.core.Var(function(){return cognitect.transit.quoted;},new cljs.core.Symbol("cognitect.transit","quoted","cognitect.transit/quoted",1698630392,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"cognitect.transit","cognitect.transit",-750660177,null),new cljs.core.Symbol(null,"quoted","quoted",-537090817,null),"target/public/cljs-out/prod/cognitect/transit.cljs",13,1,387,387,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Construct a quoted transit value. x should be a transit\n   encodeable value.",(cljs.core.truth_(cognitect.transit.quoted)?cognitect.transit.quoted.cljs$lang$test:null)]))], null)], true))),interactive_syntax.stdlib.state_injection.call(null,new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 29, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"load-session-storage"),new cljs.core.Var(function(){return alandipert.storage_atom.load_session_storage;},new cljs.core.Symbol("alandipert.storage-atom","load-session-storage","alandipert.storage-atom/load-session-storage",-1628793985,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Symbol(null,"load-session-storage","load-session-storage",-1434056768,null),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",27,1,110,110,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),null,(cljs.core.truth_(alandipert.storage_atom.load_session_storage)?alandipert.storage_atom.load_session_storage.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"->StorageBackend"),new cljs.core.Var(function(){return alandipert.storage_atom.__GT_StorageBackend;},new cljs.core.Symbol("alandipert.storage-atom","->StorageBackend","alandipert.storage-atom/->StorageBackend",-1145374044,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol("alandipert.storage-atom","IStorageBackend","alandipert.storage-atom/IStorageBackend",234839197,null),"null"], null), null),new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Symbol(null,"->StorageBackend","->StorageBackend",-685357279,null),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",24,1,new cljs.core.Keyword(null,"positional","positional",-203580463),22,22,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"store","store",-1142205747,null),new cljs.core.Symbol(null,"key","key",124488940,null)], null)),null,"Positional factory function for alandipert.storage-atom/StorageBackend.",(cljs.core.truth_(alandipert.storage_atom.__GT_StorageBackend)?alandipert.storage_atom.__GT_StorageBackend.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"local-storage"),new cljs.core.Var(function(){return alandipert.storage_atom.local_storage;},new cljs.core.Symbol("alandipert.storage-atom","local-storage","alandipert.storage-atom/local-storage",950972166,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Symbol(null,"local-storage","local-storage",339427459,null),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",20,1,120,120,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"atom","atom",1243487874,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),null,(cljs.core.truth_(alandipert.storage_atom.local_storage)?alandipert.storage_atom.local_storage.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"storage-delay"),new cljs.core.Var(function(){return alandipert.storage_atom.storage_delay;},new cljs.core.Symbol("alandipert.storage-atom","storage-delay","alandipert.storage-atom/storage-delay",-1686828574,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Symbol(null,"storage-delay","storage-delay",-1360986779,null),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",19,1,42,42,cljs.core.List.EMPTY,"Delay in ms before a change is committed to the local storage. If a\nnew change occurs before the time is elapsed, the old change is\ndiscarded an only the new one is committed.",(cljs.core.truth_(alandipert.storage_atom.storage_delay)?alandipert.storage_atom.storage_delay.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"-get"),new cljs.core.Var(function(){return alandipert.storage_atom._get;},new cljs.core.Symbol("alandipert.storage-atom","-get","alandipert.storage-atom/-get",1524347392,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("alandipert.storage-atom","IStorageBackend","alandipert.storage-atom/IStorageBackend",234839197,null),new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Symbol(null,"-get","-get",-1497971065,null),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",8,1,17,19,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"not-found","not-found",1011451547,null)], null)),null,(cljs.core.truth_(alandipert.storage_atom._get)?alandipert.storage_atom._get.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"remove-local-storage!"),new cljs.core.Var(function(){return alandipert.storage_atom.remove_local_storage_BANG_;},new cljs.core.Symbol("alandipert.storage-atom","remove-local-storage!","alandipert.storage-atom/remove-local-storage!",632945743,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Symbol(null,"remove-local-storage!","remove-local-storage!",2118478026,null),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",28,1,151,151,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),null,(cljs.core.truth_(alandipert.storage_atom.remove_local_storage_BANG_)?alandipert.storage_atom.remove_local_storage_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"link-storage"),new cljs.core.Var(function(){return alandipert.storage_atom.link_storage;},new cljs.core.Symbol("alandipert.storage-atom","link-storage","alandipert.storage-atom/link-storage",1840159086,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Symbol(null,"link-storage","link-storage",289475819,null),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",19,1,84,84,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"atom","atom",1243487874,null),new cljs.core.Symbol(null,"storage","storage",-787188258,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),null,(cljs.core.truth_(alandipert.storage_atom.link_storage)?alandipert.storage_atom.link_storage.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"store"),new cljs.core.Var(function(){return alandipert.storage_atom.store;},new cljs.core.Symbol("alandipert.storage-atom","store","alandipert.storage-atom/store",1866909504,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Symbol(null,"store","store",-1142205747,null),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",12,1,53,53,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"atom","atom",1243487874,null),new cljs.core.Symbol(null,"backend","backend",793042403,null)], null)),null,(cljs.core.truth_(alandipert.storage_atom.store)?alandipert.storage_atom.store.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"remove-html-storage!"),new cljs.core.Var(function(){return alandipert.storage_atom.remove_html_storage_BANG_;},new cljs.core.Symbol("alandipert.storage-atom","remove-html-storage!","alandipert.storage-atom/remove-html-storage!",-1786766295,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Symbol(null,"remove-html-storage!","remove-html-storage!",-1586699858,null),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",27,1,143,143,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"storage","storage",-787188258,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),"Remove key from storage and also trigger an event on the current\n  window so its atoms will be cleared as well.",(cljs.core.truth_(alandipert.storage_atom.remove_html_storage_BANG_)?alandipert.storage_atom.remove_html_storage_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"maybe-update-backend"),new cljs.core.Var(function(){return alandipert.storage_atom.maybe_update_backend;},new cljs.core.Symbol("alandipert.storage-atom","maybe-update-backend","alandipert.storage-atom/maybe-update-backend",1979250958,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Symbol(null,"maybe-update-backend","maybe-update-backend",-1369205359,null),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",27,1,68,68,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"atom","atom",1243487874,null),new cljs.core.Symbol(null,"storage","storage",-787188258,null),new cljs.core.Symbol(null,"k","k",-505765866,null),new cljs.core.Symbol(null,"default","default",-347290801,null),new cljs.core.Symbol(null,"e","e",-1273166571,null)], null)),null,(cljs.core.truth_(alandipert.storage_atom.maybe_update_backend)?alandipert.storage_atom.maybe_update_backend.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"transit-read-handlers"),new cljs.core.Var(function(){return alandipert.storage_atom.transit_read_handlers;},new cljs.core.Symbol("alandipert.storage-atom","transit-read-handlers","alandipert.storage-atom/transit-read-handlers",1391019633,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Symbol(null,"transit-read-handlers","transit-read-handlers",-1485641230,null),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",27,1,7,7,cljs.core.List.EMPTY,null,(cljs.core.truth_(alandipert.storage_atom.transit_read_handlers)?alandipert.storage_atom.transit_read_handlers.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"clear-html-storage!"),new cljs.core.Var(function(){return alandipert.storage_atom.clear_html_storage_BANG_;},new cljs.core.Symbol("alandipert.storage-atom","clear-html-storage!","alandipert.storage-atom/clear-html-storage!",1065989068,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Symbol(null,"clear-html-storage!","clear-html-storage!",1797069907,null),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",26,1,130,130,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"storage","storage",-787188258,null)], null)),"Clear storage and also trigger an event on the current window\n  so its atoms will be cleared as well.",(cljs.core.truth_(alandipert.storage_atom.clear_html_storage_BANG_)?alandipert.storage_atom.clear_html_storage_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"clear-local-storage!"),new cljs.core.Var(function(){return alandipert.storage_atom.clear_local_storage_BANG_;},new cljs.core.Symbol("alandipert.storage-atom","clear-local-storage!","alandipert.storage-atom/clear-local-storage!",-1816384020,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Symbol(null,"clear-local-storage!","clear-local-storage!",1192737139,null),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",27,1,137,137,cljs.core.list(cljs.core.PersistentVector.EMPTY),null,(cljs.core.truth_(alandipert.storage_atom.clear_local_storage_BANG_)?alandipert.storage_atom.clear_local_storage_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*storage-delay*"),new cljs.core.Var(function(){return alandipert.storage_atom._STAR_storage_delay_STAR_;},new cljs.core.Symbol("alandipert.storage-atom","*storage-delay*","alandipert.storage-atom/*storage-delay*",-1070737258,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Symbol(null,"*storage-delay*","*storage-delay*",-1799271661,null),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",31,1,true,48,48,cljs.core.List.EMPTY,null,(cljs.core.truth_(alandipert.storage_atom._STAR_storage_delay_STAR_)?alandipert.storage_atom._STAR_storage_delay_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"transit-write-handlers"),new cljs.core.Var(function(){return alandipert.storage_atom.transit_write_handlers;},new cljs.core.Symbol("alandipert.storage-atom","transit-write-handlers","alandipert.storage-atom/transit-write-handlers",-28582864,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Symbol(null,"transit-write-handlers","transit-write-handlers",-768127053,null),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",28,1,9,9,cljs.core.List.EMPTY,null,(cljs.core.truth_(alandipert.storage_atom.transit_write_handlers)?alandipert.storage_atom.transit_write_handlers.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"*watch-active*"),new cljs.core.Var(function(){return alandipert.storage_atom._STAR_watch_active_STAR_;},new cljs.core.Symbol("alandipert.storage-atom","*watch-active*","alandipert.storage-atom/*watch-active*",-1452160872,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Symbol(null,"*watch-active*","*watch-active*",-51609835,null),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",30,1,true,50,50,cljs.core.List.EMPTY,null,(cljs.core.truth_(alandipert.storage_atom._STAR_watch_active_STAR_)?alandipert.storage_atom._STAR_watch_active_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"load-html-storage"),new cljs.core.Var(function(){return alandipert.storage_atom.load_html_storage;},new cljs.core.Symbol("alandipert.storage-atom","load-html-storage","alandipert.storage-atom/load-html-storage",1857947764,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Symbol(null,"load-html-storage","load-html-storage",-1692031753,null),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",24,1,103,103,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"storage","storage",-787188258,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),null,(cljs.core.truth_(alandipert.storage_atom.load_html_storage)?alandipert.storage_atom.load_html_storage.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"html-storage"),new cljs.core.Var(function(){return alandipert.storage_atom.html_storage;},new cljs.core.Symbol("alandipert.storage-atom","html-storage","alandipert.storage-atom/html-storage",-443948842,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Symbol(null,"html-storage","html-storage",-1200262311,null),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",19,1,115,115,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"atom","atom",1243487874,null),new cljs.core.Symbol(null,"storage","storage",-787188258,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),null,(cljs.core.truth_(alandipert.storage_atom.html_storage)?alandipert.storage_atom.html_storage.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"load-local-storage"),new cljs.core.Var(function(){return alandipert.storage_atom.load_local_storage;},new cljs.core.Symbol("alandipert.storage-atom","load-local-storage","alandipert.storage-atom/load-local-storage",-286788935,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Symbol(null,"load-local-storage","load-local-storage",-2104467910,null),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",25,1,107,107,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),null,(cljs.core.truth_(alandipert.storage_atom.load_local_storage)?alandipert.storage_atom.load_local_storage.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"StorageBackend"),new cljs.core.Var(function(){return alandipert.storage_atom.StorageBackend;},new cljs.core.Symbol("alandipert.storage-atom","StorageBackend","alandipert.storage-atom/StorageBackend",-1646318209,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",new cljs.core.Keyword(null,"line","line",212345235),22,new cljs.core.Keyword(null,"column","column",2078222095),10,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"StorageBackend","StorageBackend",-380977414,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(alandipert.storage_atom.StorageBackend)?alandipert.storage_atom.StorageBackend.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"clj->json"),new cljs.core.Var(function(){return alandipert.storage_atom.clj__GT_json;},new cljs.core.Symbol("alandipert.storage-atom","clj->json","alandipert.storage-atom/clj->json",1755885557,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Symbol(null,"clj->json","clj->json",-1136272518,null),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",16,1,11,11,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(alandipert.storage_atom.clj__GT_json)?alandipert.storage_atom.clj__GT_json.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"remove-session-storage!"),new cljs.core.Var(function(){return alandipert.storage_atom.remove_session_storage_BANG_;},new cljs.core.Symbol("alandipert.storage-atom","remove-session-storage!","alandipert.storage-atom/remove-session-storage!",690180827,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Symbol(null,"remove-session-storage!","remove-session-storage!",-577460644,null),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",30,1,154,154,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),null,(cljs.core.truth_(alandipert.storage_atom.remove_session_storage_BANG_)?alandipert.storage_atom.remove_session_storage_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"clear-session-storage!"),new cljs.core.Var(function(){return alandipert.storage_atom.clear_session_storage_BANG_;},new cljs.core.Symbol("alandipert.storage-atom","clear-session-storage!","alandipert.storage-atom/clear-session-storage!",-1132910694,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Symbol(null,"clear-session-storage!","clear-session-storage!",-2004511971,null),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",29,1,140,140,cljs.core.list(cljs.core.PersistentVector.EMPTY),null,(cljs.core.truth_(alandipert.storage_atom.clear_session_storage_BANG_)?alandipert.storage_atom.clear_session_storage_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"session-storage"),new cljs.core.Var(function(){return alandipert.storage_atom.session_storage;},new cljs.core.Symbol("alandipert.storage-atom","session-storage","alandipert.storage-atom/session-storage",-1557847837,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Symbol(null,"session-storage","session-storage",-683027298,null),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",22,1,124,124,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"atom","atom",1243487874,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),null,(cljs.core.truth_(alandipert.storage_atom.session_storage)?alandipert.storage_atom.session_storage.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"IStorageBackend"),new cljs.core.Var(function(){return alandipert.storage_atom.IStorageBackend;},new cljs.core.Symbol("alandipert.storage-atom","IStorageBackend","alandipert.storage-atom/IStorageBackend",234839197,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol-symbol","protocol-symbol",1279552198),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"protocol-info","protocol-info",1471745843),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"sigs","sigs",-1653119622),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"jsdoc","jsdoc",1745183516),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Symbol(null,"IStorageBackend","IStorageBackend",2037041950,null),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",29,1,17,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"methods","methods",453930866),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.with_meta(new cljs.core.Symbol(null,"-get","-get",-1497971065,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),null], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"not-found","not-found",1011451547,null)], null)], null),cljs.core.with_meta(new cljs.core.Symbol(null,"-commit!","-commit!",-975083329,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Commit value to storage at location."], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"value","value",1946509744,null)], null)], null)], null)], null),17,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"-get","-get",1156464704),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"-get","-get",-1497971065,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"not-found","not-found",1011451547,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),null], null),new cljs.core.Keyword(null,"-commit!","-commit!",1679352440),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"-commit!","-commit!",-975083329,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"value","value",1946509744,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Commit value to storage at location."], null)], null),cljs.core.List.EMPTY,"Represents a storage resource.",cljs.core.list("@interface"),(cljs.core.truth_(alandipert.storage_atom.IStorageBackend)?alandipert.storage_atom.IStorageBackend.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"debounce-factory"),new cljs.core.Var(function(){return alandipert.storage_atom.debounce_factory;},new cljs.core.Symbol("alandipert.storage-atom","debounce-factory","alandipert.storage-atom/debounce-factory",-831048,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Symbol(null,"debounce-factory","debounce-factory",726639679,null),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",23,1,32,32,cljs.core.list(cljs.core.PersistentVector.EMPTY),"Return a function that will always store a future call into the\n  same atom. If recalled before the time is elapsed, the call is\n  replaced without being executed.",(cljs.core.truth_(alandipert.storage_atom.debounce_factory)?alandipert.storage_atom.debounce_factory.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"json->clj"),new cljs.core.Var(function(){return alandipert.storage_atom.json__GT_clj;},new cljs.core.Symbol("alandipert.storage-atom","json->clj","alandipert.storage-atom/json->clj",-310334024,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Symbol(null,"json->clj","json->clj",-1055637441,null),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",16,1,14,14,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(alandipert.storage_atom.json__GT_clj)?alandipert.storage_atom.json__GT_clj.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"-commit!"),new cljs.core.Var(function(){return alandipert.storage_atom._commit_BANG_;},new cljs.core.Symbol("alandipert.storage-atom","-commit!","alandipert.storage-atom/-commit!",-1856177348,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("alandipert.storage-atom","IStorageBackend","alandipert.storage-atom/IStorageBackend",234839197,null),new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Symbol(null,"-commit!","-commit!",-975083329,null),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",12,1,17,20,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"value","value",1946509744,null)], null)),"Commit value to storage at location.",(cljs.core.truth_(alandipert.storage_atom._commit_BANG_)?alandipert.storage_atom._commit_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null,"dispatch-remove-event!"),new cljs.core.Var(function(){return alandipert.storage_atom.dispatch_remove_event_BANG_;},new cljs.core.Symbol("alandipert.storage-atom","dispatch-remove-event!","alandipert.storage-atom/dispatch-remove-event!",-1681372584,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"alandipert.storage-atom","alandipert.storage-atom",667255372,null),new cljs.core.Symbol(null,"dispatch-remove-event!","dispatch-remove-event!",1330962399,null),"target/public/cljs-out/prod/alandipert/storage_atom.cljs",29,1,90,90,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"storage","storage",-787188258,null),new cljs.core.Symbol(null,"key","key",124488940,null)], null)),"Create and dispatch a synthetic StorageEvent. Expects key to be a string.\n  An empty key indicates that all storage is being cleared.",(cljs.core.truth_(alandipert.storage_atom.dispatch_remove_event_BANG_)?alandipert.storage_atom.dispatch_remove_event_BANG_.cljs$lang$test:null)]))], null)], null)))),new cljs.core.Keyword(null,"js-deps","js-deps",-699101283),cljs.core.merge.call(null,new cljs.core.Keyword(null,"js-deps","js-deps",-699101283).cljs$core$IFn$_invoke$arity$1(base),new cljs.core.Keyword(null,"js-deps","js-deps",-699101283).cljs$core$IFn$_invoke$arity$1(builtins))], null);
});
interactive_syntax.stdlib.write_visr = (function interactive_syntax$stdlib$write_visr(var_args){
var args__22092__auto__ = [];
var len__22082__auto___58006 = arguments.length;
var i__22083__auto___58007 = (0);
while(true){
if((i__22083__auto___58007 < len__22082__auto___58006)){
args__22092__auto__.push((arguments[i__22083__auto___58007]));

var G__58008 = (i__22083__auto___58007 + (1));
i__22083__auto___58007 = G__58008;
continue;
} else {
}
break;
}

var argseq__22093__auto__ = ((((2) < args__22092__auto__.length))?(new cljs.core.IndexedSeq(args__22092__auto__.slice((2)),(0),null)):null);
return interactive_syntax.stdlib.write_visr.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__22093__auto__);
});

(interactive_syntax.stdlib.write_visr.cljs$core$IFn$_invoke$arity$variadic = (function (visr,state,p__58001){
var vec__58002 = p__58001;
var map__58005 = cljs.core.nth.call(null,vec__58002,(0),null);
var map__58005__$1 = cljs.core.__destructure_map.call(null,map__58005);
var show_visr = cljs.core.get.call(null,map__58005__$1,new cljs.core.Keyword(null,"show-visr","show-visr",1978675213));
var show_text = cljs.core.get.call(null,map__58005__$1,new cljs.core.Keyword(null,"show-text","show-text",464244146));
var show_visr__$1 = (function (){var or__20754__auto__ = show_visr;
if(cljs.core.truth_(or__20754__auto__)){
return or__20754__auto__;
} else {
return false;
}
})();
var show_text__$1 = (function (){var or__20754__auto__ = show_text;
if(cljs.core.truth_(or__20754__auto__)){
return or__20754__auto__;
} else {
return false;
}
})();
return ["^{:editor ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(visr)," :show-visr ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(show_visr__$1)," :show-text ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(show_text__$1),"}(",cljs.core.str.cljs$core$IFn$_invoke$arity$1(interactive_syntax.stdlib.visr__GT_elaborate.call(null,visr))," ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(state),")"].join('');
}));

(interactive_syntax.stdlib.write_visr.cljs$lang$maxFixedArity = (2));

/** @this {Function} */
(interactive_syntax.stdlib.write_visr.cljs$lang$applyTo = (function (seq57998){
var G__57999 = cljs.core.first.call(null,seq57998);
var seq57998__$1 = cljs.core.next.call(null,seq57998);
var G__58000 = cljs.core.first.call(null,seq57998__$1);
var seq57998__$2 = cljs.core.next.call(null,seq57998__$1);
var self__22067__auto__ = this;
return self__22067__auto__.cljs$core$IFn$_invoke$arity$variadic(G__57999,G__58000,seq57998__$2);
}));

interactive_syntax.stdlib.shadow_fs = new cljs.core.PersistentArrayMap(null, 5, ["clojure/template.clj",";   Copyright (c) Rich Hickey. All rights reserved.\n;   The use and distribution terms for this software are covered by the\n;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;   which can be found in the file epl-v10.html at the root of this distribution.\n;   By using this software in any fashion, you are agreeing to be bound by\n;   the terms of this license.\n;   You must not remove this notice, or any other, from this software.\n\n;;; template.clj - anonymous functions that pre-evaluate sub-expressions\n\n;; By Stuart Sierra\n;; June 23, 2009\n\n;; CHANGE LOG\n;;\n;; June 23, 2009: complete rewrite, eliminated _1,_2,... argument\n;; syntax\n;;\n;; January 20, 2009: added \"template?\" and checks for valid template\n;; expressions.\n;;\n;; December 15, 2008: first version\n\n\n(ns ^{:doc \"Macros that expand to repeated copies of a template expression.\"\n       :author \"Stuart Sierra\"}\n  clojure.template\n  (:require [clojure.walk :as walk]))\n\n(defn apply-template\n  \"For use in macros.  argv is an argument list, as in defn.  expr is\n  a quoted expression using the symbols in argv.  values is a sequence\n  of values to be used for the arguments.\n\n  apply-template will recursively replace argument symbols in expr\n  with their corresponding values, returning a modified expr.\n\n  Example: (apply-template '[x] '(+ x x) '[2])\n           ;=> (+ 2 2)\"\n  [argv expr values]\n  (assert (vector? argv))\n  (assert (every? symbol? argv))\n  (walk/postwalk-replace (zipmap argv values) expr))\n\n(defmacro do-template\n  \"Repeatedly copies expr (in a do block) for each group of arguments\n  in values.  values are automatically partitioned by the number of\n  arguments in argv, an argument vector as in defn.\n\n  Example: (macroexpand '(do-template [x y] (+ y x) 2 4 3 5))\n           ;=> (do (+ 4 2) (+ 5 3))\"\n  [argv expr & values]\n  (let [c (count argv)]\n    `(do ~@(map (fn [a] (apply-template argv expr a)) \n                (partition c values)))))\n","cljs/test.cljc",";   Copyright (c) Rich Hickey. All rights reserved.\n;   The use and distribution terms for this software are covered by the\n;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;   which can be found in the file epl-v10.html at the root of this distribution.\n;   By using this software in any fashion, you are agreeing to be bound by\n;   the terms of this license.\n;   You must not remove this notice, or any other, from this software.\n\n(ns cljs.test\n  #?(:cljs (:require-macros [clojure.template :as temp]))\n  (:require [cljs.env :as env]\n            [cljs.analyzer :as ana]\n            [cljs.analyzer.api :as ana-api]\n            #?(:clj [clojure.template :as temp])))\n\n;; =============================================================================\n;; Utilities for assertions\n\n(defn function?\n  \"Returns true if argument is a function or a symbol that resolves to\n  a function (not a macro).\"\n  [menv x]\n  (and (symbol? x) (:fn-var (ana-api/resolve menv x))))\n\n(defn assert-predicate\n  \"Returns generic assertion code for any functional predicate.  The\n  'expected' argument to 'report' will contains the original form, the\n  'actual' argument will contain the form with all its sub-forms\n  evaluated.  If the predicate returns false, the 'actual' form will\n  be wrapped in (not...).\"\n  [msg form]\n  (let [args (rest form)\n        pred (first form)\n        {:keys [file line end-line column end-column]} (meta form)]\n    `(let [values# (list ~@args)\n           result# (apply ~pred values#)]\n       (if result#\n         (report\n          {:type :pass, :message ~msg,\n           :file ~file :line ~line :end-line ~end-line :column ~column :end-column ~end-column\n           :expected '~form, :actual (cons '~pred values#)})\n         (report\n          {:type :fail, :message ~msg,\n           :file ~file :line ~line :end-line ~end-line :column ~column :end-column ~end-column\n           :expected '~form, :actual (list '~'not (cons '~pred values#))}))\n       result#)))\n\n(defn assert-any\n  \"Returns generic assertion code for any test, including macros, Java\n  method calls, or isolated symbols.\"\n  [msg form]\n  (let [{:keys [file line end-line column end-column]} (meta form)]\n    `(let [value# ~form]\n       (if value#\n         (report\n          {:type :pass, :message ~msg,\n           :file ~file :line ~line :end-line ~end-line :column ~column :end-column ~end-column\n           :expected '~form, :actual value#})\n         (report\n          {:type :fail, :message ~msg,\n           :file ~file :line ~line :end-line ~end-line :column ~column :end-column ~end-column\n           :expected '~form, :actual value#}))\n       value#)))\n\n(defmacro ^:private cljs-output-dir []\n  (let [{:keys [output-dir]} (ana-api/get-options)]\n    (or output-dir \"out\")))\n\n;; =============================================================================\n;; Assertion Methods\n\n;; You don't call these, but you can add methods to extend the 'is'\n;; macro.  These define different kinds of tests, based on the first\n;; symbol in the test expression.\n\n(defmulti assert-expr \n  (fn [menv msg form]\n    (cond\n      (nil? form) :always-fail\n      (seq? form) (first form)\n      :else :default)))\n\n(defmethod assert-expr :always-fail [menv msg form]\n  ;; nil test: always fail\n  (let [{:keys [file line end-line column end-column]} (meta form)]\n    `(report {:type :fail, :message ~msg\n              :file ~file :line ~line :end-line ~end-line :column ~column :end-column ~end-column})))\n\n(defmethod assert-expr :default [menv msg form]\n  (if (and (sequential? form)\n           (function? menv (first form)))\n    (assert-predicate msg form)\n    (assert-any msg form)))\n\n(defmethod assert-expr 'instance? [menv msg form]\n  ;; Test if x is an instance of y.\n  (let [{:keys [file line end-line column end-column]} (meta form)]\n    `(let [klass# ~(nth form 1)\n           object# ~(nth form 2)]\n       (let [result# (instance? klass# object#)]\n         (if result#\n           (report\n            {:type :pass, :message ~msg,\n             :file ~file :line ~line :end-line ~end-line :column ~column :end-column ~end-column\n             :expected '~form, :actual (type object#)})\n           (report\n            {:type :fail, :message ~msg,\n             :file ~file :line ~line :end-line ~end-line :column ~column :end-column ~end-column\n             :expected '~form, :actual (type object#)}))\n         result#))))\n\n(defmethod assert-expr 'thrown? [menv msg form]\n  ;; (is (thrown? c expr))\n  ;; Asserts that evaluating expr throws an exception of class c.\n  ;; Returns the exception thrown.\n  (let [{:keys [file line end-line column end-column]} (meta form)\n        klass (second form)\n        body (nthnext form 2)]\n    `(try\n       ~@body\n       (report\n        {:type :fail, :message ~msg,\n         :file ~file :line ~line :end-line ~end-line :column ~column :end-column ~end-column\n         :expected '~form, :actual nil})\n       (catch ~klass e#\n         (report\n          {:type :pass, :message ~msg,\n           :file ~file :line ~line :end-line ~end-line :column ~column :end-column ~end-column\n           :expected '~form, :actual e#})\n         e#))))\n\n(defmethod assert-expr 'thrown-with-msg? [menv msg form]\n  ;; (is (thrown-with-msg? c re expr))\n  ;; Asserts that evaluating expr throws an exception of class c.\n  ;; Also asserts that the message string of the exception matches\n  ;; (with re-find) the regular expression re.\n  (let [{:keys [file line end-line column end-column]} (meta form)\n        klass (nth form 1)\n        re (nth form 2)\n        body (nthnext form 3)]\n    `(try\n       ~@body\n       (report {:type :fail, :message ~msg, :expected '~form, :actual nil\n                :file ~file :line ~line :end-line ~end-line :column ~column :end-column ~end-column})\n       (catch ~klass e#\n         (let [m# (.-message e#)]\n           (if (re-find ~re m#)\n             (report\n              {:type :pass, :message ~msg,\n               :file ~file :line ~line :end-line ~end-line :column ~column :end-column ~end-column\n               :expected '~form, :actual e#})\n             (report\n              {:type :fail, :message ~msg,\n               :file ~file :line ~line :end-line ~end-line :column ~column :end-column ~end-column\n               :expected '~form, :actual e#}))\n           e#)))))\n\n(defmacro try-expr\n  \"Used by the 'is' macro to catch unexpected exceptions.\n  You don't call this.\"\n  [msg form]\n  (let [{:keys [file line end-line column end-column]} (meta form)]\n    `(try\n       ~(assert-expr &env msg form)\n       (catch :default t#\n         (report\n          {:type :error, :message ~msg,\n           :file ~file :line ~line :end-line ~end-line :column ~column :end-column ~end-column\n           :expected '~form, :actual t#})))))\n\n;; =============================================================================\n;; Assertion Macros\n\n(defmacro is\n  \"Generic assertion macro.  'form' is any predicate test.\n  'msg' is an optional message to attach to the assertion.\n  \n  Example: (is (= 4 (+ 2 2)) \\\"Two plus two should be 4\\\")\n\n  Special forms:\n\n  (is (thrown? c body)) checks that an instance of c is thrown from\n  body, fails if not; then returns the thing thrown.\n\n  (is (thrown-with-msg? c re body)) checks that an instance of c is\n  thrown AND that the message on the exception matches (with\n  re-find) the regular expression re.\"\n  ([form] `(cljs.test/is ~form nil))\n  ([form msg]\n   `(try-expr ~msg ~form)))\n\n(defmacro are\n  \"Checks multiple assertions with a template expression.\n  See clojure.template/do-template for an explanation of\n  templates.\n\n  Example: (are [x y] (= x y)  \n                2 (+ 1 1)\n                4 (* 2 2))\n  Expands to: \n           (do (is (= 2 (+ 1 1)))\n               (is (= 4 (* 2 2))))\n\n  Note: This breaks some reporting features, such as line numbers.\"\n  [argv expr & args]\n  (if (or\n        ;; (are [] true) is meaningless but ok\n        (and (empty? argv) (empty? args))\n        ;; Catch wrong number of args\n        (and (pos? (count argv))\n          (pos? (count args))\n          (zero? (mod (count args) (count argv)))))\n    `(clojure.template/do-template ~argv (is ~expr) ~@args)\n    (throw (#?(:clj Exception. :cljs js/Error.) \"The number of args doesn't match are's argv.\"))))\n\n(defmacro testing\n  \"Adds a new string to the list of testing contexts.  May be nested,\n  but must occur inside a test function (deftest).\"\n  ([string & body]\n   `(do\n      (update-current-env! [:testing-contexts] conj ~string)\n      (try\n        ~@body\n        (finally\n          (update-current-env! [:testing-contexts] rest))))))\n\n;; =============================================================================\n;; Defining Tests\n\n(defmacro deftest\n  \"Defines a test function with no arguments.  Test functions may call\n  other tests, so tests may be composed.  If you compose tests, you\n  should also define a function named test-ns-hook; run-tests will\n  call test-ns-hook instead of testing all vars.\n\n  Note: Actually, the test body goes in the :test metadata on the var,\n  and the real function (the value of the var) calls test-var on\n  itself.\n\n  When cljs.analyzer/*load-tests* is false, deftest is ignored.\"\n  [name & body]\n  (when ana/*load-tests*\n    `(do\n       (def ~(vary-meta name assoc :test `(fn [] ~@body))\n         (fn [] (cljs.test/test-var (.-cljs$lang$var ~name))))\n       (set! (.-cljs$lang$var ~name) (var ~name)))))\n\n(defmacro async\n  \"Wraps body as a CPS function that can be returned from a test to\n  continue asynchronously.  Binds done to a function that must be\n  invoked once and from an async context after any assertions.\n\n  (deftest example-with-timeout\n    (async done\n      (js/setTimeout (fn []\n                       ;; make assertions in async context...\n                       (done) ;; ...then call done\n                       )\n                     0)))\"\n  [done & body]\n  `(reify\n     cljs.test/IAsyncTest\n     cljs.core/IFn\n     (~'-invoke [_# ~done]\n       ~@body)))\n\n;; =============================================================================\n;; Running Tests\n\n(defn ns? [x]\n  (and (seq? x) (= (first x) 'quote)))\n\n(defmacro run-tests-block\n  \"Like test-vars, but returns a block for further composition and\n  later execution.\"\n  [env-or-ns & namespaces]\n  (assert (every?\n           (fn [[quote ns]] (and (= quote 'quote) (symbol? ns)))\n           namespaces)\n          \"All arguments to run-tests must be quoted symbols\")\n  (let [is-ns (ns? env-or-ns)\n        env (gensym \"env\")\n        summary (gensym \"summary\")]\n    `(let [~env ~(if is-ns\n                   `(empty-env)\n                   env-or-ns)\n           ~summary (cljs.core/volatile!\n                     {:test 0 :pass 0 :fail 0 :error 0\n                      :type :summary})]\n       (concat ~@(map\n                  (fn [ns]\n                    `(concat (test-ns-block ~env ~ns)\n                             [(fn []\n                                (cljs.core/vswap!\n                                 ~summary\n                                 (partial merge-with +)\n                                 (:report-counters\n                                  (get-and-clear-env!))))]))\n                  (if is-ns\n                    (concat [env-or-ns] namespaces)\n                    namespaces))\n               [(fn []\n                   (set-env! ~env)\n                   (do-report (deref ~summary))\n                   (report (assoc (deref ~summary) :type :end-run-tests))\n                   (clear-env!))]))))\n\n(defmacro run-tests\n  \"Runs all tests in the given namespaces; prints results.\n  Defaults to current namespace if none given. Does not return a meaningful\n  value due to the possiblity of asynchronous execution. To detect test\n  completion add a :end-run-tests method case to the cljs.test/report\n  multimethod.\"\n  ([] `(run-tests (empty-env) '~ana/*cljs-ns*))\n  ([env-or-ns]\n   (if (ns? env-or-ns)\n     `(run-tests (empty-env) ~env-or-ns)\n     `(run-tests ~env-or-ns '~ana/*cljs-ns*)))\n  ([env-or-ns & namespaces]\n   `(run-block (run-tests-block ~env-or-ns ~@namespaces))))\n\n(defmacro run-all-tests\n  \"Runs all tests in all namespaces; prints results.\n  Optional argument is a regular expression; only namespaces with\n  names matching the regular expression (with re-matches) will be\n  tested.\"\n  ([] `(run-all-tests nil (empty-env)))\n  ([re] `(run-all-tests ~re (empty-env)))\n  ([re env]\n   `(run-tests ~env\n      ~@(map\n          (fn [ns] `(quote ~ns))\n          (cond->> (ana-api/all-ns)\n            re (filter #(re-matches re (name %))))))))\n\n(defmacro test-all-vars-block\n  ([[quote ns]]\n   `(let [env# (get-current-env)]\n      (concat\n       [(fn []\n          (when (nil? env#)\n            (set-env! (empty-env)))\n          ~(when (ana-api/ns-resolve ns 'cljs-test-once-fixtures)\n             `(update-current-env! [:once-fixtures] assoc '~ns\n                                             ~(symbol (name ns) \"cljs-test-once-fixtures\")))\n          ~(when (ana-api/ns-resolve ns 'cljs-test-each-fixtures)\n             `(update-current-env! [:each-fixtures] assoc '~ns\n                                             ~(symbol (name ns) \"cljs-test-each-fixtures\"))))]\n       (test-vars-block\n        [~@(->> (ana-api/ns-interns ns)\n                (filter (fn [[_ v]] (:test v)))\n                (sort-by (fn [[_ v]] (:line v)))\n                (map (fn [[k _]]\n                       `(var ~(symbol (name ns) (name k))))))])\n       [(fn []\n          (when (nil? env#)\n            (clear-env!)))]))))\n\n(defmacro test-all-vars\n  \"Calls test-vars on every var with :test metadata interned in the\n  namespace, with fixtures.\"\n  [[quote ns :as form]]\n  `(run-block\n     (concat (test-all-vars-block ~form)\n             [(fn []\n                (report {:type :end-test-all-vars :ns ~form}))])))\n\n(defmacro test-ns-block\n  \"Like test-ns, but returns a block for further composition and\n  later execution.  Does not clear the current env.\"\n  ([env [quote ns :as form]]\n   (assert (and (= quote 'quote) (symbol? ns)) \"Argument to test-ns must be a quoted symbol\")\n   (assert (ana-api/find-ns ns) (str \"Namespace \" ns \" does not exist\"))\n   `[(fn []\n       (set-env! ~env)\n       (do-report {:type :begin-test-ns, :ns ~form})\n       ;; If the namespace has a test-ns-hook function, call that:\n       ~(if-let [v (ana-api/ns-resolve ns 'test-ns-hook)]\n          `(~(symbol (name ns) \"test-ns-hook\"))\n          ;; Otherwise, just test every var in the namespace.\n          `(block (test-all-vars-block ~form))))\n     (fn []\n       (do-report {:type :end-test-ns, :ns ~form}))]))\n\n(defmacro test-ns\n  \"If the namespace defines a function named test-ns-hook, calls that.\n  Otherwise, calls test-all-vars on the namespace.  'ns' is a\n  namespace object or a symbol.\n\n  Internally binds *report-counters* to a ref initialized to\n  *initial-report-counters*.  \"\n  ([ns] `(test-ns (empty-env) ~ns))\n  ([env [quote ns :as form]]\n   `(run-block\n     (concat (test-ns-block ~env ~form)\n             [(fn []\n                (clear-env!))]))))\n\n;; =============================================================================\n;; Fixes\n\n(defmacro use-fixtures [type & fns]\n  (condp = type\n    :once\n    `(def ~'cljs-test-once-fixtures\n       [~@fns])\n    :each\n    `(def ~'cljs-test-each-fixtures\n       [~@fns])\n    :else\n    (throw\n      (#?(:clj Exception. :cljs js/Error.) \"First argument to cljs.test/use-fixtures must be :once or :each\"))))\n","cljs/test.cljs",";   Copyright (c) Rich Hickey. All rights reserved.\n;   The use and distribution terms for this software are covered by the\n;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;   which can be found in the file epl-v10.html at the root of this distribution.\n;   By using this software in any fashion, you are agreeing to be bound by\n;   the terms of this license.\n;   You must not remove this notice, or any other, from this software.\n\n(ns\n^{:author \"Stuart Sierra, with contributions and suggestions by \n  Chas Emerick, Allen Rohner, Stuart Halloway, David Nolen, and\n  Leon Grapenthin\",\n     :doc \"A unit testing framework.\n\n   ASSERTIONS\n\n   The core of the library is the \\\"is\\\" macro, which lets you make\n   assertions of any arbitrary expression:\n\n   (is (= 4 (+ 2 2)))\n   (is (instance? Integer 256))\n   (is (.startsWith \\\"abcde\\\" \\\"ab\\\"))\n\n   You can type an \\\"is\\\" expression directly at the REPL, which will\n   print a message if it fails.\n\n       user> (is (= 5 (+ 2 2)))\n\n       FAIL in  (:1)\n       expected: (= 5 (+ 2 2))\n         actual: (not (= 5 4))\n       false\n\n   The \\\"expected:\\\" line shows you the original expression, and the\n   \\\"actual:\\\" shows you what actually happened.  In this case, it\n   shows that (+ 2 2) returned 4, which is not = to 5.  Finally, the\n   \\\"false\\\" on the last line is the value returned from the\n   expression.  The \\\"is\\\" macro always returns the result of the\n   inner expression.\n\n   There are two special assertions for testing exceptions.  The\n   \\\"(is (thrown? c ...))\\\" form tests if an exception of class c is\n   thrown:\n\n   (is (thrown? ArithmeticException (/ 1 0))) \n\n   \\\"(is (thrown-with-msg? c re ...))\\\" does the same thing and also\n   tests that the message on the exception matches the regular\n   expression re:\n\n   (is (thrown-with-msg? ArithmeticException #\\\"Divide by zero\\\"\n                         (/ 1 0)))\n\n   DOCUMENTING TESTS\n\n   \\\"is\\\" takes an optional second argument, a string describing the\n   assertion.  This message will be included in the error report.\n\n   (is (= 5 (+ 2 2)) \\\"Crazy arithmetic\\\")\n\n   In addition, you can document groups of assertions with the\n   \\\"testing\\\" macro, which takes a string followed by any number of\n   assertions.  The string will be included in failure reports.\n   Calls to \\\"testing\\\" may be nested, and all of the strings will be\n   joined together with spaces in the final report, in a style\n   similar to RSpec <http://rspec.info/>\n\n   (testing \\\"Arithmetic\\\"\n     (testing \\\"with positive integers\\\"\n       (is (= 4 (+ 2 2)))\n       (is (= 7 (+ 3 4))))\n     (testing \\\"with negative integers\\\"\n       (is (= -4 (+ -2 -2)))\n       (is (= -1 (+ 3 -4)))))\n\n   Note that, unlike RSpec, the \\\"testing\\\" macro may only be used\n   INSIDE a \\\"deftest\\\" form (see below).\n\n\n   DEFINING TESTS\n\n   (deftest addition\n     (is (= 4 (+ 2 2)))\n     (is (= 7 (+ 3 4))))\n\n   (deftest subtraction\n     (is (= 1 (- 4 3)))\n     (is (= 3 (- 7 4))))\n\n   This creates functions named \\\"addition\\\" and \\\"subtraction\\\", which\n   can be called like any other function.  Therefore, tests can be\n   grouped and composed, in a style similar to the test framework in\n   Peter Seibel's \\\"Practical Common Lisp\\\"\n   <http://www.gigamonkeys.com/book/practical-building-a-unit-test-framework.html>\n\n   (deftest arithmetic\n     (addition)\n     (subtraction))\n\n   The names of the nested tests will be joined in a list, like\n   \\\"(arithmetic addition)\\\", in failure reports.  You can use nested\n   tests to set up a context shared by several tests.\n\n   DEFINING ASYNC TESTS\n\n   (deftest addition\n     (async done\n       (is (= 4 (+ 2 2)))\n       (is (= 7 (+ 3 4)))\n       (done)))\n\n   Async tests are constructed with the async macro. The first argument to\n   the macro is the test completion callback. The body of the async macro may\n   be any series of expressions. The completion callback must be invoked when\n   all assertions have run. There is no support for asynchronous coordination -\n   core.async is recommended for this. Note the body of the async test must be\n   truly asynchronous to avoid stack overflow.\n\n   RUNNING TESTS\n\n   Run tests with the function \\\"(run-tests namespaces...)\\\":\n\n   (run-tests 'your.namespace 'some.other.namespace)\n\n   If you don't specify any namespaces, the current namespace is\n   used.  To run all tests in all namespaces, use \\\"(run-all-tests)\\\".\n\n   By default, these functions will search for all tests defined in\n   a namespace and run them in an undefined order.  However, if you\n   are composing tests, as in the \\\"arithmetic\\\" example above, you\n   probably do not want the \\\"addition\\\" and \\\"subtraction\\\" tests run\n   separately.  In that case, you must define a special function\n   named \\\"test-ns-hook\\\" that runs your tests in the correct order:\n\n   (defn test-ns-hook []\n     (arithmetic))\n\n   \\\"run-tests\\\" also optionally takes a testing enviroment. A default\n   one is supplied for you by invoking \\\"empty-env\\\".  The test\n   environment contains everything needed to run tests including the\n   report results map. Fixtures must be present here if you want them\n   to run. Note that code that relies on \\\"test-ns\\\" will\n   automatically be supplied the appropriate defined fixtures.  For\n   example, this is done for you if you use \\\"run-tests\\\".\n\n   Note: test-ns-hook prevents execution of fixtures (see below).\n\n\n   OMITTING TESTS FROM PRODUCTION CODE\n\n   You can set the ClojureScript compiler build option\n   \\\":load-tests\\\" to false when loading or compiling code in\n   production.  This will prevent any tests from being created by\n   or \\\"deftest\\\".\n\n\n   FIXTURES\n\n   Fixtures allow you to run code before and after tests, to set up\n   the context in which tests should be run.\n\n   A fixture is a map of one or two functions that run code before and\n   after tests.  It looks like this:\n\n   {:before (fn []\n              Perform setup, establish bindings, whatever.\n              )\n    :after (fn []\n             Tear-down / clean-up code here.\n             )}\n\n   Both are optional and can be left out.\n\n   Fixtures are attached to namespaces in one of two ways.  \\\"each\\\"\n   fixtures are run repeatedly, once for each test function created\n   with \\\"deftest\\\".  \\\"each\\\" fixtures are useful for\n   establishing a consistent before/after state for each test, like\n   clearing out database tables.\n\n   \\\"each\\\" fixtures can be attached to the current namespace like this:\n   (use-fixtures :each fixture1 fixture2 ...)\n   The fixture1, fixture2 are just maps like the example above.\n   They can also be passed directly, like this:\n   (use-fixtures :each\n     {:before (fn [] setup...), :after (fn [] cleanup...)})\n\n   The other kind of fixture, a \\\"once\\\" fixture, is only run once,\n   around ALL the tests in the namespace.  \\\"once\\\" fixtures are useful\n   for tasks that only need to be performed once, like establishing\n   database connections, or for time-consuming tasks.\n\n   Attach \\\"once\\\" fixtures to the current namespace like this:\n   (use-fixtures :once fixture1 fixture2 ...)\n\n   Note: Fixtures and test-ns-hook are mutually incompatible.  If you\n   are using test-ns-hook, fixture functions will *never* be run.\n\n\n   WRAPPING FIXTURES\n\n   Instead of a map, a fixture can be specified like this:\n\n   (defn my-fixture [f]\n      Perform setup, establish bindings, whatever.\n     (f)  Then call the function we were passed.\n      Tear-down / clean-up code here.\n    )\n\n   This style is incompatible with async tests. If an async test is\n   encountered, testing will be aborted. It can't be mixed with\n   fixtures specified as maps.\n\n\n   EXTENDING TEST-IS (ADVANCED)\n\n   You can extend the behavior of the \\\"is\\\" macro by defining new\n   methods for the \\\"assert-expr\\\" multimethod.  These methods are\n   called during expansion of the \\\"is\\\" macro, so they should return\n   quoted forms to be evaluated.\n\n   You can plug in your own test-reporting framework by specifying a\n   :reporter key in the test environment. It is normally set to\n   :cljs.test/default. Set this to the desired key and supply custom\n   implementations of the \\\"report\\\" multimethod.\n\n   The 'event' argument is a map.  It will always have a :type key,\n   whose value will be a keyword signaling the type of event being\n   reported.  Standard events with :type value of :pass, :fail, and\n   :error are called when an assertion passes, fails, and throws an\n   exception, respectively.  In that case, the event will also have\n   the following keys:\n\n     :expected   The form that was expected to be true\n     :actual     A form representing what actually occurred\n     :message    The string message given as an argument to 'is'\n\n   The \\\"testing\\\" strings will be a list in the :testing-contexts\n   property of the test environment, and the vars being tested will be\n   a list in the :testing-vars property of the test environment.\n\n   For additional event types, see the examples in the code.\n\"}\n  cljs.test\n  (:require-macros [clojure.template :as temp]\n                   [cljs.test :as test])\n  (:require [clojure.string :as string]\n            [cljs.pprint :as pprint]))\n\n;; =============================================================================\n;; Default Reporting\n\n(defn empty-env\n  \"Generates a testing environment with a reporter.\n   (empty-env) - uses the :cljs.test/default reporter.\n   (empty-env :cljs.test/pprint) - pretty prints all data structures. \n   (empty-env reporter) - uses a reporter of your choosing.\n\n   To create your own reporter see cljs.test/report\"\n  ([] (empty-env ::default))\n  ([reporter]\n   (cond-> {:report-counters {:test 0 :pass 0 :fail 0 :error 0}\n            :testing-vars ()\n            :testing-contexts ()\n            :formatter pr-str\n            :reporter reporter}\n     (= ::pprint reporter) (assoc :reporter ::default\n                             :formatter pprint/pprint))))\n\n(def ^:dynamic *current-env* nil)\n\n(defn get-current-env []\n  (or *current-env* (empty-env)))\n\n(defn update-current-env! [ks f & args]\n  (set! *current-env* (apply update-in (get-current-env) ks f args)))\n\n(defn set-env! [new-env]\n  (set! *current-env* new-env))\n\n(defn clear-env! []\n  (set! *current-env* nil))\n\n(defn get-and-clear-env! []\n  \"Like get-current-env, but cleans env before returning.\"\n  (let [env (cljs.test/get-current-env)]\n    (clear-env!)\n    env))\n\n(defn testing-vars-str\n  \"Returns a string representation of the current test.  Renders names\n  in *testing-vars* as a list, then the source file and line of\n  current assertion.\"\n  [m]\n  (let [{:keys [file line column]} m]\n    (str\n      (reverse (map #(:name (meta %)) (:testing-vars (get-current-env))))\n      \" (\" file \":\" line (when column (str \":\" column)) \")\")))\n\n(defn testing-contexts-str\n  \"Returns a string representation of the current test context. Joins\n  strings in *testing-contexts* with spaces.\"\n  []\n  (apply str (interpose \" \" (reverse (:testing-contexts (get-current-env))))))\n\n(defn inc-report-counter!\n  \"Increments the named counter in *report-counters*, a ref to a map.\n  Does nothing if *report-counters* is nil.\"\n  [name]\n  (if (:report-counters (get-current-env))\n    (update-current-env! [:report-counters name] (fnil inc 0))))\n\n(defmulti\n  ^{:doc \"Generic reporting function, may be overridden to plug in\n   different report formats (e.g., TAP, JUnit).  Assertions such as\n   'is' call 'report' to indicate results.  The argument given to\n   'report' will be a map with a :type key.\"\n     :dynamic true}\n  report (fn [m] [(:reporter (get-current-env)) (:type m)]))\n\n(defmethod report :default [m])\n\n(defmethod report [::default :pass] [m]\n  (inc-report-counter! :pass))\n\n(defn- print-comparison [m]\n  (let [formatter-fn (or (:formatter (get-current-env)) pr-str)]\n    (println \"expected:\" (formatter-fn (:expected m)))\n    (println \"  actual:\" (formatter-fn (:actual m)))))\n\n(defmethod report [::default :fail] [m]\n  (inc-report-counter! :fail)\n  (println \"\\nFAIL in\" (testing-vars-str m))\n  (when (seq (:testing-contexts (get-current-env)))\n    (println (testing-contexts-str)))\n  (when-let [message (:message m)] (println message))\n  (print-comparison m))\n\n(defmethod report [::default :error] [m]\n  (inc-report-counter! :error)\n  (println \"\\nERROR in\" (testing-vars-str m))\n  (when (seq (:testing-contexts (get-current-env)))\n    (println (testing-contexts-str)))\n  (when-let [message (:message m)] (println message))\n  (print-comparison m))\n\n(defmethod report [::default :summary] [m]\n  (println \"\\nRan\" (:test m) \"tests containing\"\n    (+ (:pass m) (:fail m) (:error m)) \"assertions.\")\n  (println (:fail m) \"failures,\" (:error m) \"errors.\"))\n\n(defmethod report [::default :begin-test-ns] [m]\n  (println \"\\nTesting\" (name (:ns m))))\n\n;; Ignore these message types:\n(defmethod report [::default :end-test-ns] [m])\n(defmethod report [::default :begin-test-var] [m]\n  #_(println \":begin-test-var\" (testing-vars-str m)))\n(defmethod report [::default :end-test-var] [m])\n(defmethod report [::default :end-run-tests] [m])\n(defmethod report [::default :end-test-all-vars] [m])\n(defmethod report [::default :end-test-vars] [m])\n\n;; =============================================================================\n;; File, Line, and Column Helpers\n\n(defn js-line-and-column [stack-element]\n  \"Returns a 2-element vector containing the line and\n  column encoded at the end of a stack element string.\n  A line or column will be represented as NaN if not\n  parsesable.\"\n  (let [parts (.split stack-element \":\")\n        cnt   (count parts)]\n    (if (> cnt 1)\n      [(js/parseInt (nth parts (- cnt 2)) 10)\n       (js/parseInt (nth parts (dec cnt)) 10)]\n      [##NaN ##NaN])))\n\n(defn js-filename [stack-element]\n  (let [output-dir (cljs.test/cljs-output-dir)\n        output-dir (cond-> output-dir\n                     (not (string/ends-with? output-dir \"/\"))\n                     (str \"/\"))]\n    (-> (.split stack-element output-dir)\n      last\n      (.split \":\")\n      first)))\n\n(defn mapped-line-and-column [filename line column]\n  (let [default [filename line column]]\n    (if-let [source-map (:source-map (get-current-env))]\n      ;; source maps are 0 indexed for lines\n      (if-let [columns (get-in source-map [filename (dec line)])]\n        (vec\n          (map\n            ;; source maps are 0 indexed for columns\n            ;; multiple segments may exist at column\n            ;; just take first\n            (first\n              (if-let [mapping (get columns (dec column))]\n                mapping\n                (second (first columns))))\n            [:source :line :col]))\n        default)\n      default)))\n\n(defn file-and-line [exception depth]\n  ;; TODO: flesh out\n  (if-let [stack-element (and (string? (.-stack exception))\n                              (some-> (.-stack exception)\n                                      string/split-lines\n                                      (get depth)\n                                      string/trim))]\n    (let [fname (js-filename stack-element)\n          [line column] (js-line-and-column stack-element)\n          [fname line column] (mapped-line-and-column fname line column)]\n      {:file fname :line line :column column})\n    {:file (.-fileName exception)\n     :line (.-lineNumber exception)}))\n\n(defn do-report [m]\n  (let [m (case (:type m)\n            :fail (merge (file-and-line (js/Error.) 4) m)\n            :error (merge (file-and-line (:actual m) 0) m)\n            m)]\n    (report m)))\n\n;; =============================================================================\n;; Async\n\n(defprotocol IAsyncTest\n  \"Marker protocol denoting CPS function to begin asynchronous\n  testing.\")\n\n(defn async?\n  \"Returns whether x implements IAsyncTest.\"\n  [x]\n  (satisfies? IAsyncTest x))\n\n(defn run-block\n  \"Invoke all functions in fns with no arguments. A fn can optionally\n  return\n\n  an async test - is invoked with a continuation running left fns\n\n  a seq of fns tagged per block - are invoked immediately after fn\"\n  [fns]\n  (when-first [f fns]\n    (let [obj (f)]\n      (if (async? obj)\n        (obj (let [d (delay (run-block (rest fns)))]\n               (fn []\n                 (if (realized? d)\n                   (println \"WARNING: Async test called done more than one time.\")\n                   @d))))\n        (recur (cond->> (rest fns)\n                 (::block? (meta obj)) (concat obj)))))))\n\n(defn block\n  \"Tag a seq of fns to be picked up by run-block as injected\n  continuation.  See run-block.\"\n  [fns]\n  (some-> fns\n          (vary-meta assoc ::block? true)))\n\n;; =============================================================================\n;; Low-level functions\n\n(defn- test-var-block*\n  [v t]\n  {:pre [(instance? Var v)]}\n  [(fn []\n     (update-current-env! [:testing-vars] conj v)\n     (update-current-env! [:report-counters :test] inc)\n     (do-report {:type :begin-test-var :var v})\n     (try\n       (t)\n       (catch :default e\n         (case e\n           ::async-disabled (throw \"Async tests require fixtures to be specified as maps.  Testing aborted.\")\n           (do-report\n            {:type :error\n             :message \"Uncaught exception, not in assertion.\"\n             :expected nil\n             :actual e})))))\n   (fn []\n     (do-report {:type :end-test-var :var v})\n     (update-current-env! [:testing-vars] rest))])\n\n(defn test-var-block\n  \"Like test-var, but returns a block for further composition and\n  later execution.\"\n  [v]\n  (if-let [t (:test (meta v))]\n    (test-var-block* v t)))\n\n(defn test-var\n  \"If v has a function in its :test metadata, calls that function,\n  add v to :testing-vars property of env.\"\n  [v]\n  (run-block (test-var-block v)))\n\n(defn- default-fixture\n  \"The default, empty, fixture function.  Just calls its argument.\n\n  NOTE: Incompatible with map fixtures.\"\n  [f]\n  (f))\n\n(defn compose-fixtures\n  \"Composes two fixture functions, creating a new fixture function\n  that combines their behavior.\n\n  NOTE: Incompatible with map fixtures.\"\n  [f1 f2]\n  (fn [g] (f1 (fn [] (f2 g)))))\n\n(defn join-fixtures\n  \"Composes a collection of fixtures, in order.  Always returns a valid\n  fixture function, even if the collection is empty.\n\n  NOTE: Incompatible with map fixtures.\"\n  [fixtures]\n  (reduce compose-fixtures default-fixture fixtures))\n\n(defn- wrap-map-fixtures\n  \"Wraps block in map-fixtures.\"\n  [map-fixtures block]\n  (concat (keep :before map-fixtures)\n          block\n          (reverse (keep :after map-fixtures))))\n\n(defn- execution-strategy [once each]\n  (letfn [(fixtures-type [coll]\n            (cond\n              (empty? coll) :none\n              (every? map? coll) :map\n              (every? fn? coll) :fn))\n          (fixtures-types []\n            (->> (map fixtures-type [once each])\n              (remove #{:none})\n              (distinct)))]\n    (let [[type :as types] (fixtures-types)]\n      (assert (not-any? nil? types)\n        \"Fixtures may not be of mixed types\")\n      (assert (> 2 (count types))\n        \"fixtures specified in :once and :each must be of the same type\")\n      ({:map :async :fn :sync} type :async))))\n\n(defn- disable-async [f]\n  (fn []\n    (let [obj (f)]\n      (when (async? obj)\n        (throw ::async-disabled))\n      obj)))\n\n(defn test-vars-block\n  \"Like test-vars, but returns a block for further composition and\n  later execution.\"\n  [vars]\n  (map\n   (fn [[ns vars]]\n     (fn []\n       (block\n        (let [env (get-current-env)\n              once-fixtures (get-in env [:once-fixtures ns])\n              each-fixtures (get-in env [:each-fixtures ns])]\n          (case (execution-strategy once-fixtures each-fixtures)\n            :async\n            (->> vars\n                 (filter (comp :test meta))\n                 (mapcat (comp (partial wrap-map-fixtures each-fixtures)\n                               test-var-block))\n                 (wrap-map-fixtures once-fixtures))\n            :sync\n            (let [each-fixture-fn (join-fixtures each-fixtures)]\n              [(fn []\n                 ((join-fixtures once-fixtures)\n                  (fn []\n                    (doseq [v vars]\n                      (when-let [t (:test (meta v))]\n                        ;; (alter-meta! v update :test disable-async)\n                        (each-fixture-fn\n                         (fn []\n                           ;; (test-var v)\n                           (run-block\n                            (test-var-block* v (disable-async t))))))))))]))))))\n   (group-by (comp :ns meta) vars)))\n\n(defn test-vars\n  \"Groups vars by their namespace and runs test-vars on them with\n  appropriate fixtures assuming they are present in the current\n  testing environment.\"\n  [vars]\n  (run-block (concat (test-vars-block vars)\n                     [(fn []\n                        (report {:type :end-test-vars :vars vars}))])))\n\n;; =============================================================================\n;; Running Tests, high level functions\n\n(defn successful?\n  \"Returns true if the given test summary indicates all tests\n  were successful, false otherwise.\"\n  [summary]\n  (and (zero? (:fail summary 0))\n       (zero? (:error summary 0))))\n","cljs/modern.cljc","(ns cljs.modern\n  (:require\n    [cljs.analyzer :as ana]\n    [cljs.compiler :as comp]\n    [cljs.env :as env]\n    [clojure.string :as str]\n    [clojure.walk :as walk]))\n\n\n(defmacro emit-wrap [env & body]\n  `(cljs.core/let [env# ~env]\n     (when (= :return (:context env#)) (cljs.compiler/emits \"return \"))\n     ~@body\n     (when-not (= :expr (:context env#)) (cljs.compiler/emitln \";\"))))\n\n;; just semi-modern for now\n;; requires too much work to make it actually modern (let/const vs var, etc)\n\n;; just got tired of not having access to class and deftype being annoying sometimes\n\n;; FIXME: should calculate protocol pmasks ala deftype so fast-path macros support\n;; FIXME: should likely generate sane equals/hash impl?\n;; I'm fine with identity compare only for now, this isn't meant to replace deftype/defrecord after all\n\n#?(:cljs\n   (set! ana/specials (conj ana/specials `defclass* `super*))\n   :clj\n   (alter-var-root #'ana/specials conj `defclass* `super* `js-template*))\n\n(defn find-and-replace-super-call [form]\n  (let [res\n        (walk/prewalk\n          (fn [form]\n            (if-not (and (list? form) (= 'super (first form)))\n              form\n              `(super* ~@(rest form))))\n          form)]\n\n\n    (if (not= form res)\n      res\n      ;; if super call was not found, add it first\n      (cons `(super*) form))))\n\n(defn parse-class [form]\n  (loop [classname nil\n         fields []\n         constructor nil\n         extends nil\n         protocols []\n         protocol nil\n         protocol-fns []\n         [head & more :as current] form]\n\n    (let [l? (list? head) s? (symbol? head)]\n\n      (cond\n        ;; all done\n        (not (seq current))\n        (-> {:classname classname\n             :extends extends\n             :constructor constructor\n             :fields fields\n             :protocols protocols}\n            (cond->\n              protocol\n              (update :protocols conj {:protocol-name protocol :protocol-fns protocol-fns})))\n\n        ;; SomeClass, symbol before any other form\n        (and s? (nil? constructor) (empty? fields) (empty? protocols) (nil? extends) (nil? protocol) (nil? classname))\n        (recur head fields constructor extends protocols protocol protocol-fns more)\n\n        ;; (field foo default?)\n        (and l? (nil? protocol) (= 'field (first head)))\n        (let [field-count (count head)\n              field-name (nth head 1)]\n          (cond\n            ;; (field foo)\n            (and (= 2 field-count) (simple-symbol? field-name))\n            (recur classname (conj fields {:field-form head :field-name field-name}) constructor extends protocols protocol protocol-fns more)\n\n            ;; (field foo some-default)\n            ;; FIXME: should restrict some-default to actual values, not sure expressions will work?\n            (and (= 3 field-count) (simple-symbol? field-name))\n            (recur classname (conj fields {:field-form head :field-name field-name :field-default (nth head 2)}) constructor extends protocols protocol protocol-fns more)\n            :else\n            (throw (ex-info \"invalid field definition\" {:form head}))))\n\n        ;; (constructor [foo bar] ...)\n        (and l? (nil? protocol) (nil? constructor) (= 'constructor (first head)) (vector? (second head)))\n        (recur classname fields head extends protocols protocol protocol-fns more)\n\n        ;; (extends SomeClass)\n        (and l? (nil? protocol) (nil? extends) (= 'extends (first head)) (= 2 (count head)) (symbol? (second head)))\n        (recur classname fields constructor (second head) protocols protocol protocol-fns more)\n\n        ;; SomeProtocol start when protocol already active, save protocol, repeat current\n        (and s? (some? protocol))\n        (recur classname fields constructor extends (conj protocols {:protocol-name protocol :protocol-fns protocol-fns}) nil [] current)\n\n        ;; SomeProtocol start\n        s?\n        (recur classname fields constructor extends protocols head [] more)\n\n        ;; (protocol-fn [] ...)\n        (and l? protocol)\n        (recur classname fields constructor extends protocols protocol\n          ;; this is important so that the extend-type code emits a var self__ = this;\n          ;; no clue why ::ana/type controls that\n          (conj protocol-fns (vary-meta head assoc ::ana/type classname))\n          more)\n\n        :else\n        (throw (ex-info \"invalid defclass form\" {:form head}))\n        ))))\n\n\n(defmethod ana/parse `defclass*\n  [op env form name opts]\n  (let [{:keys [classname extends constructor fields protocols] :as parsed}\n        (parse-class (rest form))]\n\n    (assert (symbol? classname) \"classname required\")\n\n    (let [qualified-name (symbol (-> env :ns :name str) (str classname))\n          munged-name (symbol (str/replace (str (comp/munge qualified-name)) \".\" \"$\"))\n\n          field-syms (map :field-name fields)\n\n          locals (reduce\n                   (fn [m fld]\n                     (assoc m fld\n                              {:name fld\n                               ;; why do these exist?\n                               :line (ana/get-line fld env)\n                               :column (ana/get-col fld env)\n                               :local :field\n                               :field true\n                               :mutable true ;; always treat all as mutable\n                               :tag (-> fld meta :tag)}))\n                   {classname {:name qualified-name\n                               :tag classname}}\n                   field-syms)\n\n          [_ ctor-args & ctor-body] constructor\n\n          _ (assert (pos? (count ctor-args)) \"contructor requires at least one argument name for this\")\n\n          [this-sym & ctor-args] ctor-args\n\n          _ (assert (symbol? this-sym) \"can't destructure first constructur argument\")\n\n          ctor-body\n          (find-and-replace-super-call ctor-body)\n\n          arg-syms (vec (take (count ctor-args) (repeatedly gensym)))\n\n          ctor-locals\n          (reduce-kv\n            (fn [locals idx fld]\n              ;; FIXME: what should fn args locals look like?\n              (assoc locals fld {:name fld}))\n            ;; pretty sure thats wrong but works in our favor\n            ;; since accessing this before super() is invalid\n            ;; and this kinda ensures that\n            (assoc locals this-sym {:name (symbol \"self__\")\n                                    :tag classname})\n            arg-syms)\n\n          ctor-env\n          (assoc env :context :statement\n                     :locals ctor-locals\n                     ::extends extends\n                     ::fields fields)\n\n          ;; lazy way to deal with destructuring\n          ctor-form\n          `(cljs.core/let [~@(interleave ctor-args arg-syms)]\n             ~@ctor-body)\n\n          ctor-ast\n          (ana/analyze ctor-env ctor-form)\n\n          extend-ast\n          (when (seq protocols)\n            (let [extend-env\n                  (assoc env :locals locals)\n\n                  extend-form\n                  `(cljs.core/extend-type ~classname\n                     ~@(->> (for [{:keys [protocol-name protocol-fns]} protocols]\n                              (into [protocol-name] protocol-fns))\n                            (mapcat identity)))]\n              (ana/analyze extend-env extend-form)))\n\n          extends-ast\n          (when extends\n            (ana/analyze (assoc env :context :expr) extends))]\n\n      (swap! env/*compiler* update-in [::ana/namespaces (-> env :ns :name) :defs classname]\n        (fn [m]\n          (-> m\n              (assoc :name qualified-name\n                     :tag 'function\n                     :type true\n                     :num-fields (count arg-syms)\n                     :record false\n                     :protocols #{})\n              (merge (ana/source-info form env)))))\n\n      (-> {:op ::class :env env :form form\n           :qualified-name qualified-name\n           :munged-name munged-name\n           :classname classname\n           :tag 'function\n           :children []\n           :ctor-args arg-syms\n           :ctor ctor-ast}\n          (cond->\n            extends-ast\n            (assoc :extends extends-ast)\n\n            extend-ast\n            (assoc :extend extend-ast :children [:ctor :extend]))))))\n\n\n(defmethod comp/emit* ::class\n  [{:keys [env qualified-name munged-name extends extend ctor-args ctor]}]\n  (comp/emits (comp/munge qualified-name) \" = class \")\n  (comp/emits munged-name)\n  (when extends\n    (comp/emits \" extends \")\n    (comp/emit extends))\n  (comp/emitln \" {\")\n\n  (comp/emitln \"  constructor(\" (interpose \",\" ctor-args) \") {\")\n  (comp/emit ctor)\n  (comp/emitln \"  }\")\n  (comp/emitln \"};\")\n\n  (when extend\n    (comp/emit extend)))\n\n;; this is always added by class* so we know the correct position\n;; to initialize arguments since its not allowed to access this before super\n(defmethod ana/parse `super*\n  [op {::keys [extends fields] :as env} [_ & super-args :as form] name opts]\n  {:op ::super\n   :form form\n   :env env\n   :call-super? (some? extends)\n   :children [:super-args :field-init]\n   :super-args (mapv #(ana/analyze (assoc env :context :expr) %) super-args)\n   :field-init\n   (ana/analyze env\n     `(~'do ~@(->> fields\n                   (filter :field-default)\n                   (map\n                     (fn [{:keys [field-name field-default field-form]}]\n                       (with-meta\n                         `(~'set! ~field-name ~field-default)\n                         (meta field-form))))\n                   )))})\n\n(defmethod comp/emit* ::super\n  [{:keys [call-super? super-args field-init] :as ast}]\n  (when call-super?\n    (comp/emitln \"super(\" (interpose \",\" super-args) \");\"))\n\n  ;; required for direct field accesses here and anywhere in the ctor\n  (comp/emitln \"var self__ = this;\")\n\n  ;; initialize fields with defaults directly after super is called\n  (comp/emit field-init))\n\n;; only defclass for now since class expressions don't work with extend-type\n;; could use a slightly slimmer version for class that doesn't allow protocols\n;; or maybe go through specify or so?\n(defmacro defclass [& body]\n  `(defclass* ~@body))\n\n(defmethod comp/emit* ::js-template\n  [{:keys [env tagged parts]}]\n  (emit-wrap env\n    (when tagged\n      (comp/emit (first parts)))\n    (comp/emits \"`\")\n    (doseq [{:keys [op val] :as part} (if tagged (rest parts) parts)]\n      (if (and (= :const op) (string? val))\n        (let [quoted\n              (-> val\n                  ;; FIXME: anything else that needs replacing?\n                  ;; newlines and stuff are allowed\n                  (str/replace #\"`\" (constantly \"\\\\`\"))\n                  (str/replace #\"\\$\\{\" (constantly \"\\\\${\")))]\n          (comp/emits quoted))\n        (do (comp/emits \"${\")\n            (comp/emit part)\n            (comp/emits \"}\"))))\n    (comp/emits \"`\")))\n\n(defmethod ana/parse `js-template*\n  [op env form name opts]\n  (let [part-env (assoc env :context :expr)\n        parts (mapv #(ana/analyze part-env %) (rest form))]\n\n    {:op ::js-template\n     :env env\n     :form form\n     :parts parts\n     :tagged (not (string? (second form)))\n     :children [:parts]}))\n\n(defmacro js-template [& body]\n  `(js-template* ~@body))\n\n;; FIXME: use spec for parsing this. bad errors otherwise if used incorrectly\n(defmacro js-await [[name thenable] & body]\n  (let [last-expr (last body)\n\n        [body catch]\n        (if (and (seq? last-expr) (= 'catch (first last-expr)))\n          [(butlast body) last-expr]\n          [body nil])]\n\n    ;; FIXME: -> here will always return a promise so shouldn't be necessary to add js hint?\n    `(-> ~thenable\n         ~@(when (seq body)\n             [`(.then (fn [~name] ~@body))])\n         ~@(when catch\n             (let [[_ name & body] catch]\n               [`(.catch (fn [~name] ~@body))]\n               )))))\n\n\n(comment\n  (macroexpand-1\n    '(js-await [{:keys [foo]} (bar)]\n       (do-thing foo)\n       (catch x (fail x))\n       ))\n\n  (macroexpand-1\n    '(js-await [{:keys [foo]} (bar)]\n       (do-thing foo)))\n\n  (macroexpand-1\n    '(js-await [foo (bar)]\n       (catch e :yo))))\n","cljs/modern.cljs","(ns cljs.modern\n  (:require-macros [cljs.modern]))\n"], null);
interactive_syntax.stdlib.empty_visr = interactive_syntax.stdlib.write_visr.call(null,"visr.core/empty-visr","{}");
interactive_syntax.stdlib.starter_visr = interactive_syntax.stdlib.write_visr.call(null,"visr.core/empty-visr","{:message \"Endless Possibility\"}");
