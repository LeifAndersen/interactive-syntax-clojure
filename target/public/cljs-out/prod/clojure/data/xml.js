// Compiled by ClojureScript 1.11.99 {:target :nodejs, :nodejs-rt false, :language-out :ecmascript-next, :optimizations :simple}
goog.provide('clojure.data.xml');
goog.require('cljs.core');
goog.require('clojure.data.xml.name');
goog.require('clojure.data.xml.node');
goog.require('clojure.data.xml.js.dom');
goog.require('clojure.data.xml.protocols');
clojure.data.xml.parse_qname = clojure.data.xml.name.parse_qname;

cljs.core.alter_meta_BANG_.call(null,new cljs.core.Var(function(){return clojure.data.xml.parse_qname;},new cljs.core.Symbol("clojure.data.xml","parse-qname","clojure.data.xml/parse-qname",-114696648,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"parse-qname","parse-qname",-503996965,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.parse_qname)?clojure.data.xml.parse_qname.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly.call(null,cljs.core.assoc.call(null,cljs.core.meta.call(null,new cljs.core.Var(function(){return clojure.data.xml.name.parse_qname;},new cljs.core.Symbol("clojure.data.xml.name","parse-qname","clojure.data.xml.name/parse-qname",-631519353,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml/name.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml.name","clojure.data.xml.name",1709632289,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),23,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"parse-qname","parse-qname",-503996965,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.name.parse_qname)?clojure.data.xml.name.parse_qname.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))),new cljs.core.Keyword(null,"wrapped-by","wrapped-by",1051044074),new cljs.core.Var(function(){return clojure.data.xml.parse_qname;},new cljs.core.Symbol("clojure.data.xml","parse-qname","clojure.data.xml/parse-qname",-114696648,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"parse-qname","parse-qname",-503996965,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.parse_qname)?clojure.data.xml.parse_qname.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)))));

clojure.data.xml.qname_uri = clojure.data.xml.name.qname_uri;

cljs.core.alter_meta_BANG_.call(null,new cljs.core.Var(function(){return clojure.data.xml.qname_uri;},new cljs.core.Symbol("clojure.data.xml","qname-uri","clojure.data.xml/qname-uri",-679361477,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"qname-uri","qname-uri",-288720740,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.qname_uri)?clojure.data.xml.qname_uri.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly.call(null,cljs.core.assoc.call(null,cljs.core.meta.call(null,new cljs.core.Var(function(){return clojure.data.xml.name.qname_uri;},new cljs.core.Symbol("clojure.data.xml.name","qname-uri","clojure.data.xml.name/qname-uri",-1269027496,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.data.xml.name","clojure.data.xml.name",1709632289,null),new cljs.core.Symbol(null,"qname-uri","qname-uri",-288720740,null),"target/public/cljs-out/prod/clojure/data/xml/name.cljc",16,1,39,39,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"v","v",1661996586,null)], null)),"Get the namespace uri for this qname",(cljs.core.truth_(clojure.data.xml.name.qname_uri)?clojure.data.xml.name.qname_uri.cljs$lang$test:null)]))),new cljs.core.Keyword(null,"wrapped-by","wrapped-by",1051044074),new cljs.core.Var(function(){return clojure.data.xml.qname_uri;},new cljs.core.Symbol("clojure.data.xml","qname-uri","clojure.data.xml/qname-uri",-679361477,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"qname-uri","qname-uri",-288720740,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.qname_uri)?clojure.data.xml.qname_uri.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)))));

clojure.data.xml.qname_local = clojure.data.xml.name.qname_local;

cljs.core.alter_meta_BANG_.call(null,new cljs.core.Var(function(){return clojure.data.xml.qname_local;},new cljs.core.Symbol("clojure.data.xml","qname-local","clojure.data.xml/qname-local",-1663929151,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"qname-local","qname-local",-1247825572,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.qname_local)?clojure.data.xml.qname_local.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly.call(null,cljs.core.assoc.call(null,cljs.core.meta.call(null,new cljs.core.Var(function(){return clojure.data.xml.name.qname_local;},new cljs.core.Symbol("clojure.data.xml.name","qname-local","clojure.data.xml.name/qname-local",-64196768,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.data.xml.name","clojure.data.xml.name",1709632289,null),new cljs.core.Symbol(null,"qname-local","qname-local",-1247825572,null),"target/public/cljs-out/prod/clojure/data/xml/name.cljc",18,1,44,44,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"v","v",1661996586,null)], null)),"Get the name for this qname",(cljs.core.truth_(clojure.data.xml.name.qname_local)?clojure.data.xml.name.qname_local.cljs$lang$test:null)]))),new cljs.core.Keyword(null,"wrapped-by","wrapped-by",1051044074),new cljs.core.Var(function(){return clojure.data.xml.qname_local;},new cljs.core.Symbol("clojure.data.xml","qname-local","clojure.data.xml/qname-local",-1663929151,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"qname-local","qname-local",-1247825572,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.qname_local)?clojure.data.xml.qname_local.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)))));

clojure.data.xml.qname = clojure.data.xml.name.qname;

cljs.core.alter_meta_BANG_.call(null,new cljs.core.Var(function(){return clojure.data.xml.qname;},new cljs.core.Symbol("clojure.data.xml","qname","clojure.data.xml/qname",-1035338605,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"qname","qname",-343080652,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.qname)?clojure.data.xml.qname.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly.call(null,cljs.core.assoc.call(null,cljs.core.meta.call(null,new cljs.core.Var(function(){return clojure.data.xml.name.qname;},new cljs.core.Symbol("clojure.data.xml.name","qname","clojure.data.xml.name/qname",555473776,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.data.xml.name","clojure.data.xml.name",1709632289,null),new cljs.core.Symbol(null,"qname","qname",-343080652,null),"target/public/cljs-out/prod/clojure/data/xml/name.cljc",12,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"local","local",142764803,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"uri","uri",865819680,null),new cljs.core.Symbol(null,"local","local",142764803,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"uri","uri",865819680,null),new cljs.core.Symbol(null,"local","local",142764803,null),new cljs.core.Symbol(null,"_prefix","_prefix",991318540,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"local","local",142764803,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"uri","uri",865819680,null),new cljs.core.Symbol(null,"local","local",142764803,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"uri","uri",865819680,null),new cljs.core.Symbol(null,"local","local",142764803,null),new cljs.core.Symbol(null,"_prefix","_prefix",991318540,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,49,49,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"local","local",142764803,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"uri","uri",865819680,null),new cljs.core.Symbol(null,"local","local",142764803,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"uri","uri",865819680,null),new cljs.core.Symbol(null,"local","local",142764803,null),new cljs.core.Symbol(null,"_prefix","_prefix",991318540,null)], null)),null,(cljs.core.truth_(clojure.data.xml.name.qname)?clojure.data.xml.name.qname.cljs$lang$test:null)]))),new cljs.core.Keyword(null,"wrapped-by","wrapped-by",1051044074),new cljs.core.Var(function(){return clojure.data.xml.qname;},new cljs.core.Symbol("clojure.data.xml","qname","clojure.data.xml/qname",-1035338605,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"qname","qname",-343080652,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.qname)?clojure.data.xml.qname.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)))));

clojure.data.xml.as_qname = clojure.data.xml.name.as_qname;

cljs.core.alter_meta_BANG_.call(null,new cljs.core.Var(function(){return clojure.data.xml.as_qname;},new cljs.core.Symbol("clojure.data.xml","as-qname","clojure.data.xml/as-qname",322599212,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"as-qname","as-qname",-343491959,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.as_qname)?clojure.data.xml.as_qname.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly.call(null,cljs.core.assoc.call(null,cljs.core.meta.call(null,new cljs.core.Var(function(){return clojure.data.xml.name.as_qname;},new cljs.core.Symbol("clojure.data.xml.name","as-qname","clojure.data.xml.name/as-qname",812146893,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.data.xml.name","clojure.data.xml.name",1709632289,null),new cljs.core.Symbol(null,"as-qname","as-qname",-343491959,null),"target/public/cljs-out/prod/clojure/data/xml/name.cljc",15,1,84,84,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),null,(cljs.core.truth_(clojure.data.xml.name.as_qname)?clojure.data.xml.name.as_qname.cljs$lang$test:null)]))),new cljs.core.Keyword(null,"wrapped-by","wrapped-by",1051044074),new cljs.core.Var(function(){return clojure.data.xml.as_qname;},new cljs.core.Symbol("clojure.data.xml","as-qname","clojure.data.xml/as-qname",322599212,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"as-qname","as-qname",-343491959,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.as_qname)?clojure.data.xml.as_qname.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)))));

clojure.data.xml.uri_symbol = clojure.data.xml.name.uri_symbol;

cljs.core.alter_meta_BANG_.call(null,new cljs.core.Var(function(){return clojure.data.xml.uri_symbol;},new cljs.core.Symbol("clojure.data.xml","uri-symbol","clojure.data.xml/uri-symbol",703185909,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"uri-symbol","uri-symbol",-793966768,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.uri_symbol)?clojure.data.xml.uri_symbol.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly.call(null,cljs.core.assoc.call(null,cljs.core.meta.call(null,new cljs.core.Var(function(){return clojure.data.xml.name.uri_symbol;},new cljs.core.Symbol("clojure.data.xml.name","uri-symbol","clojure.data.xml.name/uri-symbol",171694740,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.data.xml.name","clojure.data.xml.name",1709632289,null),new cljs.core.Symbol(null,"uri-symbol","uri-symbol",-793966768,null),"target/public/cljs-out/prod/clojure/data/xml/name.cljc",17,1,30,30,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"uri","uri",865819680,null)], null)),null,(cljs.core.truth_(clojure.data.xml.name.uri_symbol)?clojure.data.xml.name.uri_symbol.cljs$lang$test:null)]))),new cljs.core.Keyword(null,"wrapped-by","wrapped-by",1051044074),new cljs.core.Var(function(){return clojure.data.xml.uri_symbol;},new cljs.core.Symbol("clojure.data.xml","uri-symbol","clojure.data.xml/uri-symbol",703185909,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"uri-symbol","uri-symbol",-793966768,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.uri_symbol)?clojure.data.xml.uri_symbol.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)))));

clojure.data.xml.symbol_uri = clojure.data.xml.name.symbol_uri;

cljs.core.alter_meta_BANG_.call(null,new cljs.core.Var(function(){return clojure.data.xml.symbol_uri;},new cljs.core.Symbol("clojure.data.xml","symbol-uri","clojure.data.xml/symbol-uri",695933298,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"symbol-uri","symbol-uri",12535007,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.symbol_uri)?clojure.data.xml.symbol_uri.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly.call(null,cljs.core.assoc.call(null,cljs.core.meta.call(null,new cljs.core.Var(function(){return clojure.data.xml.name.symbol_uri;},new cljs.core.Symbol("clojure.data.xml.name","symbol-uri","clojure.data.xml.name/symbol-uri",1311604243,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.data.xml.name","clojure.data.xml.name",1709632289,null),new cljs.core.Symbol(null,"symbol-uri","symbol-uri",12535007,null),"target/public/cljs-out/prod/clojure/data/xml/name.cljc",17,1,33,33,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ss","ss",177481949,null)], null)),null,(cljs.core.truth_(clojure.data.xml.name.symbol_uri)?clojure.data.xml.name.symbol_uri.cljs$lang$test:null)]))),new cljs.core.Keyword(null,"wrapped-by","wrapped-by",1051044074),new cljs.core.Var(function(){return clojure.data.xml.symbol_uri;},new cljs.core.Symbol("clojure.data.xml","symbol-uri","clojure.data.xml/symbol-uri",695933298,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"symbol-uri","symbol-uri",12535007,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.symbol_uri)?clojure.data.xml.symbol_uri.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)))));

clojure.data.xml.element_STAR_ = clojure.data.xml.node.element_STAR_;

cljs.core.alter_meta_BANG_.call(null,new cljs.core.Var(function(){return clojure.data.xml.element_STAR_;},new cljs.core.Symbol("clojure.data.xml","element*","clojure.data.xml/element*",-1685549580,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"element*","element*",1925988439,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.element_STAR_)?clojure.data.xml.element_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly.call(null,cljs.core.assoc.call(null,cljs.core.meta.call(null,new cljs.core.Var(function(){return clojure.data.xml.node.element_STAR_;},new cljs.core.Symbol("clojure.data.xml.node","element*","clojure.data.xml.node/element*",-1204115558,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.data.xml.node","clojure.data.xml.node",1098224825,null),new cljs.core.Symbol(null,"element*","element*",1925988439,null),"target/public/cljs-out/prod/clojure/data/xml/node.cljc",15,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),4,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),4,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"attrs","attrs",-450137186,null),new cljs.core.Symbol(null,"content","content",1656364751,null),new cljs.core.Symbol(null,"meta","meta",-1154898805,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"attrs","attrs",-450137186,null),new cljs.core.Symbol(null,"content","content",1656364751,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"attrs","attrs",-450137186,null),new cljs.core.Symbol(null,"content","content",1656364751,null),new cljs.core.Symbol(null,"meta","meta",-1154898805,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"attrs","attrs",-450137186,null),new cljs.core.Symbol(null,"content","content",1656364751,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,185,185,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"attrs","attrs",-450137186,null),new cljs.core.Symbol(null,"content","content",1656364751,null),new cljs.core.Symbol(null,"meta","meta",-1154898805,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"attrs","attrs",-450137186,null),new cljs.core.Symbol(null,"content","content",1656364751,null)], null)),"Create an xml element from a content collection and optional metadata",(cljs.core.truth_(clojure.data.xml.node.element_STAR_)?clojure.data.xml.node.element_STAR_.cljs$lang$test:null)]))),new cljs.core.Keyword(null,"wrapped-by","wrapped-by",1051044074),new cljs.core.Var(function(){return clojure.data.xml.element_STAR_;},new cljs.core.Symbol("clojure.data.xml","element*","clojure.data.xml/element*",-1685549580,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"element*","element*",1925988439,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.element_STAR_)?clojure.data.xml.element_STAR_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)))));

clojure.data.xml.element = clojure.data.xml.node.element;

cljs.core.alter_meta_BANG_.call(null,new cljs.core.Var(function(){return clojure.data.xml.element;},new cljs.core.Symbol("clojure.data.xml","element","clojure.data.xml/element",-935472879,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"element","element",-680416020,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.element)?clojure.data.xml.element.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly.call(null,cljs.core.assoc.call(null,cljs.core.meta.call(null,new cljs.core.Var(function(){return clojure.data.xml.node.element;},new cljs.core.Symbol("clojure.data.xml.node","element","clojure.data.xml.node/element",-377238721,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.data.xml.node","clojure.data.xml.node",1098224825,null),new cljs.core.Symbol(null,"element","element",-680416020,null),"target/public/cljs-out/prod/clojure/data/xml/node.cljc",14,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag","tag",350170304,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"attrs","attrs",-450137186,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag","tag",350170304,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"attrs","attrs",-450137186,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"attrs","attrs",-450137186,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"content","content",1656364751,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,201,201,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag","tag",350170304,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"attrs","attrs",-450137186,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"attrs","attrs",-450137186,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"content","content",1656364751,null)], null)),"Create an xml Element from content varargs",(cljs.core.truth_(clojure.data.xml.node.element)?clojure.data.xml.node.element.cljs$lang$test:null)]))),new cljs.core.Keyword(null,"wrapped-by","wrapped-by",1051044074),new cljs.core.Var(function(){return clojure.data.xml.element;},new cljs.core.Symbol("clojure.data.xml","element","clojure.data.xml/element",-935472879,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"element","element",-680416020,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.element)?clojure.data.xml.element.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)))));

clojure.data.xml.cdata = clojure.data.xml.node.cdata;

cljs.core.alter_meta_BANG_.call(null,new cljs.core.Var(function(){return clojure.data.xml.cdata;},new cljs.core.Symbol("clojure.data.xml","cdata","clojure.data.xml/cdata",88405792,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"cdata","cdata",1008251779,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.cdata)?clojure.data.xml.cdata.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly.call(null,cljs.core.assoc.call(null,cljs.core.meta.call(null,new cljs.core.Var(function(){return clojure.data.xml.node.cdata;},new cljs.core.Symbol("clojure.data.xml.node","cdata","clojure.data.xml.node/cdata",1703596342,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.data.xml.node","clojure.data.xml.node",1098224825,null),new cljs.core.Symbol(null,"cdata","cdata",1008251779,null),"target/public/cljs-out/prod/clojure/data/xml/node.cljc",12,1,207,207,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"content","content",1656364751,null)], null)),"Create a CData node",(cljs.core.truth_(clojure.data.xml.node.cdata)?clojure.data.xml.node.cdata.cljs$lang$test:null)]))),new cljs.core.Keyword(null,"wrapped-by","wrapped-by",1051044074),new cljs.core.Var(function(){return clojure.data.xml.cdata;},new cljs.core.Symbol("clojure.data.xml","cdata","clojure.data.xml/cdata",88405792,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"cdata","cdata",1008251779,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.cdata)?clojure.data.xml.cdata.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)))));

clojure.data.xml.xml_comment = clojure.data.xml.node.xml_comment;

cljs.core.alter_meta_BANG_.call(null,new cljs.core.Var(function(){return clojure.data.xml.xml_comment;},new cljs.core.Symbol("clojure.data.xml","xml-comment","clojure.data.xml/xml-comment",1278736895,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"xml-comment","xml-comment",-1142274982,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.xml_comment)?clojure.data.xml.xml_comment.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly.call(null,cljs.core.assoc.call(null,cljs.core.meta.call(null,new cljs.core.Var(function(){return clojure.data.xml.node.xml_comment;},new cljs.core.Symbol("clojure.data.xml.node","xml-comment","clojure.data.xml.node/xml-comment",1833296789,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.data.xml.node","clojure.data.xml.node",1098224825,null),new cljs.core.Symbol(null,"xml-comment","xml-comment",-1142274982,null),"target/public/cljs-out/prod/clojure/data/xml/node.cljc",18,1,212,212,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"content","content",1656364751,null)], null)),"Create a Comment node",(cljs.core.truth_(clojure.data.xml.node.xml_comment)?clojure.data.xml.node.xml_comment.cljs$lang$test:null)]))),new cljs.core.Keyword(null,"wrapped-by","wrapped-by",1051044074),new cljs.core.Var(function(){return clojure.data.xml.xml_comment;},new cljs.core.Symbol("clojure.data.xml","xml-comment","clojure.data.xml/xml-comment",1278736895,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"xml-comment","xml-comment",-1142274982,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.xml_comment)?clojure.data.xml.xml_comment.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)))));

clojure.data.xml.element_QMARK_ = clojure.data.xml.node.element_QMARK_;

cljs.core.alter_meta_BANG_.call(null,new cljs.core.Var(function(){return clojure.data.xml.element_QMARK_;},new cljs.core.Symbol("clojure.data.xml","element?","clojure.data.xml/element?",-550843616,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"element?","element?",-134836339,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.element_QMARK_)?clojure.data.xml.element_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly.call(null,cljs.core.assoc.call(null,cljs.core.meta.call(null,new cljs.core.Var(function(){return clojure.data.xml.node.element_QMARK_;},new cljs.core.Symbol("clojure.data.xml.node","element?","clojure.data.xml.node/element?",543485242,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.data.xml.node","clojure.data.xml.node",1098224825,null),new cljs.core.Symbol(null,"element?","element?",-134836339,null),"target/public/cljs-out/prod/clojure/data/xml/node.cljc",15,1,226,226,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"el","el",22330409,null)], null)),null,(cljs.core.truth_(clojure.data.xml.node.element_QMARK_)?clojure.data.xml.node.element_QMARK_.cljs$lang$test:null)]))),new cljs.core.Keyword(null,"wrapped-by","wrapped-by",1051044074),new cljs.core.Var(function(){return clojure.data.xml.element_QMARK_;},new cljs.core.Symbol("clojure.data.xml","element?","clojure.data.xml/element?",-550843616,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"element?","element?",-134836339,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.element_QMARK_)?clojure.data.xml.element_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)))));

clojure.data.xml.extend_dom_as_data_BANG_ = clojure.data.xml.js.dom.extend_dom_as_data_BANG_;

cljs.core.alter_meta_BANG_.call(null,new cljs.core.Var(function(){return clojure.data.xml.extend_dom_as_data_BANG_;},new cljs.core.Symbol("clojure.data.xml","extend-dom-as-data!","clojure.data.xml/extend-dom-as-data!",2101916080,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"extend-dom-as-data!","extend-dom-as-data!",1723141133,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.extend_dom_as_data_BANG_)?clojure.data.xml.extend_dom_as_data_BANG_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly.call(null,cljs.core.assoc.call(null,cljs.core.meta.call(null,new cljs.core.Var(function(){return clojure.data.xml.js.dom.extend_dom_as_data_BANG_;},new cljs.core.Symbol("clojure.data.xml.js.dom","extend-dom-as-data!","clojure.data.xml.js.dom/extend-dom-as-data!",871842435,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.data.xml.js.dom","clojure.data.xml.js.dom",-1545277890,null),new cljs.core.Symbol(null,"extend-dom-as-data!","extend-dom-as-data!",1723141133,null),"target/public/cljs-out/prod/clojure/data/xml/js/dom.cljs",26,1,180,180,cljs.core.list(cljs.core.PersistentVector.EMPTY),null,(cljs.core.truth_(clojure.data.xml.js.dom.extend_dom_as_data_BANG_)?clojure.data.xml.js.dom.extend_dom_as_data_BANG_.cljs$lang$test:null)]))),new cljs.core.Keyword(null,"wrapped-by","wrapped-by",1051044074),new cljs.core.Var(function(){return clojure.data.xml.extend_dom_as_data_BANG_;},new cljs.core.Symbol("clojure.data.xml","extend-dom-as-data!","clojure.data.xml/extend-dom-as-data!",2101916080,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"extend-dom-as-data!","extend-dom-as-data!",1723141133,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.extend_dom_as_data_BANG_)?clojure.data.xml.extend_dom_as_data_BANG_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)))));

clojure.data.xml.element_node = clojure.data.xml.js.dom.element_node;

cljs.core.alter_meta_BANG_.call(null,new cljs.core.Var(function(){return clojure.data.xml.element_node;},new cljs.core.Symbol("clojure.data.xml","element-node","clojure.data.xml/element-node",1133911801,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"element-node","element-node",751452826,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.element_node)?clojure.data.xml.element_node.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly.call(null,cljs.core.assoc.call(null,cljs.core.meta.call(null,new cljs.core.Var(function(){return clojure.data.xml.js.dom.element_node;},new cljs.core.Symbol("clojure.data.xml.js.dom","element-node","clojure.data.xml.js.dom/element-node",789480,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.data.xml.js.dom","clojure.data.xml.js.dom",-1545277890,null),new cljs.core.Symbol(null,"element-node","element-node",751452826,null),"target/public/cljs-out/prod/clojure/data/xml/js/dom.cljs",19,1,97,97,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"el","el",22330409,null)], null)),"Coerce xml elements to dom nodes",(cljs.core.truth_(clojure.data.xml.js.dom.element_node)?clojure.data.xml.js.dom.element_node.cljs$lang$test:null)]))),new cljs.core.Keyword(null,"wrapped-by","wrapped-by",1051044074),new cljs.core.Var(function(){return clojure.data.xml.element_node;},new cljs.core.Symbol("clojure.data.xml","element-node","clojure.data.xml/element-node",1133911801,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"element-node","element-node",751452826,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.element_node)?clojure.data.xml.element_node.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)))));

clojure.data.xml.element_data = clojure.data.xml.js.dom.element_data;

cljs.core.alter_meta_BANG_.call(null,new cljs.core.Var(function(){return clojure.data.xml.element_data;},new cljs.core.Symbol("clojure.data.xml","element-data","clojure.data.xml/element-data",-1187275535,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"element-data","element-data",1105680406,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.element_data)?clojure.data.xml.element_data.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)),cljs.core.constantly.call(null,cljs.core.assoc.call(null,cljs.core.meta.call(null,new cljs.core.Var(function(){return clojure.data.xml.js.dom.element_data;},new cljs.core.Symbol("clojure.data.xml.js.dom","element-data","clojure.data.xml.js.dom/element-data",2090962816,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"clojure.data.xml.js.dom","clojure.data.xml.js.dom",-1545277890,null),new cljs.core.Symbol(null,"element-data","element-data",1105680406,null),"target/public/cljs-out/prod/clojure/data/xml/js/dom.cljs",19,1,154,154,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"el","el",22330409,null)], null)),"Coerce xml elements to element maps / content vectors",(cljs.core.truth_(clojure.data.xml.js.dom.element_data)?clojure.data.xml.js.dom.element_data.cljs$lang$test:null)]))),new cljs.core.Keyword(null,"wrapped-by","wrapped-by",1051044074),new cljs.core.Var(function(){return clojure.data.xml.element_data;},new cljs.core.Symbol("clojure.data.xml","element-data","clojure.data.xml/element-data",-1187275535,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"target/public/cljs-out/prod/clojure/data/xml.cljs",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"clojure.data.xml","clojure.data.xml",-1608931981,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"element-data","element-data",1105680406,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(clojure.data.xml.element_data)?clojure.data.xml.element_data.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null)))));
/**
 * Use DOMParser to parse xml string
 */
clojure.data.xml.parse_str = (function clojure$data$xml$parse_str(var_args){
var args__22092__auto__ = [];
var len__22082__auto___56537 = arguments.length;
var i__22083__auto___56538 = (0);
while(true){
if((i__22083__auto___56538 < len__22082__auto___56537)){
args__22092__auto__.push((arguments[i__22083__auto___56538]));

var G__56539 = (i__22083__auto___56538 + (1));
i__22083__auto___56538 = G__56539;
continue;
} else {
}
break;
}

var argseq__22093__auto__ = ((((1) < args__22092__auto__.length))?(new cljs.core.IndexedSeq(args__22092__auto__.slice((1)),(0),null)):null);
return clojure.data.xml.parse_str.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__22093__auto__);
});

(clojure.data.xml.parse_str.cljs$core$IFn$_invoke$arity$variadic = (function (s,p__56535){
var map__56536 = p__56535;
var map__56536__$1 = cljs.core.__destructure_map.call(null,map__56536);
var content_type = cljs.core.get.call(null,map__56536__$1,new cljs.core.Keyword(null,"content-type","content-type",-508222634),"text/xml");
var on_error = cljs.core.get.call(null,map__56536__$1,new cljs.core.Keyword(null,"on-error","on-error",1728533530),(function (p1__56532_SHARP_){
throw cljs.core.ex_info.call(null,"XML parser error",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"doc","doc",1913296891),p1__56532_SHARP_,new cljs.core.Keyword(null,"input","input",556931961),s], null));
}));
var raw = cljs.core.get.call(null,map__56536__$1,new cljs.core.Keyword(null,"raw","raw",1604651272));
var dom = (new DOMParser()).parseFromString(s,content_type);
var doc = dom.documentElement;
if(cljs.core._EQ_.call(null,"parsererror",doc.nodeName)){
return on_error.call(null,doc);
} else {
if(cljs.core.truth_(raw)){
return doc;
} else {
return clojure.data.xml.element_data.call(null,doc);

}
}
}));

(clojure.data.xml.parse_str.cljs$lang$maxFixedArity = (1));

/** @this {Function} */
(clojure.data.xml.parse_str.cljs$lang$applyTo = (function (seq56533){
var G__56534 = cljs.core.first.call(null,seq56533);
var seq56533__$1 = cljs.core.next.call(null,seq56533);
var self__22067__auto__ = this;
return self__22067__auto__.cljs$core$IFn$_invoke$arity$variadic(G__56534,seq56533__$1);
}));

/**
 * Use XMLSerializer to render an xml string
 */
clojure.data.xml.emit_str = (function clojure$data$xml$emit_str(var_args){
var args__22092__auto__ = [];
var len__22082__auto___56544 = arguments.length;
var i__22083__auto___56545 = (0);
while(true){
if((i__22083__auto___56545 < len__22082__auto___56544)){
args__22092__auto__.push((arguments[i__22083__auto___56545]));

var G__56546 = (i__22083__auto___56545 + (1));
i__22083__auto___56545 = G__56546;
continue;
} else {
}
break;
}

var argseq__22093__auto__ = ((((1) < args__22092__auto__.length))?(new cljs.core.IndexedSeq(args__22092__auto__.slice((1)),(0),null)):null);
return clojure.data.xml.emit_str.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__22093__auto__);
});

(clojure.data.xml.emit_str.cljs$core$IFn$_invoke$arity$variadic = (function (e,p__56542){
var map__56543 = p__56542;
var map__56543__$1 = cljs.core.__destructure_map.call(null,map__56543);
return (new XMLSerializer()).serializeToString(clojure.data.xml.element_node.call(null,e));
}));

(clojure.data.xml.emit_str.cljs$lang$maxFixedArity = (1));

/** @this {Function} */
(clojure.data.xml.emit_str.cljs$lang$applyTo = (function (seq56540){
var G__56541 = cljs.core.first.call(null,seq56540);
var seq56540__$1 = cljs.core.next.call(null,seq56540);
var self__22067__auto__ = this;
return self__22067__auto__.cljs$core$IFn$_invoke$arity$variadic(G__56541,seq56540__$1);
}));

